%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Accounting app vector illustration.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 2/5/2020
%%BoundingBox: 0 0 2500 2000
%%HiResBoundingBox: 0 0 2500 2000
%%CropBox: 0 0 2500 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Accounting app vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Accounting app vector illustration. Professionals working on financial reports, analyzing data sheet. Team of accountant using bookkeeping software</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>image</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>accountant</rdf:li>
               <rdf:li>developer</rdf:li>
               <rdf:li>team</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>report</rdf:li>
               <rdf:li>professional</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>laptop</rdf:li>
               <rdf:li>magnifier</rdf:li>
               <rdf:li>analyzing financial</rdf:li>
               <rdf:li>data</rdf:li>
               <rdf:li>sheet</rdf:li>
               <rdf:li>table</rdf:li>
               <rdf:li>working</rdf:li>
               <rdf:li>bookkeeping software</rdf:li>
               <rdf:li>app</rdf:li>
               <rdf:li>application</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>analysis</rdf:li>
               <rdf:li>information</rdf:li>
               <rdf:li>budget</rdf:li>
               <rdf:li>income</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>system</rdf:li>
               <rdf:li>finance</rdf:li>
               <rdf:li>research</rdf:li>
               <rdf:li>graph</rdf:li>
               <rdf:li>chart</rdf:li>
               <rdf:li>infographics</rdf:li>
               <rdf:li>statistics</rdf:li>
               <rdf:li>office</rdf:li>
               <rdf:li>megaphone</rdf:li>
               <rdf:li>currency</rdf:li>
               <rdf:li>deadline</rdf:li>
               <rdf:li>counting</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-02-05T15:47:40+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-02-05T15:47:41+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-02-05T15:47:41+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:61E28A041E48EA119453A3DC36AEC7C8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:61E28A041E48EA119453A3DC36AEC7C8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fb024442-21ea-214a-85a6-c794aac151ae</stRef:instanceID>
            <stRef:documentID>xmp.did:13F424814738EA11B64A807947707A5C</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7d02ce1f-2862-1b47-9326-34e09212eb81</stEvt:instanceID>
                  <stEvt:when>2020-01-12T14:33:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4997d24d-c6c8-b84c-afc3-718ade4509b5</stEvt:instanceID>
                  <stEvt:when>2020-01-13T22:40:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13F424814738EA11B64A807947707A5C</stEvt:instanceID>
                  <stEvt:when>2020-01-16T12:04:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fb024442-21ea-214a-85a6-c794aac151ae</stEvt:instanceID>
                  <stEvt:when>2020-01-26T23:10:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:61E28A041E48EA119453A3DC36AEC7C8</stEvt:instanceID>
                  <stEvt:when>2020-02-05T15:47:41+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2500.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=37 B=125</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2500 2000 li
2500 0 li
cp
clp
2500 2000 mo
0 2000 li
0 0 li
2500 0 li
2500 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
2088.8 1653.84 mo
401.645 1653.84 li
330.412 1653.84 272.667 1596.1 272.667 1524.86 cv
272.667 1524.14 li
2217.78 1524.14 li
2217.78 1524.86 li
2217.78 1596.1 2160.03 1653.84 2088.8 1653.84 cv
cp
.784314 .780392 .839216 rgb
f
2142.08 1321.21 mo
1928.94 1144.44 li
1915.39 1133.21 1913.52 1113.12 1924.75 1099.58 cv
2018.21 986.886 li
2029.45 973.341 2049.53 971.467 2063.08 982.701 cv
2276.22 1159.47 li
2289.77 1170.71 2291.64 1190.79 2280.41 1204.34 cv
2186.95 1317.03 li
2175.71 1330.57 2155.63 1332.45 2142.08 1321.21 cv
cp
.8 .780392 .992157 rgb
f
2276.22 1159.47 mo
2063.08 982.701 li
2053.59 974.836 2040.9 973.396 2030.29 977.889 cv
2036.1 978.623 2041.77 980.962 2046.61 984.975 cv
2259.75 1161.75 li
2273.3 1172.98 2275.17 1193.07 2263.94 1206.61 cv
2170.48 1319.3 li
2167.11 1323.36 2162.94 1326.38 2158.4 1328.3 cv
2168.85 1329.62 2179.73 1325.74 2186.95 1317.03 cv
2280.41 1204.34 li
2291.64 1190.79 2289.77 1170.71 2276.22 1159.47 cv
cp
.643137 .666667 .803922 rgb
f
2101.09 1072.88 mo
2103.81 1054.59 li
2104.6 1049.3 2102.19 1044.04 2097.67 1041.17 cv
1990.62 973.293 li
1984.3 969.292 1975.95 971.164 1971.94 977.475 cv
1925.86 1050.17 li
1926.04 1050.29 li
1839.18 1187.29 li
1835.18 1193.6 1837.05 1201.96 1843.36 1205.96 cv
2159.15 1406.19 li
2165.46 1410.19 2173.82 1408.32 2177.83 1402.01 cv
2293.12 1220.18 li
2297.12 1213.87 2295.24 1205.51 2288.93 1201.5 cv
2107.22 1086.29 li
2102.71 1083.43 2100.3 1078.17 2101.09 1072.88 cv
cp
level3{
gsave
clp
[458.147 0 0 458.147 1837.07 1189.74 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .721569 0 ]
/C1 [1 .784314 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[458.147 0 0 458.147 1837.07 1189.74 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2orrr2orrr2orrr2orrr2orrr2or
~>
<~\@B&Y\@B&Y\@B&Y\@B&Y\[f8]\[f8]\[f8]\[f8]]"5Ja]"5Ja]"5Ja]"5Ja]=Y\e]=Y\e]=Y\e]=Y\e
]Y(ni]Y(ni]Y(ni]Y(ni]tM+m]tM+m]tM+m]tM+m^:q=q^:q=q^:q=q^:q=q^V@Ou^V@Ou^V@Ou^V@Ou
^qdb$^qdb$^qdb$^qdb$_83t(_83t(_83t(_83t(_SX1,_SX1,_SX1,_SX1,_o'C0_o'C0_o'C0_o'C0
`5KU4`5KU4`5KU4`5KU4`Pog8`Pog8`Pog8`Pog8`l?$<`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@a2c6@
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
2073.55 1047.62 mo
1998.77 1000.2 li
1991.1 995.342 1980.91 997.624 1976.05 1005.29 cv
1928.39 1080.45 li
1928.58 1080.58 li
1855.32 1196.13 li
1853.24 1199.4 1858.19 1202.54 1860.27 1199.27 cv
1936.67 1078.76 li
1936.48 1078.64 li
1981 1008.43 li
1984.13 1003.49 1990.69 1002.02 1995.63 1005.15 cv
2070.41 1052.57 li
2071.78 1053.43 2073.59 1053.03 2074.46 1051.66 cv
2075.32 1050.29 2074.92 1048.48 2073.55 1047.62 cv
cp
level3{
gsave
clp
[91.1549 57.8016 -57.8016 91.1549 1919.21 1094.92 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[91.1549 57.8016 -57.8016 91.1549 1919.21 1094.92 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
877.714 1121.85 mo
719.853 1182.18 542.342 1102.83 482.013 944.968 cv
421.684 787.108 501.031 609.596 658.892 549.267 cv
816.753 488.937 994.264 568.285 1054.59 726.146 cv
1114.92 884.006 1035.57 1061.52 877.714 1121.85 cv
.505882 .647059 .882353 rgb
f
874.866 1114.39 mo
721.114 1173.15 548.225 1095.87 489.466 942.119 cv
430.707 788.368 507.989 615.479 661.74 556.719 cv
815.492 497.96 988.381 575.243 1047.14 728.994 cv
1105.9 882.746 1028.62 1055.63 874.866 1114.39 cv
1 .670588 0 rgb
f
1021.34 740.362 mo
1074.64 879.832 1004.78 1036.1 865.315 1089.4 cv
725.846 1142.7 569.575 1072.85 516.275 933.382 cv
462.974 793.912 532.826 637.642 672.296 584.34 cv
811.765 531.04 968.037 600.894 1021.34 740.362 cv
.505882 .647059 .882353 rgb
f
859.786 1074.94 mo
727.792 1125.38 579.368 1059.03 528.924 927.039 cv
478.48 795.045 544.825 646.622 676.82 596.178 cv
808.815 545.734 957.238 612.08 1007.68 744.074 cv
1058.13 876.068 991.78 1024.49 859.786 1074.94 cv
.8 .780392 .992157 rgb
f
565.737 898.99 mo
524.792 914.639 li
518.063 917.21 514.682 924.773 517.253 931.501 cv
519.824 938.229 527.389 941.609 534.116 939.038 cv
575.062 923.39 li
581.79 920.818 585.171 913.255 582.601 906.527 cv
580.029 899.799 572.465 896.419 565.737 898.99 cv
cp
.505882 .647059 .882353 rgb
f
839.274 1021.26 mo
832.546 1023.83 829.164 1031.4 831.736 1038.12 cv
847.383 1079.07 li
849.955 1085.8 857.519 1089.18 864.247 1086.61 cv
870.974 1084.04 874.357 1076.47 871.785 1069.74 cv
856.137 1028.8 li
853.566 1022.07 846.002 1018.69 839.274 1021.26 cv
f
1002.49 732.077 mo
961.545 747.725 li
954.818 750.296 951.435 757.86 954.006 764.588 cv
956.577 771.316 964.142 774.695 970.87 772.124 cv
1011.82 756.476 li
1018.54 753.905 1021.93 746.342 1019.35 739.614 cv
1016.78 732.886 1009.22 729.506 1002.49 732.077 cv
f
672.36 584.508 mo
665.633 587.079 662.251 594.643 664.822 601.371 cv
680.47 642.316 li
683.041 649.044 690.605 652.424 697.333 649.853 cv
704.061 647.281 707.443 639.718 704.872 632.99 cv
689.224 592.045 li
686.652 585.317 679.088 581.937 672.36 584.508 cv
cp
f
769.941 490.528 mo
774.88 442.272 li
775.286 438.312 778.824 435.43 782.784 435.835 cv
838.14 441.501 li
842.1 441.907 844.981 445.445 844.576 449.405 cv
839.637 497.661 li
839.231 501.625 835.689 504.508 831.727 504.103 cv
776.383 498.438 li
772.42 498.033 769.536 494.491 769.941 490.528 cv
cp
1 .670588 0 rgb
f
839.933 437.774 mo
840.131 435.838 li
840.514 432.097 838.886 428.864 836.494 428.62 cv
787.005 423.554 li
784.614 423.309 782.364 426.145 781.981 429.887 cv
781.783 431.823 li
839.933 437.774 li
cp
f
826.694 528.553 mo
828.826 507.716 li
778.491 502.564 li
776.392 523.073 li
793.366 523.535 810.186 525.385 826.694 528.553 cv
cp
f
539.816 578.475 mo
503.952 545.812 li
501.009 543.132 496.451 543.345 493.771 546.288 cv
456.303 587.428 li
453.622 590.371 453.835 594.929 456.778 597.609 cv
492.642 630.272 li
495.587 632.955 500.149 632.741 502.832 629.796 cv
540.292 588.665 li
542.975 585.72 542.761 581.157 539.816 578.475 cv
cp
f
452.481 585.847 mo
451.042 584.536 li
448.261 582.003 447.318 578.509 448.938 576.731 cv
482.435 539.952 li
484.053 538.174 487.62 538.787 490.401 541.32 cv
491.84 542.63 li
452.481 585.847 li
cp
f
555.861 606.249 mo
541.473 593.145 li
507.402 630.554 li
521.707 643.581 li
532.008 630.304 543.417 617.807 555.861 606.249 cv
cp
f
609.401 505.505 mo
605.788 506.886 601.726 505.07 600.343 501.452 cv
587.878 468.834 li
586.495 465.216 588.311 461.154 591.924 459.773 cv
658.49 434.333 li
662.103 432.953 666.165 434.769 667.548 438.387 cv
680.013 471.004 li
681.396 474.623 679.58 478.685 675.967 480.066 cv
609.401 505.505 li
cp
f
657.362 431.525 mo
656.822 430.11 li
655.777 427.376 652.714 426.007 649.98 427.052 cv
593.408 448.672 li
590.675 449.717 589.306 452.78 590.35 455.514 cv
590.891 456.928 li
657.362 431.525 li
cp
f
711.54 407.173 mo
692.863 358.303 637.909 333.738 589.039 352.415 cv
540.169 371.091 515.605 426.045 534.282 474.916 cv
550.165 516.476 592.284 540.457 634.586 535.214 cv
627.861 517.616 li
595.187 519.739 563.555 500.619 551.253 468.429 cv
536.129 428.854 555.95 384.511 595.525 369.387 cv
635.101 354.262 679.443 374.083 694.568 413.659 cv
706.87 445.849 696.052 481.191 670.29 501.401 cv
677.015 518.999 li
712.032 494.693 727.422 448.733 711.54 407.173 cv
cp
f
656.714 543.567 mo
664.48 540.599 672.293 537.964 680.138 535.652 cv
662.15 488.586 li
625.379 502.639 li
643.142 549.119 li
647.601 547.174 652.124 545.321 656.714 543.567 cv
cp
f
789.337 827.203 mo
793.769 838.8 787.961 851.794 776.363 856.227 cv
764.766 860.659 751.772 854.851 747.34 843.253 cv
742.908 831.656 748.716 818.662 760.313 814.229 cv
771.911 809.797 784.905 815.606 789.337 827.203 cv
cp
.592157 .623529 .807843 rgb
f
798.095 652.306 mo
776.173 836.421 li
775.621 841.059 771.414 844.371 766.776 843.818 cv
762.138 843.267 758.826 839.059 759.378 834.421 cv
759.465 833.691 757.788 841.784 798.095 652.306 cv
cp
f
776.918 831.949 mo
778.729 836.688 776.356 841.997 771.617 843.808 cv
766.879 845.619 761.569 843.246 759.758 838.507 cv
757.947 833.769 760.321 828.459 765.06 826.648 cv
769.798 824.837 775.107 827.21 776.918 831.949 cv
cp
.0784314 .815686 .709804 rgb
f
934.37 902.557 mo
934.039 902.683 933.661 902.689 933.305 902.544 cv
769.599 835.88 li
768.857 835.58 768.5 834.732 768.803 833.991 cv
769.106 833.25 769.948 832.89 770.692 833.195 cv
934.399 899.859 li
935.141 900.16 935.497 901.007 935.195 901.748 cv
935.036 902.135 934.732 902.418 934.37 902.557 cv
f
864.247 684.677 mo
864.247 1073.18 li
993.267 1021.12 1057.55 874.572 1007.68 744.074 cv
991.975 702.973 966.767 668.24 935.514 641.414 cv
907.509 641.414 li
883.616 641.414 864.247 660.783 864.247 684.677 cv
.376471 .564706 .996078 rgb
f
864.247 684.677 mo
864.247 1089.8 li
864.603 1089.67 864.959 1089.54 865.315 1089.4 cv
1004.78 1036.1 1074.64 879.832 1021.34 740.362 cv
1006.53 701.626 983.783 668.263 955.659 641.414 cv
907.509 641.414 li
883.616 641.414 864.247 660.783 864.247 684.677 cv
f
864.247 684.677 mo
864.247 1118.22 li
867.795 1117.02 871.336 1115.74 874.866 1114.39 cv
1028.62 1055.63 1105.9 882.745 1047.14 728.994 cv
1034.57 696.107 1016.78 666.721 995.069 641.414 cv
907.509 641.414 li
883.616 641.414 864.247 660.783 864.247 684.677 cv
f
1014.68 653.217 mo
1004.69 653.217 li
1001.58 649.197 998.367 645.249 995.078 641.414 cv
1005.48 641.414 li
1008.64 645.261 1011.7 649.197 1014.68 653.217 cv
.486274 .498039 .65098 rgb
f
1004.69 653.217 mo
1004.68 653.217 li
1001.57 649.189 998.364 645.256 995.069 641.414 cv
995.078 641.414 li
998.367 645.249 1001.58 649.197 1004.69 653.217 cv
.964706 .513725 0 rgb
f
893.394 814.192 mo
864.247 814.192 li
864.247 684.677 li
864.247 660.783 883.616 641.414 907.509 641.414 cv
995.069 641.414 li
998.364 645.256 1001.57 649.189 1004.68 653.217 cv
935.518 653.217 li
912.253 653.217 893.394 672.076 893.394 695.341 cv
893.394 814.192 li
.360784 .435294 .737255 rgb
f
778.355 1524.14 mo
936.967 1524.14 li
942.36 1524.14 946.732 1519.77 946.732 1514.38 cv
946.732 823.958 li
946.732 818.565 942.36 814.192 936.967 814.192 cv
778.355 814.192 li
772.962 814.192 768.589 818.565 768.589 823.958 cv
768.589 1514.38 li
768.589 1519.77 772.962 1524.14 778.355 1524.14 cv
1 .317647 .211765 rgb
f
961.141 1524.14 mo
1139.28 1524.14 li
1139.28 814.192 li
961.141 814.192 li
961.141 1524.14 li
cp
.94902 .945098 .992157 rgb
f
1159.59 1524.14 mo
1337.73 1524.14 li
1337.73 814.192 li
1159.59 814.192 li
1159.59 1524.14 li
cp
f
613.311 1524.14 mo
745.725 1524.14 li
751.119 1524.14 755.491 1519.77 755.491 1514.38 cv
755.491 928.035 li
755.491 922.642 751.119 918.269 745.725 918.269 cv
613.311 918.269 li
607.918 918.269 603.545 922.642 603.545 928.035 cv
603.545 1514.38 li
603.545 1519.77 607.918 1524.14 613.311 1524.14 cv
cp
.352941 .756863 .776471 rgb
f
443.028 1524.14 mo
575.441 1524.14 li
580.835 1524.14 585.207 1519.77 585.207 1514.38 cv
585.207 1186.37 li
585.207 1180.97 580.835 1176.6 575.441 1176.6 cv
443.028 1176.6 li
437.634 1176.6 433.262 1180.97 433.262 1186.37 cv
433.262 1514.38 li
433.262 1519.77 437.634 1524.14 443.028 1524.14 cv
cp
.32549 .501961 .835294 rgb
f
273.452 1524.14 mo
405.865 1524.14 li
411.259 1524.14 415.631 1519.77 415.631 1514.38 cv
415.631 1312.54 li
415.631 1307.15 411.259 1302.77 405.865 1302.77 cv
273.452 1302.77 li
268.058 1302.77 263.686 1307.15 263.686 1312.54 cv
263.686 1514.38 li
263.686 1519.77 268.058 1524.14 273.452 1524.14 cv
1 .223529 .113725 rgb
f
363.186 1483.81 mo
360.106 1511.37 li
369.17 1520.29 li
381.09 1513.2 li
381.09 1513.2 379.415 1508.05 378.778 1503.64 cv
378.141 1499.23 386.59 1478.39 386.59 1478.39 cv
363.186 1483.81 li
cp
.905882 .415686 .32549 rgb
f
359.15 1505.99 mo
359.15 1505.99 355.893 1510.54 355.047 1518.24 cv
354.202 1525.94 356.365 1533.17 356.365 1533.17 cv
356.365 1533.17 393.657 1535.27 408.26 1532.56 cv
422.864 1529.85 424.163 1527.29 423.798 1523.16 cv
423.434 1519.02 403.617 1520.26 397.689 1515.29 cv
391.761 1510.33 383.5 1499.67 379.994 1501.4 cv
376.487 1503.14 377.175 1509.79 372.434 1510.2 cv
367.693 1510.62 361.266 1503.46 359.15 1505.99 cv
cp
.0352941 .262745 .298039 rgb
f
245.772 1484.4 mo
223.378 1500.75 li
222.928 1513.46 li
236.211 1517.46 li
236.211 1517.46 238.874 1512.74 241.694 1509.29 cv
244.514 1505.84 265.585 1497.99 265.585 1497.99 cv
245.772 1484.4 li
cp
.905882 .415686 .32549 rgb
f
226.701 1496.41 mo
226.701 1496.41 221.14 1497.09 214.894 1501.67 cv
208.648 1506.25 204.781 1512.73 204.781 1512.73 cv
204.781 1512.73 228.438 1541.63 240.307 1550.57 cv
252.175 1559.5 254.936 1558.73 257.738 1555.66 cv
260.54 1552.6 246.232 1538.83 245.887 1531.1 cv
245.541 1523.38 247.813 1510.09 244.166 1508.67 cv
240.519 1507.26 236.083 1512.26 232.571 1509.05 cv
229.058 1505.84 229.992 1496.26 226.701 1496.41 cv
cp
.0352941 .262745 .298039 rgb
f
297.556 1267.12 mo
297.556 1267.12 314.101 1379.99 314.101 1393.98 cv
314.101 1407.98 235.208 1482.13 235.208 1482.13 cv
235.208 1482.13 237.873 1507.36 256.804 1509.92 cv
261.427 1510.55 349.63 1431.68 354.702 1419.9 cv
360.519 1406.39 376.468 1310.68 376.468 1310.68 cv
376.468 1310.68 412.254 1364.49 410.683 1375.58 cv
408.217 1392.99 354.702 1486.38 354.702 1486.38 cv
354.702 1486.38 362.005 1502.54 387.972 1491.37 cv
387.972 1491.37 459.421 1400.28 470.03 1389.67 cv
480.639 1379.06 393.189 1235.63 393.189 1235.63 cv
297.556 1267.12 li
0 .6 .627451 rgb
f
302.565 1301.97 mo
302.565 1301.97 li
301.874 1297.09 301.22 1292.5 300.625 1288.35 cv
301.22 1292.5 301.874 1297.09 302.565 1301.97 cv
.52549 .67451 .698039 rgb
f
322.421 1308.83 mo
317.52 1308.83 310.149 1306.01 302.565 1301.97 cv
301.874 1297.09 301.22 1292.5 300.625 1288.35 cv
300.426 1286.96 300.233 1285.61 300.048 1284.32 cv
307.244 1287.98 314.212 1290.53 318.867 1290.53 cv
319.53 1290.53 320.145 1290.48 320.709 1290.37 cv
328.635 1288.85 339.081 1277.27 339.081 1257.34 cv
339.081 1257.34 li
339.617 1257.07 340.157 1256.81 340.699 1256.55 cv
341.967 1262.44 342.881 1267.97 343.376 1273.06 cv
343.406 1273.04 li
343.406 1294.54 332.562 1307.03 324.333 1308.66 cv
323.748 1308.78 323.11 1308.83 322.421 1308.83 cv
.027451 .47451 .509804 rgb
f
297.556 1267.12 mo
306.318 1305.75 316.755 1370.47 317.956 1393.31 cv
320.666 1408.7 249.795 1470.34 235.208 1482.13 cv
261.687 1452.74 308.041 1404.71 310.132 1394.39 cv
309.523 1389.76 312.056 1406.66 306.667 1359.32 cv
305.554 1349.1 304.273 1338.9 303.223 1328.66 cv
300.99 1308.21 298.924 1287.72 297.556 1267.12 cv
cp
0 .45098 .470588 rgb
f
393.057 1242.88 mo
392.847 1242.88 392.637 1242.88 392.426 1242.87 cv
392.637 1242.88 392.847 1242.88 393.057 1242.88 cv
cp
0 .6 .627451 rgb
f
391.468 1242.87 mo
391.273 1242.87 391.079 1242.87 390.883 1242.87 cv
391.079 1242.87 391.273 1242.87 391.468 1242.87 cv
cp
f
400.127 1243.39 mo
399.923 1243.37 399.717 1243.34 399.512 1243.32 cv
399.717 1243.34 399.923 1243.37 400.127 1243.39 cv
cp
f
282.189 1060.37 mo
282.318 1060.4 282.447 1060.43 282.576 1060.46 cv
282.447 1060.43 282.318 1060.4 282.189 1060.37 cv
cp
f
394.65 1242.93 mo
394.414 1242.92 394.178 1242.91 393.941 1242.91 cv
394.178 1242.91 394.414 1242.92 394.65 1242.93 cv
cp
f
393.93 1242.9 mo
393.698 1242.9 393.465 1242.89 393.233 1242.89 cv
393.465 1242.89 393.698 1242.9 393.93 1242.9 cv
cp
f
390.711 1242.87 mo
390.485 1242.88 390.259 1242.88 390.034 1242.88 cv
390.259 1242.88 390.485 1242.88 390.711 1242.87 cv
cp
f
281.614 1060.23 mo
281.78 1060.27 281.946 1060.31 282.111 1060.35 cv
281.946 1060.31 281.78 1060.27 281.614 1060.23 cv
cp
f
389.113 1242.91 mo
388.875 1242.92 388.636 1242.93 388.397 1242.94 cv
388.636 1242.93 388.875 1242.92 389.113 1242.91 cv
cp
f
388.304 1242.94 mo
388.101 1242.95 387.898 1242.96 387.695 1242.97 cv
387.898 1242.96 388.101 1242.95 388.304 1242.94 cv
cp
f
389.834 1242.89 mo
389.652 1242.89 389.469 1242.9 389.286 1242.91 cv
389.469 1242.9 389.651 1242.89 389.834 1242.89 cv
cp
f
283.774 1060.77 mo
283.917 1060.8 284.059 1060.84 284.201 1060.88 cv
284.059 1060.84 283.917 1060.8 283.774 1060.77 cv
cp
f
284.791 1061.03 mo
285.296 1061.16 285.797 1061.3 286.293 1061.43 cv
285.797 1061.3 285.296 1061.16 284.791 1061.03 cv
cp
f
398.544 1243.21 mo
398.362 1243.19 398.18 1243.18 397.998 1243.16 cv
398.18 1243.18 398.362 1243.19 398.544 1243.21 cv
cp
f
286.372 1061.46 mo
286.5 1061.49 286.627 1061.53 286.754 1061.56 cv
286.627 1061.53 286.5 1061.49 286.372 1061.46 cv
cp
f
399.422 1243.31 mo
399.193 1243.28 398.964 1243.26 398.735 1243.23 cv
398.964 1243.26 399.193 1243.28 399.422 1243.31 cv
cp
f
397.825 1243.14 mo
397.594 1243.12 397.364 1243.1 397.132 1243.08 cv
397.364 1243.1 397.594 1243.12 397.825 1243.14 cv
cp
f
396.246 1243.02 mo
396.012 1243 395.779 1242.99 395.545 1242.98 cv
395.779 1242.99 396.012 1243 396.246 1243.02 cv
cp
f
395.434 1242.97 mo
395.231 1242.96 395.028 1242.95 394.826 1242.94 cv
395.028 1242.95 395.231 1242.96 395.434 1242.97 cv
cp
f
284.274 1060.9 mo
284.441 1060.94 284.607 1060.98 284.773 1061.03 cv
284.607 1060.98 284.441 1060.94 284.274 1060.9 cv
cp
f
397.001 1243.07 mo
396.805 1243.06 396.608 1243.04 396.411 1243.03 cv
396.608 1243.04 396.805 1243.06 397.001 1243.07 cv
cp
f
282.725 1060.5 mo
283.052 1060.58 283.377 1060.67 283.702 1060.75 cv
283.377 1060.67 283.052 1060.58 282.725 1060.5 cv
cp
f
380.277 1243.69 mo
380.045 1243.72 379.813 1243.75 379.582 1243.79 cv
379.813 1243.75 380.045 1243.72 380.277 1243.69 cv
cp
f
379.515 1243.8 mo
379.301 1243.83 379.088 1243.86 378.875 1243.9 cv
379.088 1243.86 379.301 1243.83 379.515 1243.8 cv
cp
f
275.542 1058.92 mo
275.713 1058.95 275.884 1058.98 276.055 1059.01 cv
275.884 1058.98 275.713 1058.95 275.542 1058.92 cv
cp
f
381.908 1243.48 mo
381.673 1243.5 381.439 1243.53 381.205 1243.56 cv
381.439 1243.53 381.674 1243.5 381.908 1243.48 cv
cp
f
276.104 1059.02 mo
276.469 1059.1 276.833 1059.17 277.196 1059.24 cv
276.833 1059.17 276.469 1059.1 276.104 1059.02 cv
cp
f
381.079 1243.58 mo
380.878 1243.61 380.676 1243.63 380.475 1243.66 cv
380.677 1243.63 380.878 1243.61 381.079 1243.58 cv
cp
f
377.036 1244.2 mo
376.853 1244.23 376.67 1244.27 376.488 1244.3 cv
376.67 1244.27 376.853 1244.23 377.036 1244.2 cv
cp
f
378.658 1243.93 mo
378.458 1243.96 378.258 1244 378.059 1244.03 cv
378.259 1244 378.458 1243.96 378.658 1243.93 cv
cp
f
274.406 1058.7 mo
274.578 1058.74 274.75 1058.77 274.921 1058.8 cv
274.75 1058.77 274.578 1058.74 274.406 1058.7 cv
cp
f
377.937 1244.05 mo
377.708 1244.08 377.48 1244.12 377.252 1244.16 cv
377.48 1244.12 377.708 1244.08 377.937 1244.05 cv
cp
f
274.975 1058.81 mo
275.155 1058.84 275.334 1058.88 275.513 1058.91 cv
275.334 1058.88 275.155 1058.84 274.975 1058.81 cv
cp
f
281.087 1060.1 mo
281.24 1060.14 281.393 1060.18 281.545 1060.21 cv
281.393 1060.18 281.24 1060.14 281.087 1060.1 cv
cp
f
385.867 1243.09 mo
385.67 1243.1 385.473 1243.12 385.276 1243.13 cv
385.473 1243.12 385.67 1243.1 385.867 1243.09 cv
cp
f
382.646 1243.39 mo
382.462 1243.41 382.278 1243.43 382.093 1243.45 cv
382.278 1243.43 382.462 1243.41 382.646 1243.39 cv
cp
f
279.99 1059.85 mo
280.337 1059.93 280.684 1060.01 281.028 1060.09 cv
280.683 1060.01 280.337 1059.93 279.99 1059.85 cv
cp
f
386.772 1243.02 mo
386.542 1243.04 386.31 1243.05 386.079 1243.07 cv
386.31 1243.05 386.542 1243.04 386.772 1243.02 cv
cp
f
387.477 1242.98 mo
387.245 1243 387.013 1243.01 386.781 1243.02 cv
387.013 1243.01 387.245 1243 387.477 1242.98 cv
cp
f
385.152 1243.14 mo
384.915 1243.16 384.677 1243.18 384.439 1243.21 cv
384.677 1243.18 384.915 1243.16 385.152 1243.14 cv
cp
f
383.525 1243.29 mo
383.295 1243.32 383.066 1243.34 382.836 1243.37 cv
383.066 1243.34 383.295 1243.32 383.525 1243.29 cv
cp
f
277.205 1059.25 mo
277.742 1059.36 278.277 1059.47 278.809 1059.59 cv
278.277 1059.47 277.742 1059.36 277.205 1059.25 cv
cp
f
384.279 1243.22 mo
384.085 1243.24 383.892 1243.26 383.698 1243.28 cv
383.892 1243.26 384.085 1243.24 384.279 1243.22 cv
cp
f
278.897 1059.61 mo
279.242 1059.68 279.585 1059.76 279.928 1059.84 cv
279.585 1059.76 279.242 1059.68 278.897 1059.61 cv
cp
f
403.256 1243.88 mo
403.032 1243.83 402.81 1243.8 402.586 1243.76 cv
402.81 1243.8 403.032 1243.83 403.256 1243.88 cv
cp
f
305.766 1068.04 mo
305.894 1068.09 li
305.766 1068.04 li
cp
f
294.062 1063.77 mo
294.607 1063.94 295.142 1064.12 295.663 1064.3 cv
295.142 1064.12 294.607 1063.94 294.062 1063.77 cv
cp
f
303.986 1067.32 mo
304.229 1067.42 li
303.986 1067.32 li
cp
f
302.33 1066.68 mo
302.598 1066.78 302.857 1066.88 303.107 1066.98 cv
302.857 1066.88 302.598 1066.78 302.33 1066.68 cv
cp
f
303.263 1067.04 mo
303.508 1067.14 303.746 1067.23 303.973 1067.32 cv
303.745 1067.23 303.509 1067.14 303.263 1067.04 cv
cp
f
293.573 1063.61 mo
293.71 1063.65 293.847 1063.7 293.983 1063.74 cv
293.847 1063.7 293.71 1063.65 293.573 1063.61 cv
cp
f
305.395 1067.88 mo
305.523 1067.94 305.647 1067.99 305.766 1068.04 cv
305.647 1067.99 305.523 1067.94 305.395 1067.88 cv
cp
f
292.225 1063.18 mo
292.358 1063.22 292.49 1063.26 292.622 1063.3 cv
292.49 1063.26 292.358 1063.22 292.225 1063.18 cv
cp
f
401.702 1243.62 mo
401.238 1243.54 400.773 1243.48 400.307 1243.42 cv
400.773 1243.48 401.238 1243.54 401.702 1243.62 cv
cp
f
304.508 1067.53 mo
304.635 1067.58 304.757 1067.63 304.876 1067.67 cv
304.757 1067.63 304.634 1067.58 304.508 1067.53 cv
cp
f
304.984 1067.72 mo
305.1 1067.76 305.211 1067.81 305.32 1067.85 cv
305.211 1067.81 305.1 1067.76 304.984 1067.72 cv
cp
f
304.26 1067.43 mo
304.409 1067.49 li
304.26 1067.43 li
cp
f
298.933 1065.43 mo
299.035 1065.47 299.135 1065.5 299.235 1065.54 cv
299.135 1065.5 299.035 1065.47 298.933 1065.43 cv
cp
f
299.301 1065.56 mo
299.396 1065.6 299.489 1065.63 299.582 1065.66 cv
299.489 1065.63 299.396 1065.6 299.301 1065.56 cv
cp
f
297.418 1064.9 mo
297.787 1065.02 298.147 1065.15 298.5 1065.28 cv
298.147 1065.15 297.787 1065.02 297.418 1064.9 cv
cp
f
298.566 1065.3 mo
298.681 1065.34 298.794 1065.38 298.907 1065.42 cv
298.794 1065.38 298.681 1065.34 298.566 1065.3 cv
cp
f
296.223 1064.49 mo
296.59 1064.61 296.952 1064.73 297.306 1064.86 cv
296.952 1064.73 296.59 1064.61 296.223 1064.49 cv
cp
f
302.068 1066.58 mo
302.275 1066.66 li
302.068 1066.58 li
cp
f
299.694 1065.7 mo
300.258 1065.91 300.797 1066.11 301.311 1066.3 cv
300.797 1066.11 300.258 1065.91 299.694 1065.7 cv
cp
f
301.696 1066.44 mo
301.936 1066.53 li
301.696 1066.44 li
cp
f
295.759 1064.33 mo
295.876 1064.37 295.994 1064.41 296.109 1064.45 cv
295.994 1064.41 295.876 1064.37 295.759 1064.33 cv
cp
f
301.445 1066.35 mo
301.659 1066.43 li
301.445 1066.35 li
cp
f
292.662 1063.32 mo
292.957 1063.41 293.249 1063.5 293.538 1063.6 cv
293.249 1063.5 292.957 1063.41 292.662 1063.32 cv
cp
f
287.87 1061.88 mo
288.029 1061.92 288.188 1061.97 288.346 1062.01 cv
288.188 1061.97 288.029 1061.92 287.87 1061.88 cv
cp
f
404.005 1244.02 mo
403.811 1243.98 403.617 1243.94 403.423 1243.91 cv
403.617 1243.94 403.811 1243.98 404.005 1244.02 cv
cp
f
404.818 1244.18 mo
404.591 1244.13 404.365 1244.09 404.137 1244.04 cv
404.364 1244.09 404.591 1244.13 404.818 1244.18 cv
cp
f
288.364 1062.02 mo
288.506 1062.06 288.647 1062.1 288.788 1062.14 cv
288.647 1062.1 288.506 1062.06 288.364 1062.02 cv
cp
f
406.375 1244.53 mo
406.149 1244.47 405.924 1244.42 405.697 1244.37 cv
405.924 1244.42 406.149 1244.47 406.375 1244.53 cv
cp
f
405.524 1244.33 mo
405.336 1244.29 405.148 1244.25 404.959 1244.21 cv
405.148 1244.25 405.336 1244.29 405.524 1244.33 cv
cp
f
402.452 1243.74 mo
402.255 1243.7 402.059 1243.67 401.861 1243.64 cv
402.059 1243.67 402.255 1243.7 402.452 1243.74 cv
cp
f
287.39 1061.74 mo
287.534 1061.78 287.677 1061.82 287.819 1061.86 cv
287.677 1061.82 287.534 1061.78 287.39 1061.74 cv
cp
f
286.882 1061.6 mo
287.027 1061.64 287.171 1061.68 287.315 1061.72 cv
287.171 1061.68 287.027 1061.64 286.882 1061.6 cv
cp
f
376.308 1244.33 mo
376.076 1244.37 375.845 1244.42 375.613 1244.46 cv
375.845 1244.42 376.076 1244.37 376.308 1244.33 cv
cp
f
306.652 1068.4 mo
306.822 1068.47 306.97 1068.54 307.096 1068.59 cv
306.97 1068.54 306.822 1068.47 306.652 1068.4 cv
cp
f
407.046 1244.69 mo
406.849 1244.64 406.652 1244.59 406.454 1244.55 cv
406.652 1244.59 406.849 1244.64 407.046 1244.69 cv
cp
f
307.101 1068.59 mo
307.284 1068.67 li
307.101 1068.59 li
cp
f
290.307 1062.59 mo
290.94 1062.78 291.562 1062.97 292.171 1063.16 cv
291.562 1062.97 290.94 1062.78 290.307 1062.59 cv
cp
f
307.37 1068.71 mo
307.522 1068.77 li
307.37 1068.71 li
cp
f
306.125 1068.18 mo
306.261 1068.24 306.386 1068.29 306.504 1068.34 cv
306.387 1068.29 306.261 1068.24 306.125 1068.18 cv
cp
f
289.841 1062.45 mo
289.997 1062.5 290.152 1062.54 290.306 1062.59 cv
290.152 1062.54 289.997 1062.5 289.841 1062.45 cv
cp
f
407.913 1244.92 mo
407.692 1244.86 407.471 1244.8 407.249 1244.74 cv
407.471 1244.8 407.692 1244.86 407.913 1244.92 cv
cp
f
307.604 1068.81 mo
307.616 1068.81 li
307.604 1068.81 li
cp
f
288.883 1062.17 mo
289.196 1062.26 289.506 1062.35 289.814 1062.44 cv
289.506 1062.35 289.196 1062.26 288.883 1062.17 cv
cp
f
307.537 1068.78 mo
307.604 1068.81 li
307.537 1068.78 li
cp
f
266.46 1057.57 mo
266.82 1057.6 267.18 1057.64 267.54 1057.68 cv
267.18 1057.64 266.82 1057.6 266.46 1057.57 cv
cp
f
355.634 1250.15 mo
355.511 1250.2 355.388 1250.24 355.265 1250.29 cv
355.388 1250.24 355.511 1250.2 355.634 1250.15 cv
cp
f
261.917 1057.23 mo
262.071 1057.23 262.225 1057.24 262.379 1057.25 cv
262.225 1057.24 262.071 1057.23 261.917 1057.23 cv
cp
f
354.952 1250.41 mo
354.758 1250.48 354.566 1250.55 354.374 1250.62 cv
354.566 1250.55 354.758 1250.48 354.952 1250.41 cv
cp
f
352.405 1251.39 mo
352.245 1251.45 li
352.405 1251.39 li
cp
f
356.457 1249.85 mo
356.287 1249.91 356.116 1249.97 355.946 1250.03 cv
356.116 1249.97 356.287 1249.91 356.457 1249.85 cv
cp
f
262.468 1057.25 mo
262.819 1057.27 263.17 1057.29 263.522 1057.32 cv
263.17 1057.29 262.819 1057.27 262.468 1057.25 cv
cp
f
259.629 1057.16 mo
259.99 1057.16 260.352 1057.17 260.714 1057.18 cv
260.352 1057.17 259.99 1057.16 259.629 1057.16 cv
cp
f
353.367 1251.01 mo
353.115 1251.11 li
353.367 1251.01 li
cp
f
260.761 1057.18 mo
261.121 1057.19 261.481 1057.21 261.842 1057.22 cv
261.481 1057.21 261.121 1057.19 260.761 1057.18 cv
cp
f
354.036 1250.75 mo
353.768 1250.86 li
354.036 1250.75 li
cp
f
357.161 1249.59 mo
357.06 1249.63 356.958 1249.67 356.857 1249.7 cv
356.958 1249.67 357.06 1249.63 357.161 1249.59 cv
cp
f
361.081 1248.25 mo
360.932 1248.3 360.783 1248.35 360.634 1248.39 cv
360.783 1248.35 360.932 1248.3 361.081 1248.25 cv
cp
f
264.759 1057.41 mo
265.297 1057.45 265.837 1057.5 266.376 1057.56 cv
265.837 1057.5 265.297 1057.45 264.759 1057.41 cv
cp
f
357.851 1249.35 mo
357.745 1249.38 357.638 1249.42 357.531 1249.46 cv
357.638 1249.42 357.745 1249.38 357.851 1249.35 cv
cp
f
362.669 1247.74 mo
362.533 1247.78 362.396 1247.83 362.259 1247.87 cv
362.396 1247.83 362.533 1247.78 362.669 1247.74 cv
cp
f
361.948 1247.97 mo
361.752 1248.03 361.557 1248.09 361.363 1248.16 cv
361.558 1248.09 361.752 1248.03 361.948 1247.97 cv
cp
f
360.384 1248.48 mo
360.212 1248.53 360.04 1248.59 359.867 1248.65 cv
360.04 1248.59 360.212 1248.53 360.384 1248.48 cv
cp
f
263.626 1057.32 mo
263.977 1057.35 264.328 1057.37 264.679 1057.4 cv
264.328 1057.37 263.977 1057.35 263.626 1057.32 cv
cp
f
358.753 1249.03 mo
358.661 1249.06 358.568 1249.09 358.476 1249.13 cv
358.568 1249.09 358.661 1249.06 358.753 1249.03 cv
cp
f
359.443 1248.79 mo
359.333 1248.83 359.224 1248.87 359.115 1248.91 cv
359.224 1248.87 359.333 1248.83 359.443 1248.79 cv
cp
f
344.138 1254.93 mo
343.983 1255 li
344.138 1254.93 li
cp
f
343.593 1255.18 mo
343.406 1255.27 li
343.593 1255.18 li
cp
f
345.701 1254.22 mo
345.462 1254.33 li
345.701 1254.22 li
cp
f
345.077 1254.5 mo
344.94 1254.56 li
345.077 1254.5 li
cp
f
255.741 1057.22 mo
256.088 1057.2 256.437 1057.19 256.786 1057.18 cv
256.437 1057.19 256.088 1057.2 255.741 1057.22 cv
cp
f
255.219 1057.25 mo
255.376 1057.24 255.534 1057.23 255.691 1057.22 cv
255.534 1057.23 255.376 1057.24 255.219 1057.25 cv
cp
f
363.591 1247.46 mo
363.374 1247.52 363.156 1247.59 362.938 1247.66 cv
363.156 1247.59 363.374 1247.52 363.591 1247.46 cv
cp
f
339.052 1257.35 mo
333.559 1203.16 274.953 1093.85 254.632 1057.29 cv
245.045 1057.95 236.583 1061.14 231.809 1068.81 cv
215.482 1095.05 235.308 1206.43 253.385 1239.08 cv
260.291 1251.56 268.378 1261.01 275.737 1267.93 cv
286.381 1277.95 311.155 1292.19 320.709 1290.37 cv
328.635 1288.85 339.081 1277.27 339.081 1257.34 cv
339.052 1257.35 li
f
342.045 1255.9 mo
341.986 1255.93 li
342.045 1255.9 li
cp
f
391.619 1242.87 mo
391.857 1242.87 392.096 1242.87 392.333 1242.87 cv
392.096 1242.87 391.858 1242.87 391.619 1242.87 cv
cp
f
254.639 1057.29 mo
254.811 1057.27 254.983 1057.26 255.156 1057.25 cv
254.983 1057.26 254.811 1057.27 254.639 1057.29 cv
cp
f
349.343 1252.64 mo
349.104 1252.74 li
349.343 1252.64 li
cp
f
350.266 1252.26 mo
350.086 1252.33 li
350.266 1252.26 li
cp
f
256.863 1057.18 mo
257.208 1057.17 257.556 1057.16 257.904 1057.16 cv
257.556 1057.16 257.208 1057.17 256.863 1057.18 cv
cp
f
351.011 1251.95 mo
350.886 1252 350.761 1252.05 350.637 1252.1 cv
350.761 1252.05 350.886 1252 351.011 1251.95 cv
cp
f
259.072 1057.15 mo
259.243 1057.15 259.414 1057.15 259.585 1057.16 cv
259.415 1057.15 259.243 1057.15 259.072 1057.15 cv
cp
f
258.506 1057.15 mo
258.685 1057.15 258.863 1057.15 259.041 1057.15 cv
258.863 1057.15 258.685 1057.15 258.506 1057.15 cv
cp
f
257.982 1057.15 mo
258.139 1057.15 258.297 1057.15 258.455 1057.15 cv
258.297 1057.15 258.139 1057.15 257.982 1057.15 cv
cp
f
347.221 1253.55 mo
346.968 1253.66 li
347.221 1253.55 li
cp
f
351.816 1251.63 mo
351.707 1251.67 351.599 1251.71 351.491 1251.76 cv
351.599 1251.71 351.707 1251.67 351.816 1251.63 cv
cp
f
348.737 1252.9 mo
348.532 1252.99 li
348.737 1252.9 li
cp
f
346.595 1253.83 mo
346.437 1253.89 li
346.595 1253.83 li
cp
f
269.308 1057.9 mo
269.488 1057.92 269.668 1057.95 269.848 1057.97 cv
269.668 1057.95 269.488 1057.92 269.308 1057.9 cv
cp
f
367.493 1246.33 mo
367.273 1246.39 367.055 1246.45 366.836 1246.51 cv
367.055 1246.45 367.273 1246.39 367.493 1246.33 cv
cp
f
373.055 1244.98 mo
372.832 1245.03 372.608 1245.08 372.384 1245.13 cv
372.608 1245.08 372.832 1245.03 373.055 1244.98 cv
cp
f
368.206 1246.15 mo
368.046 1246.19 367.888 1246.23 367.729 1246.27 cv
367.888 1246.23 368.046 1246.19 368.206 1246.15 cv
cp
f
365.852 1246.79 mo
365.678 1246.84 365.503 1246.89 365.33 1246.94 cv
365.503 1246.89 365.678 1246.84 365.852 1246.79 cv
cp
f
373.81 1244.82 mo
373.637 1244.86 373.464 1244.89 373.292 1244.93 cv
373.464 1244.89 373.637 1244.86 373.81 1244.82 cv
cp
f
366.615 1246.58 mo
366.461 1246.62 366.308 1246.66 366.154 1246.7 cv
366.308 1246.66 366.461 1246.62 366.615 1246.58 cv
cp
f
272.138 1058.32 mo
272.514 1058.38 272.889 1058.44 273.263 1058.5 cv
272.889 1058.44 272.514 1058.38 272.138 1058.32 cv
cp
f
371.437 1245.34 mo
371.258 1245.39 371.08 1245.43 370.901 1245.47 cv
371.08 1245.43 371.258 1245.39 371.437 1245.34 cv
cp
f
370.72 1245.51 mo
370.503 1245.57 370.286 1245.62 370.069 1245.67 cv
370.286 1245.62 370.503 1245.57 370.72 1245.51 cv
cp
f
270.443 1058.06 mo
270.807 1058.11 271.17 1058.16 271.534 1058.22 cv
271.17 1058.16 270.807 1058.11 270.443 1058.06 cv
cp
f
269.859 1057.97 mo
270.04 1058 270.221 1058.03 270.402 1058.05 cv
270.221 1058.03 270.04 1058 269.859 1057.97 cv
cp
f
372.286 1245.15 mo
372.084 1245.2 371.882 1245.24 371.681 1245.29 cv
371.882 1245.24 372.084 1245.2 372.286 1245.15 cv
cp
f
271.611 1058.23 mo
271.778 1058.26 271.944 1058.28 272.111 1058.31 cv
271.944 1058.28 271.778 1058.26 271.611 1058.23 cv
cp
f
369.825 1245.73 mo
369.646 1245.78 369.468 1245.82 369.29 1245.87 cv
369.468 1245.82 369.646 1245.78 369.825 1245.73 cv
cp
f
369.115 1245.91 mo
368.893 1245.97 368.671 1246.02 368.45 1246.08 cv
368.671 1246.02 368.893 1245.97 369.115 1245.91 cv
cp
f
267.595 1057.69 mo
267.959 1057.73 268.323 1057.77 268.687 1057.82 cv
268.323 1057.77 267.959 1057.73 267.595 1057.69 cv
cp
f
364.27 1247.25 mo
364.094 1247.3 363.918 1247.36 363.743 1247.41 cv
363.918 1247.36 364.094 1247.3 364.27 1247.25 cv
cp
f
374.664 1244.65 mo
374.446 1244.69 374.227 1244.73 374.008 1244.78 cv
374.227 1244.73 374.445 1244.69 374.664 1244.65 cv
cp
f
273.267 1058.5 mo
273.643 1058.57 274.017 1058.63 274.391 1058.7 cv
274.017 1058.63 273.643 1058.57 273.267 1058.5 cv
cp
f
365.058 1247.02 mo
364.884 1247.07 364.711 1247.12 364.538 1247.17 cv
364.711 1247.12 364.885 1247.07 365.058 1247.02 cv
cp
f
268.751 1057.83 mo
268.914 1057.85 269.077 1057.87 269.239 1057.89 cv
269.077 1057.87 268.914 1057.85 268.751 1057.83 cv
cp
f
375.44 1244.5 mo
375.264 1244.53 375.088 1244.56 374.913 1244.6 cv
375.088 1244.56 375.264 1244.53 375.44 1244.5 cv
cp
f
292.622 1063.3 mo
292.662 1063.32 li
292.622 1063.3 li
cp
.647059 .215686 .360784 rgb
f
271.534 1058.22 mo
271.611 1058.23 li
271.534 1058.22 li
cp
f
297.306 1064.86 mo
297.418 1064.9 li
297.306 1064.86 li
cp
f
292.171 1063.16 mo
292.225 1063.18 li
292.171 1063.16 li
cp
f
274.921 1058.8 mo
274.975 1058.81 li
274.921 1058.8 li
cp
f
257.904 1057.16 mo
257.982 1057.15 li
257.904 1057.16 li
cp
f
254.631 1057.29 mo
254.631 1057.29 li
254.639 1057.29 li
254.631 1057.29 li
cp
f
258.455 1057.15 mo
258.506 1057.15 li
258.455 1057.15 li
cp
f
277.196 1059.24 mo
277.205 1059.25 li
277.196 1059.24 li
cp
f
275.513 1058.91 mo
275.542 1058.92 li
275.513 1058.91 li
cp
f
296.109 1064.45 mo
296.223 1064.49 li
296.109 1064.45 li
cp
f
273.263 1058.5 mo
273.267 1058.5 li
273.263 1058.5 li
cp
f
295.663 1064.3 mo
295.759 1064.33 li
295.663 1064.3 li
cp
f
274.391 1058.7 mo
274.406 1058.7 li
274.391 1058.7 li
cp
f
255.691 1057.22 mo
255.741 1057.22 li
255.691 1057.22 li
cp
f
293.983 1063.74 mo
294.062 1063.77 li
293.983 1063.74 li
cp
f
293.538 1063.6 mo
293.573 1063.61 li
293.538 1063.6 li
cp
f
283.702 1060.75 mo
283.774 1060.77 li
283.702 1060.75 li
cp
f
256.786 1057.18 mo
256.863 1057.18 li
256.786 1057.18 li
cp
f
272.111 1058.31 mo
272.138 1058.32 li
272.111 1058.31 li
cp
f
276.055 1059.01 mo
276.104 1059.02 li
276.055 1059.01 li
cp
f
255.156 1057.25 mo
255.219 1057.25 li
255.156 1057.25 li
cp
f
286.293 1061.43 mo
286.372 1061.46 li
286.293 1061.43 li
cp
f
264.679 1057.4 mo
264.759 1057.41 li
264.679 1057.4 li
cp
f
268.687 1057.82 mo
268.751 1057.83 li
268.687 1057.82 li
cp
f
282.111 1060.35 mo
282.189 1060.37 li
282.111 1060.35 li
cp
f
286.754 1061.56 mo
286.882 1061.6 li
286.754 1061.56 li
cp
f
269.239 1057.89 mo
269.308 1057.9 li
269.239 1057.89 li
cp
f
263.522 1057.32 mo
263.626 1057.32 li
263.522 1057.32 li
cp
f
298.5 1065.28 mo
298.566 1065.3 li
298.5 1065.28 li
cp
f
287.315 1061.72 mo
287.39 1061.74 li
287.315 1061.72 li
cp
f
267.54 1057.68 mo
267.595 1057.69 li
267.54 1057.68 li
cp
f
284.201 1060.88 mo
284.274 1060.9 li
284.201 1060.88 li
cp
f
282.576 1060.46 mo
282.725 1060.5 li
282.576 1060.46 li
cp
f
266.376 1057.56 mo
266.46 1057.57 li
266.376 1057.56 li
cp
f
284.773 1061.03 mo
284.791 1061.03 li
284.773 1061.03 li
cp
f
279.928 1059.84 mo
279.99 1059.85 li
279.928 1059.84 li
cp
f
270.402 1058.05 mo
270.443 1058.06 li
270.402 1058.05 li
cp
f
259.585 1057.16 mo
259.629 1057.16 li
259.585 1057.16 li
cp
f
281.545 1060.21 mo
281.614 1060.23 li
281.545 1060.21 li
cp
f
288.788 1062.14 mo
288.883 1062.17 li
288.788 1062.14 li
cp
f
289.814 1062.44 mo
289.841 1062.45 li
289.814 1062.44 li
cp
f
290.306 1062.59 mo
290.307 1062.59 li
290.306 1062.59 li
cp
f
278.809 1059.59 mo
278.897 1059.61 li
278.809 1059.59 li
cp
f
259.041 1057.15 mo
259.072 1057.15 li
259.041 1057.15 li
cp
f
261.842 1057.22 mo
261.917 1057.23 li
261.842 1057.22 li
cp
f
260.714 1057.18 mo
260.761 1057.18 li
260.714 1057.18 li
cp
f
287.819 1061.86 mo
287.87 1061.88 li
287.819 1061.86 li
cp
f
269.848 1057.97 mo
269.859 1057.97 li
269.848 1057.97 li
cp
f
288.346 1062.01 mo
288.364 1062.02 li
288.346 1062.01 li
cp
f
281.028 1060.09 mo
281.087 1060.1 li
281.028 1060.09 li
cp
f
262.379 1057.25 mo
262.468 1057.25 li
262.379 1057.25 li
cp
f
370.069 1245.67 mo
369.825 1245.73 li
370.069 1245.67 li
cp
f
367.729 1246.27 mo
367.493 1246.33 li
367.729 1246.27 li
cp
f
365.33 1246.94 mo
365.239 1246.97 365.148 1246.99 365.058 1247.02 cv
365.148 1246.99 365.239 1246.97 365.33 1246.94 cv
cp
f
366.154 1246.7 mo
366.053 1246.73 365.953 1246.76 365.852 1246.79 cv
365.953 1246.76 366.053 1246.73 366.154 1246.7 cv
cp
f
369.29 1245.87 mo
369.115 1245.91 li
369.29 1245.87 li
cp
f
368.45 1246.08 mo
368.206 1246.15 li
368.45 1246.08 li
cp
f
366.836 1246.51 mo
366.615 1246.58 li
366.836 1246.51 li
cp
f
362.259 1247.87 mo
362.155 1247.9 362.051 1247.93 361.948 1247.97 cv
362.051 1247.93 362.156 1247.9 362.259 1247.87 cv
cp
f
361.363 1248.16 mo
361.269 1248.19 361.175 1248.22 361.081 1248.25 cv
361.175 1248.22 361.269 1248.19 361.363 1248.16 cv
cp
f
363.743 1247.41 mo
363.591 1247.46 li
363.743 1247.41 li
cp
f
364.538 1247.17 mo
364.27 1247.25 li
364.538 1247.17 li
cp
f
362.938 1247.66 mo
362.669 1247.74 li
362.938 1247.66 li
cp
f
377.252 1244.16 mo
377.036 1244.2 li
377.252 1244.16 li
cp
f
360.634 1248.39 mo
360.384 1248.48 li
360.634 1248.39 li
cp
f
376.488 1244.3 mo
376.308 1244.33 li
376.488 1244.3 li
cp
f
378.059 1244.03 mo
377.937 1244.05 li
378.059 1244.03 li
cp
f
378.875 1243.9 mo
378.658 1243.93 li
378.875 1243.9 li
cp
f
375.613 1244.46 mo
375.44 1244.5 li
375.613 1244.46 li
cp
f
379.582 1243.79 mo
379.515 1243.8 li
379.582 1243.79 li
cp
f
374.008 1244.78 mo
373.81 1244.82 li
374.008 1244.78 li
cp
f
371.681 1245.29 mo
371.437 1245.34 li
371.681 1245.29 li
cp
f
372.384 1245.13 mo
372.286 1245.15 li
372.384 1245.13 li
cp
f
370.901 1245.47 mo
370.72 1245.51 li
370.901 1245.47 li
cp
f
374.913 1244.6 mo
374.664 1244.65 li
374.913 1244.6 li
cp
f
373.292 1244.93 mo
373.055 1244.98 li
373.292 1244.93 li
cp
f
354.374 1250.62 mo
354.261 1250.67 354.148 1250.71 354.036 1250.75 cv
354.148 1250.71 354.261 1250.67 354.374 1250.62 cv
cp
f
348.532 1252.99 mo
348.093 1253.17 347.657 1253.36 347.221 1253.55 cv
347.657 1253.36 348.093 1253.17 348.532 1252.99 cv
cp
f
350.637 1252.1 mo
350.513 1252.16 350.389 1252.21 350.266 1252.26 cv
350.389 1252.21 350.513 1252.16 350.637 1252.1 cv
cp
f
346.437 1253.89 mo
346.191 1254 345.946 1254.11 345.701 1254.22 cv
345.946 1254.11 346.191 1254 346.437 1253.89 cv
cp
f
359.867 1248.65 mo
359.726 1248.7 359.584 1248.75 359.443 1248.79 cv
359.584 1248.75 359.726 1248.7 359.867 1248.65 cv
cp
f
345.462 1254.33 mo
345.333 1254.39 345.205 1254.44 345.077 1254.5 cv
345.205 1254.44 345.333 1254.39 345.462 1254.33 cv
cp
f
349.104 1252.74 mo
348.982 1252.79 348.86 1252.85 348.737 1252.9 cv
348.86 1252.85 348.982 1252.79 349.104 1252.74 cv
cp
f
346.968 1253.66 mo
346.844 1253.71 346.719 1253.77 346.595 1253.83 cv
346.719 1253.77 346.844 1253.72 346.968 1253.66 cv
cp
f
391.468 1242.87 mo
391.619 1242.87 li
391.468 1242.87 li
cp
f
341.986 1255.93 mo
341.008 1256.4 340.04 1256.87 339.081 1257.34 cv
340.04 1256.87 341.008 1256.4 341.986 1255.93 cv
cp
f
343.983 1255 mo
343.853 1255.06 343.723 1255.12 343.593 1255.18 cv
343.723 1255.12 343.853 1255.06 343.983 1255 cv
cp
f
344.94 1254.56 mo
344.672 1254.69 344.405 1254.81 344.138 1254.93 cv
344.405 1254.81 344.672 1254.69 344.94 1254.56 cv
cp
f
343.406 1255.27 mo
342.951 1255.48 342.497 1255.69 342.045 1255.9 cv
342.497 1255.69 342.951 1255.48 343.406 1255.27 cv
cp
f
298.907 1065.42 mo
298.933 1065.43 li
298.907 1065.42 li
cp
f
357.531 1249.46 mo
357.408 1249.5 357.284 1249.55 357.161 1249.59 cv
357.284 1249.55 357.408 1249.5 357.531 1249.46 cv
cp
f
355.946 1250.03 mo
355.842 1250.07 355.738 1250.11 355.634 1250.15 cv
355.738 1250.11 355.842 1250.07 355.946 1250.03 cv
cp
f
351.491 1251.76 mo
351.331 1251.82 351.17 1251.89 351.011 1251.95 cv
351.17 1251.89 351.331 1251.82 351.491 1251.76 cv
cp
f
359.115 1248.91 mo
358.994 1248.95 358.874 1248.99 358.753 1249.03 cv
358.874 1248.99 358.994 1248.95 359.115 1248.91 cv
cp
f
358.476 1249.13 mo
358.268 1249.2 358.059 1249.27 357.851 1249.35 cv
358.059 1249.27 358.268 1249.2 358.476 1249.13 cv
cp
f
356.857 1249.7 mo
356.724 1249.75 356.59 1249.8 356.457 1249.85 cv
356.59 1249.8 356.724 1249.75 356.857 1249.7 cv
cp
f
353.115 1251.11 mo
352.878 1251.2 352.641 1251.3 352.405 1251.39 cv
352.641 1251.3 352.878 1251.2 353.115 1251.11 cv
cp
f
352.245 1251.45 mo
352.102 1251.51 351.958 1251.57 351.816 1251.63 cv
351.958 1251.57 352.102 1251.51 352.245 1251.45 cv
cp
f
355.265 1250.29 mo
355.16 1250.33 355.056 1250.37 354.952 1250.41 cv
355.056 1250.37 355.16 1250.33 355.265 1250.29 cv
cp
f
353.768 1250.86 mo
353.634 1250.91 353.5 1250.96 353.367 1251.01 cv
353.5 1250.96 353.634 1250.91 353.768 1250.86 cv
cp
f
380.475 1243.66 mo
380.277 1243.69 li
380.475 1243.66 li
cp
f
350.086 1252.33 mo
349.838 1252.43 349.59 1252.54 349.343 1252.64 cv
349.59 1252.54 349.838 1252.43 350.086 1252.33 cv
cp
f
307.349 1068.7 mo
307.37 1068.71 li
307.349 1068.7 li
cp
f
307.522 1068.77 mo
307.537 1068.78 li
307.522 1068.77 li
cp
f
407.249 1244.74 mo
407.046 1244.69 li
407.249 1244.74 li
cp
f
307.284 1068.67 mo
307.349 1068.7 li
307.284 1068.67 li
cp
f
307.096 1068.59 mo
307.101 1068.59 li
307.096 1068.59 li
cp
f
306.504 1068.34 mo
306.652 1068.4 li
306.504 1068.34 li
cp
f
404.137 1244.04 mo
404.005 1244.02 li
404.137 1244.04 li
cp
f
305.894 1068.09 mo
306.125 1068.18 li
305.894 1068.09 li
cp
f
403.423 1243.91 mo
403.256 1243.88 li
403.423 1243.91 li
cp
f
406.454 1244.55 mo
406.375 1244.53 li
406.454 1244.55 li
cp
f
404.959 1244.21 mo
404.818 1244.18 li
404.959 1244.21 li
cp
f
405.697 1244.37 mo
405.524 1244.33 li
405.697 1244.37 li
cp
f
305.32 1067.85 mo
305.395 1067.88 li
305.32 1067.85 li
cp
f
302.275 1066.66 mo
302.33 1066.68 li
302.275 1066.66 li
cp
f
301.659 1066.43 mo
301.696 1066.44 li
301.659 1066.43 li
cp
f
402.586 1243.76 mo
402.452 1243.74 li
402.586 1243.76 li
cp
f
301.311 1066.3 mo
301.445 1066.35 li
301.311 1066.3 li
cp
f
299.582 1065.66 mo
299.694 1065.7 li
299.582 1065.66 li
cp
f
299.235 1065.54 mo
299.301 1065.56 li
299.235 1065.54 li
cp
f
301.936 1066.53 mo
302.068 1066.58 li
301.936 1066.53 li
cp
f
304.876 1067.67 mo
304.984 1067.72 li
304.876 1067.67 li
cp
f
304.409 1067.49 mo
304.508 1067.53 li
304.409 1067.49 li
cp
f
303.973 1067.32 mo
303.986 1067.32 li
303.973 1067.32 li
cp
f
303.107 1066.98 mo
303.263 1067.04 li
303.107 1066.98 li
cp
f
304.229 1067.42 mo
304.26 1067.43 li
304.229 1067.42 li
cp
f
382.093 1243.45 mo
381.908 1243.48 li
382.093 1243.45 li
cp
f
387.695 1242.97 mo
387.477 1242.98 li
387.695 1242.97 li
cp
f
388.397 1242.94 mo
388.304 1242.94 li
388.397 1242.94 li
cp
f
386.781 1243.02 mo
386.772 1243.02 li
386.781 1243.02 li
cp
f
386.079 1243.07 mo
385.867 1243.09 li
386.079 1243.07 li
cp
f
389.286 1242.91 mo
389.113 1242.91 li
389.286 1242.91 li
cp
f
390.034 1242.88 mo
389.834 1242.89 li
390.034 1242.88 li
cp
f
382.836 1243.37 mo
382.646 1243.39 li
382.836 1243.37 li
cp
f
381.205 1243.56 mo
381.079 1243.58 li
381.205 1243.56 li
cp
f
390.883 1242.87 mo
390.711 1242.87 li
390.883 1242.87 li
cp
f
384.439 1243.21 mo
384.279 1243.22 li
384.439 1243.21 li
cp
f
383.698 1243.28 mo
383.525 1243.29 li
383.698 1243.28 li
cp
f
385.276 1243.13 mo
385.152 1243.14 li
385.276 1243.13 li
cp
f
393.233 1242.89 mo
393.057 1242.88 li
393.233 1242.89 li
cp
f
397.998 1243.16 mo
397.825 1243.14 li
397.998 1243.16 li
cp
f
398.735 1243.23 mo
398.544 1243.21 li
398.735 1243.23 li
cp
f
399.512 1243.32 mo
399.422 1243.31 li
399.512 1243.32 li
cp
f
397.132 1243.08 mo
397.001 1243.07 li
397.132 1243.08 li
cp
f
400.307 1243.42 mo
400.127 1243.39 li
400.307 1243.42 li
cp
f
401.861 1243.64 mo
401.702 1243.62 li
401.861 1243.64 li
cp
f
393.941 1242.91 mo
393.93 1242.9 li
393.941 1242.91 li
cp
f
392.426 1242.87 mo
392.333 1242.87 li
392.426 1242.87 li
cp
f
394.826 1242.94 mo
394.65 1242.93 li
394.826 1242.94 li
cp
f
396.411 1243.03 mo
396.246 1243.02 li
396.411 1243.03 li
cp
f
395.545 1242.98 mo
395.434 1242.97 li
395.545 1242.98 li
cp
f
339.081 1257.34 mo
340.039 1256.87 341.008 1256.4 341.986 1255.93 cv
342.045 1255.9 li
342.497 1255.69 342.951 1255.48 343.406 1255.27 cv
343.594 1255.18 li
343.723 1255.12 343.853 1255.06 343.983 1255 cv
344.138 1254.93 li
344.405 1254.81 344.672 1254.69 344.94 1254.56 cv
345.077 1254.5 li
345.205 1254.44 345.333 1254.39 345.462 1254.33 cv
345.701 1254.22 li
345.946 1254.11 346.191 1254 346.437 1253.89 cv
346.595 1253.82 li
346.719 1253.77 346.844 1253.71 346.968 1253.66 cv
347.221 1253.55 li
347.657 1253.36 348.093 1253.17 348.531 1252.99 cv
348.737 1252.9 li
348.86 1252.85 348.982 1252.79 349.105 1252.74 cv
349.343 1252.64 li
349.59 1252.54 349.838 1252.43 350.086 1252.33 cv
350.266 1252.26 li
350.389 1252.21 350.513 1252.16 350.637 1252.1 cv
350.761 1252.05 350.886 1252 351.01 1251.95 cv
351.171 1251.89 351.33 1251.82 351.49 1251.76 cv
351.599 1251.71 351.707 1251.67 351.816 1251.63 cv
351.959 1251.57 352.101 1251.51 352.245 1251.45 cv
352.405 1251.39 li
352.641 1251.3 352.878 1251.2 353.115 1251.11 cv
353.367 1251.01 li
353.5 1250.96 353.634 1250.91 353.768 1250.86 cv
354.036 1250.75 li
354.148 1250.71 354.26 1250.67 354.374 1250.62 cv
354.566 1250.55 354.758 1250.48 354.951 1250.41 cv
355.056 1250.37 355.16 1250.33 355.264 1250.29 cv
355.388 1250.24 355.511 1250.2 355.634 1250.15 cv
355.737 1250.11 355.842 1250.07 355.946 1250.03 cv
356.116 1249.97 356.286 1249.91 356.457 1249.85 cv
356.591 1249.8 356.724 1249.75 356.857 1249.7 cv
356.959 1249.66 357.059 1249.63 357.161 1249.59 cv
357.284 1249.55 357.408 1249.5 357.531 1249.46 cv
357.638 1249.42 357.745 1249.38 357.851 1249.35 cv
358.059 1249.27 358.268 1249.2 358.476 1249.13 cv
358.568 1249.09 358.661 1249.06 358.753 1249.03 cv
358.874 1248.99 358.994 1248.95 359.115 1248.91 cv
359.224 1248.87 359.334 1248.83 359.443 1248.79 cv
359.585 1248.75 359.725 1248.7 359.867 1248.65 cv
360.04 1248.59 360.212 1248.53 360.384 1248.48 cv
360.634 1248.39 li
360.783 1248.35 360.932 1248.3 361.081 1248.25 cv
361.176 1248.22 361.269 1248.19 361.363 1248.16 cv
361.557 1248.09 361.753 1248.03 361.948 1247.97 cv
362.051 1247.93 362.156 1247.9 362.259 1247.87 cv
362.396 1247.83 362.533 1247.78 362.669 1247.74 cv
362.939 1247.66 li
363.156 1247.59 363.373 1247.52 363.591 1247.46 cv
363.743 1247.41 li
363.919 1247.36 364.094 1247.3 364.27 1247.25 cv
364.538 1247.17 li
364.712 1247.12 364.884 1247.07 365.058 1247.02 cv
365.148 1246.99 365.238 1246.97 365.33 1246.94 cv
365.503 1246.89 365.678 1246.84 365.852 1246.79 cv
365.953 1246.76 366.053 1246.73 366.154 1246.7 cv
366.307 1246.66 366.461 1246.62 366.615 1246.58 cv
366.836 1246.51 li
367.055 1246.45 367.273 1246.39 367.493 1246.33 cv
367.729 1246.27 li
367.888 1246.23 368.046 1246.19 368.206 1246.15 cv
368.45 1246.08 li
368.671 1246.02 368.893 1245.97 369.115 1245.91 cv
369.29 1245.87 li
369.468 1245.82 369.646 1245.78 369.825 1245.73 cv
370.069 1245.67 li
370.285 1245.62 370.503 1245.57 370.72 1245.51 cv
370.901 1245.47 li
371.08 1245.43 371.259 1245.39 371.437 1245.34 cv
371.681 1245.29 li
371.883 1245.24 372.085 1245.2 372.286 1245.15 cv
372.384 1245.13 li
372.608 1245.08 372.831 1245.03 373.055 1244.98 cv
373.291 1244.93 li
373.464 1244.89 373.637 1244.86 373.81 1244.82 cv
374.009 1244.78 li
374.227 1244.73 374.446 1244.69 374.664 1244.65 cv
374.913 1244.6 li
375.088 1244.56 375.264 1244.53 375.44 1244.49 cv
375.613 1244.46 li
375.845 1244.42 376.076 1244.37 376.308 1244.33 cv
376.488 1244.3 li
376.67 1244.27 376.853 1244.23 377.036 1244.2 cv
377.252 1244.16 li
377.48 1244.12 377.709 1244.08 377.937 1244.05 cv
378.059 1244.03 li
378.258 1244 378.458 1243.96 378.658 1243.93 cv
378.875 1243.9 li
379.088 1243.86 379.301 1243.83 379.515 1243.8 cv
379.582 1243.79 li
379.813 1243.76 380.045 1243.72 380.277 1243.69 cv
380.475 1243.66 li
380.676 1243.63 380.878 1243.61 381.079 1243.58 cv
381.205 1243.56 li
381.439 1243.53 381.673 1243.5 381.908 1243.48 cv
382.093 1243.45 li
382.278 1243.43 382.462 1243.41 382.646 1243.39 cv
382.836 1243.37 li
383.066 1243.34 383.296 1243.32 383.525 1243.29 cv
383.698 1243.28 li
383.891 1243.26 384.085 1243.24 384.279 1243.22 cv
384.44 1243.21 li
384.677 1243.18 384.915 1243.16 385.152 1243.14 cv
385.276 1243.13 li
385.473 1243.12 385.671 1243.1 385.867 1243.09 cv
386.079 1243.07 li
386.31 1243.05 386.542 1243.04 386.773 1243.02 cv
386.781 1243.02 li
387.012 1243.01 387.245 1243 387.477 1242.98 cv
387.695 1242.97 li
387.898 1242.96 388.101 1242.95 388.304 1242.94 cv
388.397 1242.94 li
388.636 1242.93 388.874 1242.92 389.113 1242.91 cv
389.285 1242.91 li
389.469 1242.9 389.652 1242.89 389.834 1242.89 cv
390.033 1242.88 li
390.259 1242.88 390.485 1242.88 390.711 1242.87 cv
390.883 1242.87 li
391.079 1242.87 391.273 1242.87 391.468 1242.87 cv
391.619 1242.87 li
391.858 1242.87 392.096 1242.87 392.333 1242.87 cv
392.426 1242.87 li
392.637 1242.88 392.847 1242.88 393.057 1242.88 cv
393.233 1242.89 li
393.466 1242.89 393.698 1242.9 393.93 1242.9 cv
393.941 1242.91 li
394.178 1242.91 394.414 1242.92 394.65 1242.93 cv
394.826 1242.94 li
395.028 1242.95 395.231 1242.96 395.434 1242.97 cv
395.545 1242.98 li
395.779 1242.99 396.012 1243 396.246 1243.02 cv
396.411 1243.03 li
396.608 1243.04 396.804 1243.06 397.002 1243.07 cv
397.132 1243.08 li
397.364 1243.1 397.594 1243.12 397.825 1243.14 cv
397.997 1243.16 li
398.179 1243.18 398.362 1243.19 398.544 1243.21 cv
398.735 1243.23 li
398.964 1243.26 399.193 1243.28 399.422 1243.31 cv
399.512 1243.32 li
399.717 1243.34 399.923 1243.37 400.128 1243.39 cv
400.307 1243.42 li
400.773 1243.48 401.238 1243.54 401.702 1243.62 cv
401.861 1243.64 li
402.058 1243.67 402.256 1243.7 402.451 1243.73 cv
402.586 1243.76 li
402.809 1243.8 403.032 1243.84 403.256 1243.88 cv
403.423 1243.91 li
403.617 1243.94 403.811 1243.98 404.005 1244.02 cv
404.137 1244.04 li
404.365 1244.09 404.591 1244.13 404.818 1244.18 cv
404.959 1244.21 li
405.148 1244.25 405.337 1244.29 405.524 1244.33 cv
405.697 1244.37 li
405.924 1244.42 406.15 1244.47 406.375 1244.53 cv
406.454 1244.55 li
406.652 1244.59 406.849 1244.64 407.046 1244.69 cv
407.249 1244.74 li
407.471 1244.8 407.692 1244.86 407.913 1244.92 cv
407.913 1244.92 324.673 1074.96 307.616 1068.81 cv
307.605 1068.81 li
307.536 1068.78 li
307.522 1068.77 li
307.369 1068.71 li
307.349 1068.7 li
307.284 1068.67 li
307.101 1068.59 li
307.096 1068.59 li
306.97 1068.53 306.822 1068.47 306.652 1068.4 cv
306.504 1068.34 li
306.386 1068.29 306.261 1068.24 306.125 1068.18 cv
305.894 1068.09 li
305.765 1068.03 li
305.648 1067.99 305.523 1067.94 305.395 1067.88 cv
305.32 1067.85 li
305.211 1067.81 305.099 1067.76 304.984 1067.72 cv
304.876 1067.67 li
304.757 1067.63 304.635 1067.58 304.508 1067.53 cv
304.409 1067.49 li
304.26 1067.43 li
304.228 1067.42 li
303.986 1067.32 li
303.973 1067.32 li
303.746 1067.23 303.509 1067.14 303.263 1067.04 cv
303.107 1066.98 li
302.857 1066.88 302.598 1066.78 302.329 1066.68 cv
302.275 1066.66 li
302.068 1066.58 li
301.936 1066.53 li
301.696 1066.44 li
301.659 1066.43 li
301.445 1066.35 li
301.311 1066.3 li
300.797 1066.11 300.258 1065.91 299.694 1065.7 cv
299.582 1065.66 li
299.489 1065.63 299.396 1065.6 299.301 1065.56 cv
299.235 1065.54 li
299.135 1065.5 299.035 1065.47 298.933 1065.43 cv
298.907 1065.42 li
298.795 1065.38 298.681 1065.34 298.566 1065.3 cv
298.499 1065.28 li
298.147 1065.15 297.786 1065.02 297.418 1064.9 cv
297.306 1064.86 li
296.952 1064.73 296.59 1064.61 296.222 1064.48 cv
296.109 1064.45 li
295.993 1064.41 295.876 1064.37 295.759 1064.33 cv
295.663 1064.3 li
295.142 1064.12 294.608 1063.94 294.061 1063.77 cv
293.983 1063.74 li
293.847 1063.7 293.71 1063.65 293.573 1063.61 cv
293.538 1063.6 li
293.248 1063.5 292.957 1063.41 292.661 1063.32 cv
292.621 1063.3 li
292.49 1063.26 292.358 1063.22 292.225 1063.18 cv
292.171 1063.16 li
291.562 1062.97 290.94 1062.78 290.307 1062.59 cv
290.306 1062.59 li
290.152 1062.54 289.996 1062.5 289.841 1062.45 cv
289.814 1062.44 li
289.506 1062.35 289.196 1062.26 288.883 1062.17 cv
288.787 1062.14 li
288.647 1062.1 288.506 1062.06 288.364 1062.02 cv
288.346 1062.01 li
288.188 1061.97 288.029 1061.92 287.87 1061.88 cv
287.819 1061.86 li
287.677 1061.82 287.534 1061.78 287.39 1061.74 cv
287.315 1061.72 li
287.171 1061.68 287.027 1061.64 286.882 1061.6 cv
286.755 1061.56 li
286.628 1061.53 286.499 1061.49 286.372 1061.46 cv
286.293 1061.43 li
285.797 1061.3 285.296 1061.16 284.791 1061.03 cv
284.773 1061.03 li
284.607 1060.98 284.441 1060.94 284.274 1060.9 cv
284.2 1060.88 li
284.059 1060.84 283.916 1060.8 283.774 1060.77 cv
283.702 1060.75 li
283.377 1060.66 283.052 1060.58 282.725 1060.5 cv
282.576 1060.46 li
282.447 1060.43 282.319 1060.4 282.19 1060.37 cv
282.111 1060.35 li
281.946 1060.31 281.78 1060.27 281.614 1060.23 cv
281.545 1060.21 li
281.392 1060.18 281.24 1060.14 281.087 1060.1 cv
281.028 1060.09 li
280.684 1060.01 280.337 1059.93 279.99 1059.85 cv
279.928 1059.84 li
279.585 1059.76 279.242 1059.68 278.897 1059.61 cv
278.809 1059.59 li
278.277 1059.47 277.742 1059.36 277.205 1059.25 cv
277.197 1059.24 li
276.833 1059.17 276.469 1059.1 276.103 1059.02 cv
276.054 1059.01 li
275.884 1058.98 275.713 1058.95 275.541 1058.92 cv
275.513 1058.91 li
275.335 1058.88 275.155 1058.84 274.975 1058.81 cv
274.922 1058.8 li
274.75 1058.77 274.577 1058.74 274.406 1058.7 cv
274.391 1058.7 li
274.017 1058.63 273.642 1058.57 273.267 1058.5 cv
273.263 1058.5 li
272.889 1058.44 272.513 1058.38 272.138 1058.32 cv
272.111 1058.31 li
271.944 1058.28 271.778 1058.26 271.611 1058.23 cv
271.534 1058.22 li
271.17 1058.16 270.807 1058.11 270.443 1058.06 cv
270.402 1058.05 li
270.221 1058.03 270.039 1058 269.859 1057.97 cv
269.848 1057.97 li
269.668 1057.95 269.488 1057.92 269.308 1057.9 cv
269.239 1057.89 li
269.077 1057.87 268.914 1057.85 268.751 1057.83 cv
268.686 1057.82 li
268.323 1057.77 267.959 1057.73 267.595 1057.69 cv
267.54 1057.68 li
267.18 1057.64 266.82 1057.6 266.46 1057.57 cv
266.376 1057.56 li
265.837 1057.5 265.297 1057.45 264.759 1057.41 cv
264.679 1057.4 li
264.328 1057.37 263.977 1057.35 263.626 1057.32 cv
263.522 1057.32 li
263.171 1057.29 262.819 1057.27 262.468 1057.25 cv
262.379 1057.25 li
262.225 1057.24 262.071 1057.23 261.916 1057.23 cv
261.842 1057.22 li
261.481 1057.21 261.12 1057.19 260.761 1057.18 cv
260.714 1057.18 li
260.351 1057.17 259.99 1057.16 259.63 1057.16 cv
259.585 1057.16 li
259.414 1057.15 259.243 1057.15 259.072 1057.15 cv
259.041 1057.15 li
258.863 1057.15 258.685 1057.15 258.506 1057.15 cv
258.455 1057.15 li
258.297 1057.15 258.139 1057.15 257.982 1057.15 cv
257.904 1057.16 li
257.556 1057.16 257.208 1057.17 256.863 1057.18 cv
256.786 1057.18 li
256.437 1057.19 256.089 1057.2 255.741 1057.22 cv
255.691 1057.22 li
255.533 1057.23 255.376 1057.24 255.219 1057.25 cv
255.156 1057.25 li
254.983 1057.26 254.811 1057.27 254.639 1057.29 cv
254.632 1057.29 li
274.953 1093.85 333.559 1203.16 339.052 1257.35 cv
339.081 1257.34 li
f
334.816 1235.21 mo
334.816 1235.21 li
328.621 1211.42 316.937 1182.46 304.094 1154.39 cv
304.094 1154.39 li
316.938 1182.46 328.621 1211.42 334.816 1235.21 cv
.164706 .352941 .403922 rgb
f
401.521 1232 mo
399.971 1228.89 398.174 1225.3 396.175 1221.32 cv
397.812 1224.57 399.599 1228.15 401.521 1232 cv
385.8 1200.82 mo
385.793 1200.81 385.79 1200.8 385.782 1200.79 cv
385.783 1200.79 li
385.789 1200.8 385.795 1200.81 385.8 1200.82 cv
.662745 .552941 .588235 rgb
f
346.74 1235.34 mo
342.647 1235.34 338.644 1235.3 334.816 1235.21 cv
328.621 1211.42 316.938 1182.46 304.094 1154.39 cv
385.783 1200.79 li
385.79 1200.8 385.793 1200.81 385.8 1200.82 cv
387.484 1204.14 391.107 1211.23 396.175 1221.32 cv
398.174 1225.3 399.971 1228.89 401.521 1232 cv
401.804 1232.57 402.091 1233.15 402.38 1233.73 cv
387.687 1234.47 366.185 1235.34 346.74 1235.34 cv
.486274 .160784 .270588 rgb
f
334.816 1235.21 mo
322.899 1234.94 312.665 1234.21 306.612 1232.72 cv
297.422 1230.47 281.653 1216.52 265.696 1200.17 cv
242.117 1176.01 227.957 1144.21 225.858 1110.52 cv
225.846 1110.32 225.834 1110.12 225.822 1109.93 cv
304.094 1154.39 li
316.937 1182.46 328.621 1211.42 334.816 1235.21 cv
.027451 .47451 .509804 rgb
f
480.369 1229.16 mo
324.392 1229.16 li
318.1 1229.16 313 1224.06 313 1217.76 cv
313 1061.79 li
313 1055.5 318.1 1050.4 324.392 1050.4 cv
480.369 1050.4 li
486.661 1050.4 491.761 1055.5 491.761 1061.79 cv
491.761 1217.76 li
491.761 1224.06 486.661 1229.16 480.369 1229.16 cv
cp
1 .317647 .211765 rgb
f
393.002 1161.7 mo
399.175 1181.14 415.564 1184.63 433.31 1179.37 cv
439.065 1177.66 444.814 1182.11 444.814 1188.11 cv
444.814 1188.77 li
444.814 1192.69 442.284 1196.16 438.571 1197.44 cv
408.563 1207.72 375.841 1198.93 368.05 1161.7 cv
362.605 1161.7 li
358.747 1161.7 355.619 1158.57 355.619 1154.72 cv
355.619 1150.86 358.747 1147.73 362.605 1147.73 cv
366.417 1147.73 li
366.019 1144.01 366.276 1136.91 366.598 1132.94 cv
362.605 1132.94 li
358.747 1132.94 355.619 1129.81 355.619 1125.95 cv
355.619 1122.09 358.747 1118.96 362.605 1118.96 cv
368.957 1118.96 li
377.585 1084.1 407.121 1072.43 437.983 1080.63 cv
441.993 1081.69 444.814 1085.32 444.814 1089.47 cv
444.814 1091.3 li
444.814 1097.27 439.114 1101.73 433.38 1100.07 cv
415.604 1094.9 399.402 1099 393.002 1118.96 cv
418.863 1118.96 li
422.722 1118.96 425.85 1122.09 425.85 1125.95 cv
425.85 1129.81 422.722 1132.94 418.863 1132.94 cv
390.008 1132.94 li
389.715 1135.83 389.771 1144.8 390.008 1147.73 cv
418.863 1147.73 li
422.722 1147.73 425.85 1150.86 425.85 1154.72 cv
425.85 1158.57 422.722 1161.7 418.863 1161.7 cv
393.002 1161.7 li
cp
1 .917647 .517647 rgb
f
416.368 1197.68 mo
417.642 1197.78 440.309 1206.34 455.726 1197.99 cv
462.724 1194.19 470.953 1196.41 467.746 1203.69 cv
464.539 1210.98 449.898 1207.89 447.857 1209.93 cv
445.816 1211.97 473.159 1226.92 480.626 1228.19 cv
488.093 1229.46 475.847 1235.88 472.932 1235.88 cv
470.016 1235.88 472.349 1237.04 469.433 1239.96 cv
466.517 1242.88 459.457 1242.18 456.021 1242.88 cv
444.814 1245.13 415.02 1224.54 410.537 1220.06 cv
406.055 1215.58 416.368 1197.68 416.368 1197.68 cv
cp
1 .635294 .513726 rgb
f
255.741 1057.22 mo
255.741 1057.22 267.595 1070.55 274.377 1084.56 cv
281.222 1098.69 319.239 1168.14 323.44 1168.14 cv
327.641 1168.14 421.475 1198.7 421.475 1198.7 cv
421.475 1198.7 414.911 1212.26 414.911 1227.42 cv
414.911 1227.42 314.03 1211.09 306.449 1211.09 cv
298.869 1211.09 290.122 1197.68 282.541 1190.1 cv
274.96 1182.52 237.275 1148.22 226.378 1121.34 cv
215.482 1094.47 221.336 1051.39 255.741 1057.22 cv
cp
0 .596078 .603922 rgb
f
291.117 1020.25 mo
303.263 1074.09 li
255.741 1057.22 li
265.038 1020.43 li
291.117 1020.25 li
1 .635294 .513726 rgb
f
296.613 1044.61 mo
293.76 1031.97 li
293.76 1031.97 li
296.613 1044.61 li
296.613 1044.61 296.613 1044.61 296.613 1044.61 cv
262.878 1028.98 mo
262.878 1028.98 li
263.163 1027.85 li
262.878 1028.98 li
1 .658823 .52549 rgb
f
292.059 1044.9 mo
290.101 1044.9 288.255 1044.72 286.599 1044.34 cv
279.296 1042.63 270.336 1036.54 262.878 1028.98 cv
263.163 1027.85 li
263.338 1027.16 li
268.387 1030.88 273.867 1033.5 278.731 1034.13 cv
279.494 1034.23 280.306 1034.28 281.159 1034.28 cv
284.868 1034.28 289.335 1033.39 293.76 1031.97 cv
296.613 1044.61 li
295.054 1044.8 293.525 1044.9 292.059 1044.9 cv
1 .419608 .270588 rgb
f
271.725 968.485 mo
271.725 968.485 279.869 968.559 289.792 975.061 cv
299.714 981.561 308.785 999.694 308.785 999.694 cv
308.785 999.694 313.331 1011.21 313.924 1017.97 cv
314.517 1024.73 290.6 1035.66 278.731 1034.13 cv
266.861 1032.6 251.311 1019.17 247.35 1006.92 cv
243.39 994.664 266.432 967.801 271.725 968.485 cv
1 .635294 .513726 rgb
f
270.718 968.609 mo
270.719 968.608 270.72 968.608 270.721 968.608 cv
270.72 968.608 270.719 968.608 270.718 968.609 cv
270.756 968.597 mo
270.757 968.597 270.759 968.596 270.76 968.596 cv
270.759 968.596 270.757 968.597 270.756 968.597 cv
270.793 968.586 mo
270.795 968.586 270.797 968.585 270.799 968.585 cv
270.797 968.585 270.795 968.586 270.793 968.586 cv
270.832 968.576 mo
270.833 968.575 270.835 968.575 270.836 968.574 cv
270.835 968.575 270.833 968.575 270.832 968.576 cv
270.869 968.566 mo
270.871 968.565 270.873 968.565 270.875 968.564 cv
270.873 968.565 270.871 968.565 270.869 968.566 cv
270.907 968.556 mo
270.908 968.556 270.909 968.555 270.911 968.555 cv
270.909 968.555 270.908 968.556 270.907 968.556 cv
270.944 968.547 mo
270.944 968.547 270.944 968.547 270.945 968.547 cv
270.944 968.547 270.944 968.547 270.944 968.547 cv
271.049 968.523 mo
271.05 968.523 271.051 968.523 271.052 968.523 cv
271.051 968.523 271.05 968.523 271.049 968.523 cv
271.075 968.518 mo
271.079 968.517 271.084 968.516 271.089 968.516 cv
271.084 968.516 271.079 968.517 271.075 968.518 cv
271.11 968.512 mo
271.115 968.511 271.12 968.51 271.125 968.509 cv
271.12 968.51 271.115 968.511 271.11 968.512 cv
271.144 968.506 mo
271.15 968.505 271.156 968.504 271.161 968.503 cv
271.156 968.504 271.15 968.505 271.144 968.506 cv
271.179 968.5 mo
271.185 968.499 271.191 968.498 271.197 968.497 cv
271.191 968.498 271.185 968.499 271.179 968.5 cv
271.214 968.495 mo
271.221 968.494 271.227 968.493 271.233 968.492 cv
271.227 968.493 271.22 968.494 271.214 968.495 cv
271.249 968.49 mo
271.255 968.489 271.262 968.488 271.268 968.488 cv
271.261 968.488 271.255 968.489 271.249 968.49 cv
271.284 968.486 mo
271.29 968.485 271.297 968.484 271.303 968.484 cv
271.297 968.484 271.29 968.485 271.284 968.486 cv
271.318 968.482 mo
271.324 968.482 271.331 968.481 271.338 968.48 cv
271.331 968.481 271.325 968.482 271.318 968.482 cv
271.352 968.479 mo
271.359 968.479 271.365 968.478 271.372 968.478 cv
271.365 968.478 271.359 968.479 271.352 968.479 cv
271.386 968.477 mo
271.393 968.476 271.399 968.476 271.406 968.475 cv
271.399 968.476 271.393 968.476 271.386 968.477 cv
271.419 968.475 mo
271.426 968.474 271.434 968.474 271.441 968.474 cv
271.434 968.474 271.426 968.474 271.419 968.475 cv
271.452 968.473 mo
271.461 968.473 271.469 968.473 271.477 968.472 cv
271.469 968.473 271.46 968.473 271.452 968.473 cv
271.485 968.472 mo
271.496 968.472 271.507 968.472 271.517 968.472 cv
271.527 968.472 271.536 968.472 271.546 968.472 cv
271.536 968.472 271.527 968.472 271.517 968.472 cv
271.507 968.472 271.496 968.472 271.485 968.472 cv
1 .658823 .52549 rgb
f
273.077 982.69 mo
266.117 982.69 261.097 981.313 261.097 981.313 cv
257.007 981.582 li
262.073 974.884 267.746 969.519 270.718 968.609 cv
270.719 968.608 270.72 968.608 270.721 968.608 cv
270.733 968.604 270.744 968.601 270.756 968.597 cv
270.757 968.597 270.759 968.596 270.76 968.596 cv
270.771 968.593 270.782 968.59 270.793 968.586 cv
270.795 968.586 270.797 968.585 270.799 968.585 cv
270.81 968.582 270.821 968.579 270.832 968.576 cv
270.833 968.575 270.835 968.575 270.836 968.574 cv
270.847 968.571 270.858 968.569 270.869 968.566 cv
270.871 968.565 270.873 968.565 270.875 968.564 cv
270.885 968.561 270.896 968.559 270.907 968.556 cv
270.908 968.556 270.909 968.555 270.911 968.555 cv
270.922 968.552 270.933 968.55 270.944 968.547 cv
270.944 968.547 270.944 968.547 270.945 968.547 cv
270.98 968.538 271.015 968.53 271.049 968.523 cv
271.05 968.523 271.051 968.523 271.052 968.523 cv
271.059 968.521 271.067 968.52 271.075 968.518 cv
271.079 968.517 271.084 968.516 271.089 968.516 cv
271.096 968.514 271.103 968.513 271.11 968.512 cv
271.115 968.511 271.12 968.51 271.125 968.509 cv
271.131 968.508 271.138 968.507 271.144 968.506 cv
271.15 968.505 271.156 968.504 271.161 968.503 cv
271.167 968.502 271.173 968.501 271.179 968.5 cv
271.185 968.499 271.191 968.498 271.197 968.497 cv
271.203 968.496 271.208 968.496 271.214 968.495 cv
271.22 968.494 271.227 968.493 271.233 968.492 cv
271.238 968.491 271.244 968.491 271.249 968.49 cv
271.255 968.489 271.261 968.488 271.268 968.488 cv
271.273 968.487 271.278 968.486 271.284 968.486 cv
271.29 968.485 271.297 968.484 271.303 968.484 cv
271.308 968.483 271.313 968.483 271.318 968.482 cv
271.325 968.482 271.331 968.481 271.338 968.48 cv
271.342 968.48 271.347 968.479 271.352 968.479 cv
271.359 968.479 271.365 968.478 271.372 968.478 cv
271.377 968.477 271.381 968.477 271.386 968.477 cv
271.393 968.476 271.399 968.476 271.406 968.475 cv
271.41 968.475 271.415 968.475 271.419 968.475 cv
271.426 968.474 271.434 968.474 271.441 968.474 cv
271.445 968.473 271.448 968.473 271.452 968.473 cv
271.46 968.473 271.469 968.473 271.477 968.472 cv
271.48 968.472 271.482 968.472 271.485 968.472 cv
271.496 968.472 271.507 968.472 271.517 968.472 cv
271.527 968.472 271.536 968.472 271.546 968.472 cv
271.608 968.473 271.667 968.477 271.725 968.485 cv
271.725 968.485 279.869 968.559 289.792 975.061 cv
290.979 975.839 292.155 976.784 293.304 977.844 cv
291.768 978.731 290.096 979.527 288.284 980.183 cv
282.958 982.108 277.607 982.69 273.077 982.69 cv
1 .419608 .270588 rgb
f
261.097 981.314 mo
261.097 981.314 265.68 991.347 268.687 1005.34 cv
271.692 1019.33 270.155 1033.5 270.155 1033.5 cv
260.224 1038.6 244.256 1038.11 230.647 1020.46 cv
217.037 1002.81 232.451 988.369 235.898 985.711 cv
239.347 983.052 233.974 982.078 236.39 975.098 cv
238.806 968.117 243.061 972.512 247.695 967.66 cv
252.33 962.808 240.178 952.667 248.797 944.742 cv
257.417 936.817 268.653 952.14 268.653 952.14 cv
268.653 952.14 273.41 936.959 282.101 945.609 cv
290.792 954.259 291.15 960.354 284.051 969.766 cv
276.953 979.178 261.097 981.314 261.097 981.314 cv
cp
.0509804 .027451 .294118 rgb
f
268.751 998.9 mo
268.751 998.9 257.982 993.692 257.982 1002.81 cv
257.982 1011.92 261.667 1016.8 267 1014.52 cv
272.333 1012.25 268.751 998.9 268.751 998.9 cv
cp
1 .635294 .513726 rgb
f
1929.61 1526.55 mo
935.518 1526.55 li
912.253 1526.55 893.394 1507.69 893.394 1484.43 cv
893.394 695.341 li
893.394 672.076 912.253 653.217 935.518 653.217 cv
1929.61 653.217 li
1952.88 653.217 1971.73 672.076 1971.73 695.341 cv
1971.73 1484.43 li
1971.73 1507.69 1952.88 1526.55 1929.61 1526.55 cv
.376471 .564706 .996078 rgb
f
912.924 1485.2 mo
912.924 694.565 li
912.924 681.641 923.402 671.163 936.327 671.163 cv
1928.8 671.163 li
1941.73 671.163 1952.21 681.641 1952.21 694.565 cv
1952.21 1485.2 li
1952.21 1498.13 1941.73 1508.61 1928.8 1508.61 cv
936.327 1508.61 li
923.402 1508.61 912.924 1498.13 912.924 1485.2 cv
.870588 .854902 .976471 rgb
f
1927.79 671.163 mo
937.339 671.163 li
923.876 671.163 912.924 681.226 912.924 693.595 cv
912.924 777.044 li
1952.21 777.044 li
1952.21 693.595 li
1952.21 681.226 1941.25 671.163 1927.79 671.163 cv
.176471 .380392 .388235 rgb
f
945.568 712.314 mo
990.015 735.893 li
990.015 688.735 li
945.568 712.314 li
cp
.890196 .282353 .188235 rgb
f
1952.21 752.518 mo
912.924 752.518 li
912.924 794.392 li
1952.21 794.392 li
1952.21 752.518 li
.94902 .945098 .992157 rgb
f
1952.21 802.168 mo
912.924 802.168 li
912.924 1482.86 li
1952.21 1482.86 li
1952.21 802.168 li
.737255 .733333 .909804 rgb
f
1071.13 1277.14 mo
1071.13 1208.94 li
1241.05 1208.94 li
1241.05 1277.14 li
1071.13 1277.14 li
cp
.94902 .945098 .992157 rgb
f
1071.13 1198.18 mo
1071.13 1129.98 li
1241.05 1129.98 li
1241.05 1198.18 li
1071.13 1198.18 li
cp
f
1071.13 1435.06 mo
1071.13 1366.87 li
1241.05 1366.87 li
1241.05 1435.06 li
1071.13 1435.06 li
cp
f
1071.13 1356.1 mo
1071.13 1287.91 li
1241.05 1287.91 li
1241.05 1356.1 li
1071.13 1356.1 li
cp
f
1071.13 970.86 mo
1071.13 916.724 li
1241.05 916.724 li
1241.05 970.86 li
1071.13 970.86 li
cp
f
1071.13 1040.25 mo
1071.13 981.628 li
1241.05 981.628 li
1241.05 1040.25 li
1071.13 1040.25 li
cp
f
1076.99 1034.87 mo
1076.99 987.011 li
1235.19 987.011 li
1235.19 1034.87 li
1076.99 1034.87 li
cp
f
1071.13 1119.21 mo
1071.13 1051.02 li
1241.05 1051.02 li
1241.05 1119.21 li
1071.13 1119.21 li
cp
f
1616.05 1356.1 mo
1616.05 1287.91 li
1785.97 1287.91 li
1785.97 1356.1 li
1616.05 1356.1 li
cp
f
1252.77 1435.06 mo
1252.77 1366.87 li
1422.69 1366.87 li
1422.69 1435.06 li
1252.77 1435.06 li
cp
f
1616.05 1277.14 mo
1616.05 1208.94 li
1785.97 1208.94 li
1785.97 1277.14 li
1616.05 1277.14 li
cp
f
1616.05 1119.21 mo
1616.05 1051.02 li
1785.97 1051.02 li
1785.97 1119.21 li
1616.05 1119.21 li
f
1616.05 1198.18 mo
1616.05 1129.98 li
1785.97 1129.98 li
1785.97 1198.18 li
1616.05 1198.18 li
cp
f
1434.41 1435.06 mo
1434.41 1366.87 li
1604.33 1366.87 li
1604.33 1435.06 li
1434.41 1435.06 li
cp
f
1616.05 1435.06 mo
1616.05 1366.87 li
1785.97 1366.87 li
1785.97 1435.06 li
1616.05 1435.06 li
cp
f
1071.13 905.956 mo
1071.13 851.818 li
1241.05 851.818 li
1241.05 905.956 li
1071.13 905.956 li
cp
f
1252.77 1356.1 mo
1252.77 1287.91 li
1422.69 1287.91 li
1422.69 1356.1 li
1252.77 1356.1 li
cp
f
1252.77 1277.14 mo
1252.77 1208.94 li
1422.69 1208.94 li
1422.69 1277.14 li
1252.77 1277.14 li
cp
f
1616.05 1040.25 mo
1616.05 981.628 li
1785.97 981.628 li
1785.97 1040.25 li
1616.05 1040.25 li
f
1252.77 905.956 mo
1252.77 851.818 li
1422.69 851.818 li
1422.69 905.956 li
1252.77 905.956 li
cp
f
1252.77 970.86 mo
1252.77 916.724 li
1422.69 916.724 li
1422.69 970.86 li
1252.77 970.86 li
cp
f
1252.77 1119.21 mo
1252.77 1051.02 li
1422.69 1051.02 li
1422.69 1119.21 li
1252.77 1119.21 li
cp
f
1434.41 1356.1 mo
1434.41 1287.91 li
1604.33 1287.91 li
1604.33 1356.1 li
1434.41 1356.1 li
cp
f
1252.77 1040.25 mo
1252.77 981.628 li
1422.69 981.628 li
1422.69 1040.25 li
1252.77 1040.25 li
cp
f
1252.77 1198.18 mo
1252.77 1129.98 li
1422.69 1129.98 li
1422.69 1198.18 li
1252.77 1198.18 li
cp
f
1434.41 970.86 mo
1434.41 916.724 li
1604.33 916.724 li
1604.33 970.86 li
1434.41 970.86 li
cp
f
1434.41 1040.25 mo
1434.41 981.628 li
1604.33 981.628 li
1604.33 1040.25 li
1434.41 1040.25 li
f
1434.41 1277.14 mo
1434.41 1208.94 li
1604.33 1208.94 li
1604.33 1277.14 li
1434.41 1277.14 li
cp
f
1434.41 905.956 mo
1434.41 851.818 li
1604.33 851.818 li
1604.33 905.956 li
1434.41 905.956 li
cp
f
1434.41 1119.21 mo
1434.41 1051.02 li
1604.33 1051.02 li
1604.33 1119.21 li
1434.41 1119.21 li
cp
f
1434.41 1198.18 mo
1434.41 1129.98 li
1604.33 1129.98 li
1604.33 1198.18 li
1434.41 1198.18 li
cp
f
1797.69 1435.06 mo
1797.69 1366.87 li
1946.35 1366.87 li
1946.35 1435.06 li
1797.69 1435.06 li
cp
f
1252.77 1477.48 mo
1252.77 1445.83 li
1422.69 1445.83 li
1422.69 1477.48 li
1252.77 1477.48 li
cp
f
1434.41 1477.48 mo
1434.41 1445.83 li
1604.33 1445.83 li
1604.33 1477.48 li
1434.41 1477.48 li
cp
f
1616.05 1477.48 mo
1616.05 1445.83 li
1785.97 1445.83 li
1785.97 1477.48 li
1616.05 1477.48 li
cp
f
918.784 1477.48 mo
918.784 1445.83 li
1059.41 1445.83 li
1059.41 1477.48 li
918.784 1477.48 li
cp
f
918.784 1435.06 mo
918.784 1366.87 li
1059.41 1366.87 li
1059.41 1435.06 li
918.784 1435.06 li
cp
f
1071.13 1477.48 mo
1071.13 1445.83 li
1241.05 1445.83 li
1241.05 1477.48 li
1071.13 1477.48 li
cp
f
1797.69 1477.48 mo
1797.69 1445.83 li
1946.35 1445.83 li
1946.35 1477.48 li
1797.69 1477.48 li
cp
f
1797.69 1356.1 mo
1797.69 1287.91 li
1946.35 1287.91 li
1946.35 1356.1 li
1797.69 1356.1 li
cp
f
1797.69 1040.25 mo
1797.69 981.628 li
1946.35 981.628 li
1946.35 1040.25 li
1797.69 1040.25 li
cp
f
1616.05 970.86 mo
1616.05 916.724 li
1785.97 916.724 li
1785.97 970.86 li
1616.05 970.86 li
cp
.435294 .427451 .490196 rgb
f
1621.91 965.476 mo
1621.91 922.107 li
1780.11 922.107 li
1780.11 965.476 li
1621.91 965.476 li
cp
.94902 .945098 .992157 rgb
f
1797.69 1119.21 mo
1797.69 1051.02 li
1946.35 1051.02 li
1946.35 1119.21 li
1797.69 1119.21 li
cp
f
1797.69 970.86 mo
1797.69 916.724 li
1946.35 916.724 li
1946.35 970.86 li
1797.69 970.86 li
cp
f
1797.69 1198.18 mo
1797.69 1129.98 li
1946.35 1129.98 li
1946.35 1198.18 li
1797.69 1198.18 li
cp
f
1797.69 1277.14 mo
1797.69 1208.94 li
1946.35 1208.94 li
1946.35 1277.14 li
1797.69 1277.14 li
cp
f
918.784 1356.1 mo
918.784 1287.9 li
1059.41 1287.9 li
1059.41 1356.1 li
918.784 1356.1 li
f
1797.69 905.956 mo
1797.69 851.818 li
1946.35 851.818 li
1946.35 905.956 li
1797.69 905.956 li
cp
f
1616.05 905.956 mo
1616.05 851.818 li
1785.97 851.818 li
1785.97 905.956 li
1616.05 905.956 li
cp
f
918.784 1040.25 mo
918.784 981.628 li
1059.41 981.628 li
1059.41 1040.25 li
918.784 1040.25 li
f
918.784 841.051 mo
918.784 807.552 li
1952.21 807.552 li
1952.21 841.051 li
918.784 841.051 li
cp
f
918.784 1277.14 mo
918.784 1208.94 li
1059.41 1208.94 li
1059.41 1277.14 li
918.784 1277.14 li
cp
f
918.784 1198.18 mo
918.784 1129.98 li
1059.41 1129.98 li
1059.41 1198.18 li
918.784 1198.18 li
cp
f
918.784 1119.21 mo
918.784 1051.02 li
1059.41 1051.02 li
1059.41 1119.21 li
918.784 1119.21 li
cp
f
918.784 905.956 mo
918.784 851.818 li
1059.41 851.818 li
1059.41 905.956 li
918.784 905.956 li
cp
f
918.784 970.861 mo
918.784 916.723 li
1059.41 916.723 li
1059.41 970.861 li
918.784 970.861 li
f
1796.7 740.282 mo
1763.22 740.282 li
1761.04 740.282 1759.27 738.512 1759.27 736.329 cv
1759.27 734.146 1761.04 732.375 1763.22 732.375 cv
1796.7 732.375 li
1798.88 732.375 1800.65 734.146 1800.65 736.329 cv
1800.65 738.512 1798.88 740.282 1796.7 740.282 cv
cp
f
1907.65 734.958 mo
1869.34 734.958 li
1869.34 705.356 li
1907.65 705.356 li
1907.65 734.958 li
cp
f
1872.99 731.31 mo
1872.99 709.004 li
1904 709.004 li
1904 731.31 li
1872.99 731.31 li
cp
.435294 .427451 .490196 rgb
f
1907.31 668.205 mo
1907.19 668.009 1896.96 650.431 1896.85 650.229 cv
1896.73 650.229 li
1895.94 651.846 1887.02 668.004 1886.91 668.205 cv
1880.53 668.205 li
1893.66 646.467 li
1881.04 625.239 li
1887.48 625.239 li
1894.38 637.488 1895.62 639.606 1897.11 642.579 cv
1897.3 642.579 li
1899.54 637.864 1901.24 635.307 1907.05 625.239 cv
1913.43 625.239 li
1900.36 646.148 li
1913.74 668.205 li
1907.31 668.205 li
cp
.94902 .945098 .992157 rgb
f
2030.4 1343.25 mo
1880.08 1343.25 li
1874.01 1343.25 1869.1 1338.33 1869.1 1332.27 cv
1869.1 1181.94 li
1869.1 1175.88 1874.01 1170.96 1880.08 1170.96 cv
2030.4 1170.96 li
2036.46 1170.96 2041.38 1175.88 2041.38 1181.94 cv
2041.38 1332.27 li
2041.38 1338.33 2036.46 1343.25 2030.4 1343.25 cv
cp
1 .317647 .211765 rgb
f
2215.69 1343.25 mo
2065.37 1343.25 li
2059.3 1343.25 2054.39 1338.33 2054.39 1332.27 cv
2054.39 1181.94 li
2054.39 1175.88 2059.3 1170.96 2065.37 1170.96 cv
2215.69 1170.96 li
2221.76 1170.96 2226.67 1175.88 2226.67 1181.94 cv
2226.67 1332.27 li
2226.67 1338.33 2221.76 1343.25 2215.69 1343.25 cv
cp
f
2030.4 1529.78 mo
1880.08 1529.78 li
1874.01 1529.78 1869.1 1524.87 1869.1 1518.8 cv
1869.1 1368.48 li
1869.1 1362.42 1874.01 1357.5 1880.08 1357.5 cv
2030.4 1357.5 li
2036.46 1357.5 2041.38 1362.42 2041.38 1368.48 cv
2041.38 1518.8 li
2041.38 1524.87 2036.46 1529.78 2030.4 1529.78 cv
cp
f
2215.69 1529.78 mo
2065.37 1529.78 li
2059.3 1529.78 2054.39 1524.87 2054.39 1518.8 cv
2054.39 1368.48 li
2054.39 1362.42 2059.3 1357.5 2065.37 1357.5 cv
2215.69 1357.5 li
2221.76 1357.5 2226.67 1362.42 2226.67 1368.48 cv
2226.67 1518.8 li
2226.67 1524.87 2221.76 1529.78 2215.69 1529.78 cv
cp
f
1919.05 1209.57 mo
1955.24 1245.75 li
1991.43 1209.57 li
1994.56 1206.44 1999.63 1206.42 2002.78 1209.54 cv
2002.78 1209.55 li
2005.95 1212.68 2005.97 1217.79 2002.82 1220.94 cv
1966.67 1257.19 li
2002.75 1293.26 li
2005.88 1296.39 2005.89 1301.47 2002.78 1304.61 cv
1999.64 1307.78 1994.52 1307.79 1991.37 1304.64 cv
1955.24 1268.51 li
1919.11 1304.64 li
1915.96 1307.79 1910.84 1307.78 1907.7 1304.61 cv
1904.59 1301.47 1904.6 1296.39 1907.73 1293.26 cv
1943.8 1257.19 li
1907.66 1220.94 li
1904.51 1217.79 1904.53 1212.68 1907.69 1209.55 cv
1907.7 1209.54 li
1910.85 1206.42 1915.92 1206.44 1919.05 1209.57 cv
cp
1 .917647 .517647 rgb
f
1963.24 1384.46 mo
1963.24 1435.64 li
2014.42 1435.64 li
2018.85 1435.64 2022.44 1439.21 2022.47 1443.64 cv
2022.47 1443.65 li
2022.49 1448.11 2018.89 1451.73 2014.43 1451.74 cv
1963.24 1451.81 li
1963.24 1502.82 li
1963.24 1507.25 1959.67 1510.85 1955.24 1510.87 cv
1950.78 1510.89 1947.15 1507.28 1947.15 1502.82 cv
1947.15 1451.73 li
1896.06 1451.73 li
1891.6 1451.73 1887.99 1448.1 1888.01 1443.64 cv
1888.03 1439.21 1891.63 1435.64 1896.06 1435.64 cv
1947.07 1435.64 li
1947.14 1384.45 li
1947.15 1379.99 1950.77 1376.39 1955.23 1376.41 cv
1955.24 1376.41 li
1959.67 1376.44 1963.24 1380.03 1963.24 1384.46 cv
cp
f
2154.39 1480.96 mo
2154.39 1499.38 2126.79 1499.4 2126.79 1480.96 cv
2126.79 1476.87 2128.05 1473.58 2130.59 1471.08 cv
2137.84 1463.93 2154.39 1466.66 2154.39 1480.96 cv
cp
2154.39 1406.23 mo
2154.39 1419.72 2138.51 1424.09 2130.59 1416.17 cv
2125.49 1411.07 2125.47 1401.39 2130.59 1396.35 cv
2138.08 1388.97 2154.39 1392.19 2154.39 1406.23 cv
cp
2093.79 1436.21 mo
2187.26 1436.21 li
2191.69 1436.21 2195.27 1439.8 2195.27 1444.22 cv
2195.27 1448.64 2191.69 1452.22 2187.26 1452.22 cv
2093.79 1452.22 li
2089.37 1452.22 2085.79 1448.64 2085.79 1444.22 cv
2085.79 1439.8 2089.37 1436.21 2093.79 1436.21 cv
cp
f
2093.69 1249.2 mo
2187.37 1249.2 li
2191.73 1249.2 2195.27 1252.74 2195.27 1257.1 cv
2195.27 1261.47 2191.73 1265.01 2187.37 1265.01 cv
2093.69 1265.01 li
2089.33 1265.01 2085.79 1261.47 2085.79 1257.1 cv
2085.79 1252.74 2089.33 1249.2 2093.69 1249.2 cv
cp
f
2028.84 1109.65 mo
2036.21 1141.31 li
2026.88 1152.95 li
2012.03 1146.33 li
2012.03 1146.33 2017.25 1139.63 2017.39 1134.41 cv
2017.52 1129.19 2012.52 1111.48 2012.52 1111.48 cv
2028.84 1109.65 li
cp
.905882 .415686 .32549 rgb
f
2199.03 732.263 mo
2212.59 702.715 li
2227.09 699.23 li
2234.78 713.559 li
2234.78 713.559 2226.55 715.653 2223.25 719.698 cv
2219.94 723.744 2213.05 740.806 2213.05 740.806 cv
2199.03 732.263 li
cp
f
1929.01 522.839 mo
1935.85 578.242 li
1978.94 554.491 li
1955.75 512.952 li
1929.01 522.839 li
1 .635294 .513726 rgb
f
1932.78 553.338 mo
1931.44 542.554 li
1932.78 553.338 li
1932.78 553.338 1932.78 553.338 1932.78 553.338 cv
1 .658823 .52549 rgb
f
1932.78 553.338 mo
1931.44 542.554 li
1929.01 522.839 li
1955.75 512.952 li
1960.99 522.346 li
1956.2 533.786 1948.99 544.423 1941.83 549.339 cv
1939.37 551.024 1936.24 552.355 1932.78 553.338 cv
1 .419608 .270588 rgb
f
2016.3 750.564 mo
2068 769.734 li
2068 769.734 2129.59 834.648 2147.75 814.036 cv
2165.91 793.425 2200.46 722.819 2200.46 722.819 cv
2223.7 737.429 li
2223.7 737.429 2204.45 840.815 2178.17 862.153 cv
2108.63 918.604 1978.94 819.482 1978.94 819.482 cv
2016.3 750.564 li
cp
0 .415686 .419608 rgb
f
1931.38 454.353 mo
1931.38 454.353 1930.04 453.808 1922.4 464.288 cv
1916.96 471.759 1913.67 480.686 1910.27 489.21 cv
1905.21 501.905 1900.99 515.721 1904.81 529.315 cv
1906.81 536.46 1935.49 538.405 1947.04 532.252 cv
1958.58 526.101 1969.3 506.366 1968.62 492.306 cv
1967.94 478.246 1936.52 451.61 1931.38 454.353 cv
cp
1 .635294 .513726 rgb
f
1950.25 522.771 mo
1952.02 526.53 1954.98 527.567 1963.96 527.734 cv
1975.49 527.949 1986.95 519.202 1989.86 503.222 cv
1998.76 454.353 1952.46 442.425 1940.55 437.751 cv
1936.09 435.999 1932.59 437.446 1929.97 439.94 cv
1925.75 443.955 1920.07 445.932 1914.32 445.003 cv
1911.8 444.597 1905.14 444.439 1903.33 448.272 cv
1898.16 459.242 1898.02 470.645 1917.54 470.645 cv
1961.76 470.645 1946.85 515.522 1950.25 522.771 cv
cp
.0862745 .0470588 .501961 rgb
f
2008.02 750.564 mo
2013.71 750.712 2046.74 763.418 2050.93 784.746 cv
2055.13 806.074 2032.39 1117.62 2032.39 1117.62 cv
2011.1 1120.55 li
2011.1 1120.55 1948.6 812.796 1958.85 788.81 cv
1969.1 764.823 2008.02 750.564 2008.02 750.564 cv
cp
0 .6 .627451 rgb
f
2050.93 784.746 mo
2046.74 763.418 2013.71 750.712 2008.02 750.564 cv
2008.02 750.564 1969.1 764.823 1958.85 788.81 cv
1957.89 791.047 1957.57 795.753 1957.77 802.448 cv
1972.04 797.214 1987.41 792.875 1993 795.883 cv
2004.46 802.048 2013.48 814.132 2035.34 819.483 cv
2039.58 820.52 2044.99 819.816 2050.98 818.008 cv
2051.58 800.467 2051.65 788.384 2050.93 784.746 cv
cp
0 .45098 .470588 rgb
f
2037.88 1136.49 mo
2037.88 1136.49 2042.02 1141.58 2043.57 1150.53 cv
2045.12 1159.48 2043.12 1168.1 2043.12 1168.1 cv
2043.12 1168.1 1999.63 1173.26 1982.35 1171.15 cv
1965.07 1169.04 1963.36 1166.15 1963.49 1161.28 cv
1963.61 1156.42 1986.89 1156.42 1993.46 1150.18 cv
2000.04 1143.94 2008.93 1130.87 2013.16 1132.64 cv
2017.39 1134.41 2017.07 1142.24 2022.64 1142.39 cv
2028.22 1142.53 2035.22 1133.69 2037.88 1136.49 cv
cp
.0352941 .262745 .298039 rgb
f
2208.32 705.508 mo
2208.32 705.508 2208.16 698.943 2212.42 690.92 cv
2216.67 682.898 2223.53 677.313 2223.53 677.313 cv
2223.53 677.313 2261.07 699.857 2273.44 712.111 cv
2285.82 724.365 2285.39 727.698 2282.31 731.468 cv
2279.23 735.237 2260.84 720.975 2251.82 721.883 cv
2242.79 722.792 2227.76 727.681 2225.5 723.689 cv
2223.25 719.698 2228.29 713.705 2223.97 710.175 cv
2219.65 706.645 2208.7 709.351 2208.32 705.508 cv
cp
f
1921.74 603.742 mo
1920.92 607.696 li
1910.92 655.682 1926.92 717.799 1945.56 763.131 cv
1951.43 777.418 1951.28 781.884 1958.85 788.809 cv
1993.01 769.971 li
1921.74 603.742 li
.647059 .215686 .360784 rgb
f
1918.8 660.178 mo
1918.8 660.167 1918.8 660.159 1918.8 660.148 cv
1918.8 660.158 1918.8 660.168 1918.8 660.178 cv
1918.78 659.858 mo
1918.77 659.835 1918.77 659.81 1918.77 659.787 cv
1918.77 659.81 1918.77 659.835 1918.78 659.858 cv
1918.75 659.552 mo
1918.75 659.516 1918.74 659.48 1918.74 659.444 cv
1918.74 659.48 1918.75 659.516 1918.75 659.552 cv
1918.72 659.283 mo
1918.72 659.222 1918.71 659.164 1918.71 659.103 cv
1918.71 659.162 1918.72 659.223 1918.72 659.283 cv
1918.7 658.986 mo
1918.69 658.915 1918.69 658.843 1918.68 658.772 cv
1918.69 658.844 1918.69 658.914 1918.7 658.986 cv
1918.67 658.667 mo
1918.66 658.588 1918.66 658.51 1918.65 658.431 cv
1918.66 658.51 1918.66 658.588 1918.67 658.667 cv
1918.65 658.364 mo
1918.64 658.278 1918.63 658.19 1918.62 658.105 cv
1918.63 658.19 1918.64 658.278 1918.65 658.364 cv
1918.62 658.053 mo
1918.61 657.962 1918.6 657.87 1918.6 657.779 cv
1918.6 657.867 1918.61 657.964 1918.62 658.053 cv
1918.6 657.77 mo
1918.59 657.672 1918.58 657.573 1918.57 657.475 cv
1918.58 657.574 1918.59 657.672 1918.6 657.77 cv
1918.57 657.447 mo
1918.56 657.349 1918.55 657.247 1918.55 657.149 cv
1918.55 657.247 1918.56 657.349 1918.57 657.447 cv
1918.55 657.135 mo
1918.54 657.034 1918.53 656.933 1918.52 656.831 cv
1918.53 656.93 1918.54 657.037 1918.55 657.135 cv
.34902 .337255 .588235 rgb
f
1918.27 653.217 mo
1918.27 653.217 li
1917.29 637.551 1917.94 622.309 1920.8 608.263 cv
1917.94 622.31 1917.29 637.55 1918.27 653.217 cv
.662745 .552941 .588235 rgb
f
1918.52 656.819 mo
1918.43 655.616 1918.34 654.415 1918.27 653.217 cv
1918.27 653.217 li
1918.34 654.415 1918.43 655.616 1918.52 656.819 cv
.34902 .337255 .588235 rgb
f
1920.8 608.253 mo
1920.82 608.162 1920.84 608.071 1920.86 607.981 cv
1920.84 608.072 1920.82 608.162 1920.8 608.253 cv
1920.86 607.97 mo
1920.88 607.879 1920.9 607.787 1920.92 607.696 cv
1920.9 607.787 1920.88 607.879 1920.86 607.97 cv
.662745 .552941 .588235 rgb
f
1923.87 693.321 mo
1921.56 682.296 1919.81 671.161 1918.8 660.178 cv
1918.8 660.168 1918.8 660.158 1918.8 660.148 cv
1918.79 660.052 1918.78 659.955 1918.78 659.858 cv
1918.77 659.835 1918.77 659.81 1918.77 659.787 cv
1918.76 659.708 1918.76 659.631 1918.75 659.552 cv
1918.75 659.516 1918.74 659.48 1918.74 659.444 cv
1918.73 659.391 1918.73 659.336 1918.72 659.283 cv
1918.72 659.223 1918.71 659.162 1918.71 659.103 cv
1918.71 659.065 1918.7 659.023 1918.7 658.986 cv
1918.69 658.914 1918.69 658.844 1918.68 658.772 cv
1918.68 658.736 1918.67 658.703 1918.67 658.667 cv
1918.66 658.588 1918.66 658.51 1918.65 658.431 cv
1918.65 658.408 1918.65 658.387 1918.65 658.364 cv
1918.64 658.278 1918.63 658.19 1918.62 658.105 cv
1918.62 658.087 1918.62 658.071 1918.62 658.053 cv
1918.61 657.964 1918.6 657.867 1918.6 657.779 cv
1918.6 657.777 1918.6 657.772 1918.6 657.77 cv
1918.59 657.672 1918.58 657.574 1918.57 657.475 cv
1918.57 657.465 1918.57 657.458 1918.57 657.447 cv
1918.56 657.349 1918.55 657.247 1918.55 657.149 cv
1918.55 657.143 1918.55 657.141 1918.55 657.135 cv
1918.54 657.037 1918.53 656.93 1918.52 656.831 cv
1918.52 656.828 1918.52 656.823 1918.52 656.819 cv
1918.43 655.616 1918.34 654.415 1918.27 653.217 cv
1917.29 637.55 1917.94 622.31 1920.8 608.263 cv
1920.8 608.26 1920.8 608.256 1920.8 608.253 cv
1920.82 608.162 1920.84 608.072 1920.86 607.981 cv
1920.86 607.976 1920.86 607.975 1920.86 607.97 cv
1920.88 607.879 1920.9 607.787 1920.92 607.696 cv
1920.92 607.696 li
1921.74 603.742 li
1951.39 672.911 li
1941.84 681.04 1932.18 687.917 1923.87 693.321 cv
.486274 .160784 .270588 rgb
f
1974.45 544.446 mo
1974.45 544.446 2004.27 580.214 2019.68 617.205 cv
2035.08 654.196 2087.58 775.576 2087.58 775.576 cv
2087.58 775.576 2038.21 808.266 2007.38 798.868 cv
1976.54 789.471 1926.4 690.584 1913.09 644.403 cv
1899.79 598.222 1932.48 564.656 1938.35 561.529 cv
1944.22 558.403 1974.45 544.446 1974.45 544.446 cv
cp
0 .6 .627451 rgb
f
1913.09 644.403 mo
1916.59 656.527 1922.62 672.284 1930.18 689.101 cv
1963.32 666.304 2010.35 623.747 1995.41 573.046 cv
1989.96 564.823 1906.67 622.095 1913.09 644.403 cv
cp
0 .45098 .470588 rgb
f
1709.77 524.286 mo
1700.8 524.286 1693.53 516.182 1693.53 506.186 cv
1693.53 496.189 1700.8 488.085 1709.77 488.085 cv
1718.73 488.085 1726 496.189 1726 506.186 cv
1726 516.182 1718.73 524.286 1709.77 524.286 cv
cp
.0980392 .176471 .643137 rgb
f
1827.02 523.149 mo
1827.02 489.998 li
1839.73 489.998 li
1845.48 489.998 1850.15 494.663 1850.15 500.416 cv
1850.15 512.731 li
1850.15 518.485 1845.48 523.149 1839.73 523.149 cv
1827.02 523.149 li
.0745098 .133333 .482353 rgb
f
1794.69 568.579 mo
1812.03 514.971 li
1828.51 519.868 li
1814.21 568.288 li
1794.69 568.579 li
.129412 .239216 .858824 rgb
f
1741.89 544.841 mo
1757.2 534.002 1775.5 528.181 1794.27 528.181 cv
1833.09 528.181 li
1836.1 516.81 li
1837.93 509.893 1837.93 502.62 1836.1 495.702 cv
1833.09 484.331 li
1794.27 484.331 li
1775.5 484.331 1757.2 478.51 1741.89 467.672 cv
1714.47 448.272 li
1714.47 564.24 li
1741.89 544.841 li
1 .317647 .211765 rgb
f
1834.42 523.149 mo
1834.42 523.149 li
1836.1 516.81 li
1836.11 516.756 1836.13 516.702 1836.14 516.648 cv
1836.13 516.702 1836.11 516.756 1836.1 516.81 cv
1834.42 523.149 li
1837.47 506.256 mo
1837.47 502.709 1837.01 499.161 1836.1 495.702 cv
1837.01 499.161 1837.47 502.709 1837.47 506.256 cv
.0745098 .0431373 .101961 rgb
f
1714.47 564.24 mo
1714.47 554.888 li
1724.46 540.566 1740.06 520.098 1749.45 517.28 cv
1764.1 512.885 1814.15 518.989 1822.7 510.444 cv
1831.24 501.899 1833.09 484.331 1833.09 484.331 cv
1836.1 495.702 li
1836.1 495.702 li
1837.01 499.161 1837.47 502.709 1837.47 506.256 cv
1837.47 509.748 1837.03 513.241 1836.14 516.648 cv
1836.13 516.702 1836.11 516.756 1836.1 516.81 cv
1834.42 523.149 li
1833.09 528.181 li
1826.05 528.181 li
1807.76 528.181 li
1794.27 528.181 li
1793.97 528.181 1793.68 528.183 1793.39 528.186 cv
1774.93 528.365 1756.96 534.171 1741.89 544.841 cv
1741.89 544.841 li
1714.47 564.24 li
1 .101961 .0431373 rgb
f
1705.06 568.988 mo
1705.06 444.159 li
1705.06 441.56 1707.17 439.453 1709.77 439.453 cv
1712.36 439.453 1714.47 441.56 1714.47 444.159 cv
1714.47 568.988 li
1714.47 571.588 1712.36 573.695 1709.77 573.695 cv
1707.17 573.695 1705.06 571.588 1705.06 568.988 cv
cp
1 .917647 .517647 rgb
f
1945 498.336 mo
1945 498.336 1945.87 485.972 1952.38 488.085 cv
1958.89 490.199 1961.38 503.458 1955.42 506.256 cv
1949.46 509.055 1945 498.336 1945 498.336 cv
cp
1 .635294 .513726 rgb
f
1846 582.158 mo
1843.01 582.158 1829.63 558.721 1829.63 558.721 cv
1829.63 558.721 1806.66 538.497 1803.59 538.497 cv
1800.53 538.497 1800.36 545.212 1798.74 548.63 cv
1797.11 552.048 1794.69 556.279 1794.69 558.721 cv
1794.69 561.162 1791.98 565.87 1794.69 568.579 cv
1797.4 571.289 1805.73 581.345 1810.78 582.158 cv
1815.83 582.972 1826.41 592.504 1826.41 592.504 cv
1846 582.158 li
cp
f
1990 603.742 mo
1974.02 630.238 1922.06 677.649 1896.4 680.303 cv
1870.75 682.956 1819.74 592.504 1819.74 592.504 cv
1837.47 566.119 li
1837.47 566.119 1886.01 615.837 1898.33 612.17 cv
1910.65 608.503 1935.72 548.538 1970.26 551.287 cv
2004.8 554.036 1995.81 594.104 1990 603.742 cv
cp
0 .6 .627451 rgb
f
1167.13 608.259 mo
1167.13 608.259 1271.2 616.677 1271.2 647.504 cv
1271.2 672.886 1224.35 775.392 1215.69 814.833 cv
1214.08 822.174 1223.82 832.935 1223.35 834.133 cv
1221.09 839.798 1208.94 831.731 1208.94 831.731 cv
1199.59 803.406 li
1199.59 803.406 1235.37 670.385 1224.48 659.492 cv
1213.58 648.599 1108.5 626.097 1108.5 626.097 cv
1167.13 608.259 li
.905882 .415686 .32549 rgb
f
1210.28 760.983 mo
1213.76 746.389 1217.51 729.825 1220.52 714.345 cv
1231.15 683.615 1239.65 655.967 1236.38 646.148 cv
1235.01 642.035 1231.84 638.439 1227.5 635.301 cv
1228.08 635.188 1228.66 635.081 1229.24 634.977 cv
1235.45 638.641 1240.04 643.01 1241.77 648.203 cv
1246.61 662.717 1225.72 716.183 1210.28 760.983 cv
.905882 .27451 .172549 rgb
f
1071.74 626.982 mo
1071.74 626.982 1068.59 641.362 1077.3 650.073 cv
1086.01 658.783 1182.99 654.158 1187.76 667.11 cv
1196.24 690.113 1173.92 802.967 1173.92 802.967 cv
1183.56 831.112 li
1183.56 831.112 1196.71 839.99 1197.94 836.664 cv
1198.53 835.078 1188.7 822.484 1189.85 812.413 cv
1194.14 774.865 1243.55 667.672 1236.38 646.148 cv
1227.81 620.458 1149.41 614.964 1149.41 614.964 cv
1071.74 626.982 li
1 .635294 .513726 rgb
f
1071.74 631.761 mo
1071.74 631.761 1068.67 646.148 1074.43 651.902 cv
1080.18 657.657 1187.76 667.11 1187.76 667.11 cv
1187.76 667.11 1184.17 649.436 1205.14 641.626 cv
1226.1 633.817 1247.78 631.198 1264.27 634.563 cv
1264.27 634.563 1261.04 624.063 1229.8 614.964 cv
1198.56 605.866 1164.18 605.455 1164.18 605.455 cv
1071.74 631.761 li
0 .415686 .419608 rgb
f
1200.22 802.967 mo
1200.22 802.967 1197.99 801.519 1194.89 806.173 cv
1191.78 810.827 1193.12 837.042 1193.12 837.042 cv
1198.03 838.129 li
1198.03 838.129 1198.18 818.902 1199.32 819.117 cv
1200.46 819.332 1202.39 839.295 1205.03 840.579 cv
1207.67 841.864 1225.72 846.518 1229.1 844.208 cv
1232.49 841.899 1223.35 834.133 1223.35 834.133 cv
1223.35 834.133 1213.93 833.624 1212.95 832.195 cv
1211.98 830.767 1200.22 802.967 1200.22 802.967 cv
cp
.0352941 .262745 .298039 rgb
f
1106.36 355.642 mo
1109.64 356.331 1139.25 356.663 1139.25 378.202 cv
1139.25 399.742 1138.82 408.305 1144.39 417.725 cv
1149.96 427.144 1140.69 449.998 1133.74 450.075 cv
1126.8 450.153 1126.23 475.097 1126.23 475.097 cv
1126.23 475.097 1086.16 493.079 1075.03 488.37 cv
1072.25 487.193 1069.09 486.979 1065.92 487.32 cv
1046.25 489.436 1032.46 467.231 1045.05 451.97 cv
1045.58 451.326 1046.15 450.694 1046.77 450.075 cv
1063.8 433.044 1061.76 434.423 1061.76 415.156 cv
1061.76 395.889 1065.18 401.455 1073.32 389.895 cv
1081.45 378.334 1086.24 351.422 1106.36 355.642 cv
.0862745 .0313726 .384314 rgb
f
1142.34 507.539 mo
1142.34 507.539 1161.05 558.489 1182.95 566.052 cv
1204.84 573.615 1214.79 597.497 1214.79 597.497 cv
1201.83 608.898 li
1159.32 589.935 li
1142.34 507.539 li
.647059 .215686 .360784 rgb
f
1170.8 557.573 mo
1167.37 554.031 1164.12 549.753 1161.12 545.206 cv
1161.12 545.202 li
1164.12 549.748 1167.37 554.026 1170.8 557.568 cv
1170.8 557.569 1170.8 557.572 1170.8 557.573 cv
.686274 .717647 .737255 rgb
f
1171.02 588.582 mo
1166.93 577.077 1162.29 561.709 1161.12 545.206 cv
1164.12 549.753 1167.37 554.031 1170.8 557.573 cv
1172.03 562.08 1173.36 567.122 1174.66 572.264 cv
1171.02 588.582 li
.454902 .207843 .321569 rgb
f
1131.18 450.36 mo
1137.17 456.354 1173.08 488.213 1165.83 507.886 cv
1149.74 551.576 1177.76 601.264 1177.76 608.114 cv
1177.76 614.964 1092.23 638.084 1073.39 638.084 cv
1054.55 638.084 1096.05 577.915 1088.34 557.363 cv
1080.63 536.812 1070.39 454.407 1076.81 447.984 cv
1081.1 443.702 1129.98 449.16 1131.18 450.36 cv
.647059 .215686 .360784 rgb
f
1073.45 638.084 mo
1073.46 638.084 1073.46 638.084 1073.47 638.084 cv
1073.46 638.084 1073.46 638.084 1073.45 638.084 cv
1073.51 638.084 mo
1073.52 638.084 1073.53 638.084 1073.54 638.084 cv
1073.53 638.084 1073.52 638.084 1073.51 638.084 cv
1073.59 638.083 mo
1073.59 638.083 1073.59 638.083 1073.6 638.083 cv
1073.59 638.083 1073.59 638.083 1073.59 638.083 cv
1073.74 638.082 mo
1073.74 638.082 1073.74 638.082 1073.74 638.082 cv
1073.74 638.082 1073.74 638.082 1073.74 638.082 cv
1073.81 638.081 mo
1073.81 638.081 1073.81 638.081 1073.81 638.081 cv
1073.81 638.081 1073.81 638.081 1073.81 638.081 cv
.164706 .258824 .298039 rgb
f
1088.31 557.295 mo
1088.31 557.286 1088.31 557.276 1088.3 557.266 cv
1088.31 557.276 1088.31 557.285 1088.31 557.295 cv
1088.29 557.228 mo
1088.28 557.217 1088.28 557.206 1088.28 557.195 cv
1088.28 557.205 1088.28 557.218 1088.29 557.228 cv
1088.26 557.158 mo
1088.26 557.146 1088.25 557.135 1088.25 557.123 cv
1088.25 557.135 1088.26 557.147 1088.26 557.158 cv
1088.24 557.086 mo
1088.23 557.062 1088.22 557.038 1088.21 557.014 cv
1088.22 557.037 1088.23 557.063 1088.24 557.086 cv
1088.2 556.994 mo
1088.2 556.978 1088.19 556.96 1088.18 556.944 cv
1088.19 556.961 1088.2 556.977 1088.2 556.994 cv
1088.18 556.926 mo
1088.17 556.909 1088.17 556.892 1088.16 556.875 cv
1088.17 556.892 1088.17 556.909 1088.18 556.926 cv
1088.15 556.862 mo
1086.61 552.558 1084.96 545.823 1083.38 537.761 cv
1084.96 545.825 1086.61 552.557 1088.15 556.862 cv
1083.37 537.744 mo
1083.37 537.713 1083.36 537.68 1083.35 537.649 cv
1083.36 537.681 1083.37 537.712 1083.37 537.744 cv
1083.35 537.61 mo
1083.34 537.582 1083.34 537.555 1083.33 537.528 cv
1083.33 537.555 1083.34 537.583 1083.35 537.61 cv
1083.32 537.467 mo
1083.31 537.409 1083.29 537.349 1083.28 537.289 cv
1083.29 537.349 1083.31 537.408 1083.32 537.467 cv
1083.28 537.276 mo
1083.28 537.251 1083.27 537.223 1083.27 537.198 cv
1083.27 537.225 1083.28 537.248 1083.28 537.276 cv
1083.25 537.133 mo
1083.25 537.116 1083.25 537.101 1083.24 537.084 cv
1083.25 537.102 1083.25 537.116 1083.25 537.133 cv
1083.22 536.961 mo
1083.22 536.959 1083.22 536.956 1083.22 536.954 cv
1083.22 536.957 1083.22 536.958 1083.22 536.961 cv
.654902 .545098 .580392 rgb
f
1073.39 638.084 mo
1069.84 638.084 1068.43 635.947 1068.43 632.34 cv
1068.44 618.474 1089.29 582.89 1089.3 563.554 cv
1089.31 561.235 1089.01 559.15 1088.34 557.363 cv
1088.34 557.363 li
1088.33 557.341 1088.32 557.318 1088.31 557.295 cv
1088.31 557.285 1088.31 557.276 1088.3 557.266 cv
1088.3 557.254 1088.29 557.241 1088.29 557.228 cv
1088.28 557.218 1088.28 557.205 1088.28 557.195 cv
1088.27 557.183 1088.27 557.17 1088.26 557.158 cv
1088.26 557.147 1088.25 557.135 1088.25 557.123 cv
1088.24 557.111 1088.24 557.098 1088.24 557.086 cv
1088.23 557.063 1088.22 557.037 1088.21 557.014 cv
1088.21 557.007 1088.2 557 1088.2 556.994 cv
1088.2 556.977 1088.19 556.961 1088.18 556.944 cv
1088.18 556.938 1088.18 556.932 1088.18 556.926 cv
1088.17 556.909 1088.17 556.892 1088.16 556.875 cv
1088.16 556.871 1088.16 556.866 1088.15 556.862 cv
1086.61 552.557 1084.96 545.825 1083.38 537.761 cv
1083.37 537.755 1083.37 537.75 1083.37 537.744 cv
1083.37 537.712 1083.36 537.681 1083.35 537.649 cv
1083.35 537.635 1083.35 537.624 1083.35 537.61 cv
1083.34 537.583 1083.33 537.555 1083.33 537.528 cv
1083.33 537.507 1083.32 537.488 1083.32 537.467 cv
1083.31 537.408 1083.29 537.349 1083.28 537.289 cv
1083.28 537.285 1083.28 537.28 1083.28 537.276 cv
1083.28 537.248 1083.27 537.225 1083.27 537.198 cv
1083.26 537.176 1083.26 537.155 1083.25 537.133 cv
1083.25 537.116 1083.25 537.102 1083.24 537.084 cv
1083.24 537.044 1083.23 537.001 1083.22 536.961 cv
1083.22 536.958 1083.22 536.957 1083.22 536.954 cv
1079.95 520.12 1076.95 497.778 1075.58 479.643 cv
1086.78 502.793 1101.93 536.152 1104.74 552.718 cv
1109.31 579.582 1081.91 637.267 1081.9 637.285 cv
1081.88 637.289 li
1078.86 637.691 li
1076.89 637.922 1075.19 638.057 1073.81 638.081 cv
1073.81 638.081 1073.81 638.081 1073.81 638.081 cv
1073.78 638.081 1073.76 638.081 1073.74 638.082 cv
1073.74 638.082 1073.74 638.082 1073.74 638.082 cv
1073.69 638.082 1073.64 638.083 1073.6 638.083 cv
1073.59 638.083 1073.59 638.083 1073.59 638.083 cv
1073.57 638.083 1073.55 638.084 1073.54 638.084 cv
1073.53 638.084 1073.52 638.084 1073.51 638.084 cv
1073.5 638.084 1073.49 638.084 1073.47 638.084 cv
1073.46 638.084 1073.46 638.084 1073.45 638.084 cv
1073.43 638.084 1073.41 638.084 1073.39 638.084 cv
1073.39 638.084 li
.482353 .160784 .270588 rgb
f
1116.99 411.441 mo
1120.27 450.42 li
1120.27 450.42 1142.31 496.892 1131.77 500.745 cv
1121.23 504.599 1097.13 452.203 1097.13 452.203 cv
1097.13 402.311 li
1116.99 411.441 li
1 .635294 .513726 rgb
f
1119.78 444.615 mo
1112.96 444.44 1103.69 437.488 1097.13 427.554 cv
1097.13 402.311 li
1116.99 411.441 li
1119.78 444.615 li
1 .419608 .270588 rgb
f
1116.99 366.346 mo
1116.99 366.346 1128.55 361.208 1132.4 384.329 cv
1136.26 407.449 1133.01 432.031 1121.59 433.744 cv
1110.18 435.456 1089.16 417.096 1089.16 398.03 cv
1089.16 381.642 1107.85 363.908 1116.99 366.346 cv
cp
1 .635294 .513726 rgb
f
1173.92 802.967 mo
1173.92 802.967 1171.69 801.519 1168.58 806.173 cv
1165.47 810.827 1166.82 837.042 1166.82 837.042 cv
1171.73 838.129 li
1171.73 838.129 1171.88 818.902 1173.02 819.117 cv
1174.15 819.332 1176.08 839.295 1178.72 840.579 cv
1181.36 841.864 1199.41 846.518 1202.8 844.208 cv
1206.18 841.899 1197.04 834.133 1197.04 834.133 cv
1197.04 834.133 1187.62 833.624 1186.65 832.195 cv
1185.67 830.767 1173.92 802.967 1173.92 802.967 cv
cp
.0352941 .262745 .298039 rgb
f
1180.06 627.053 mo
1173.97 627.053 1157.48 623.167 1147.59 621.268 cv
1150.82 620.264 1153.91 619.267 1156.79 618.289 cv
1167.6 620.247 li
1172.92 620.366 li
1173.29 620.421 1173.66 620.452 1174.04 620.457 cv
1174.04 620.457 li
1182.83 620.587 li
1182.89 620.588 li
1182.89 620.588 li
1246.87 621.53 li
1221.68 623.822 1185.26 627.053 1180.06 627.053 cv
.0352941 .337255 .360784 rgb
f
1147.59 621.268 mo
1144.4 620.654 1141.89 620.247 1140.65 620.247 cv
1136.83 620.247 1128.79 617.793 1125.07 616.584 cv
1133.75 614.112 li
1156.79 618.289 li
1153.91 619.267 1150.82 620.264 1147.59 621.268 cv
.454902 .207843 .321569 rgb
f
1131.2 613.649 mo
1131.2 607.051 li
1167.18 616.929 li
1182.95 616.929 li
1182.89 620.588 li
1167.6 620.247 li
1131.2 613.649 li
.407843 .392157 .462745 rgb
f
1131.2 607.051 mo
1222.55 609.439 li
1285.38 620.247 li
1167.18 616.929 li
1131.2 607.051 li
.101961 .192157 .25098 rgb
f
1147.22 597.497 mo
1147.22 597.497 1160.63 602.192 1167.6 600.185 cv
1174.57 598.176 1179.41 597.199 1186.3 601.976 cv
1193.19 606.752 1195.48 611.799 1195.48 611.799 cv
1195.48 611.799 1199.7 616.434 1195.48 617.019 cv
1191.27 617.605 1162.21 616.733 1161.4 615.927 cv
1160.59 615.121 1137.52 610.782 1137.52 610.782 cv
1147.22 597.497 li
1 .635294 .513726 rgb
f
1057.95 584.492 mo
1075.25 608.929 1128.33 619.306 1149.41 614.964 cv
1149.41 614.964 1150.02 608.089 1159.27 598.841 cv
1161.41 596.699 1095.86 571.245 1088.34 566.904 cv
1080.81 562.563 1078.18 450.204 1078.18 450.204 cv
1078.18 450.204 1066.84 454.976 1061.59 471.551 cv
1051.03 504.888 1044.25 565.137 1057.95 584.492 cv
cp
.760784 .313726 .462745 rgb
f
1056.54 486.571 mo
1051.83 485.178 1047.6 482.123 1044.67 478.189 cv
1038.56 469.987 1038.52 458.443 1046.77 450.188 cv
1063.8 433.157 1061.76 434.535 1061.76 415.268 cv
1061.76 396.001 1059.82 391.467 1067.96 379.907 cv
1076.09 368.347 1086.24 351.535 1106.36 355.755 cv
1106.62 355.809 1107.04 355.862 1107.6 355.922 cv
1107.99 356.021 1129.52 356.105 1125.59 368.288 cv
1125.59 368.288 1120.37 365.715 1116.77 371.383 cv
1110.08 381.943 1109.92 385.297 1102.22 388.723 cv
1094.51 392.148 1097.49 405.42 1097.49 414.197 cv
1097.49 420.922 1096.54 427.628 1096.72 434.354 cv
1096.92 442.012 1111.55 495.296 1068.43 487.421 cv
1064.47 486.699 1060.5 487.739 1056.54 486.571 cv
cp
0 .235294 .556863 rgb
f
1190.36 501.931 mo
1166.13 610.441 li
1165 615.532 1168.83 620.38 1174.04 620.457 cv
1288.05 622.136 li
1291.75 622.191 1295.03 619.771 1296.06 616.221 cv
1328.29 506.032 li
1329.83 500.767 1325.88 495.5 1320.39 495.5 cv
1198.39 495.5 li
1194.54 495.5 1191.2 498.173 1190.36 501.931 cv
.407843 .392157 .462745 rgb
f
1249.3 621.566 mo
1174.04 620.457 li
1169.46 620.39 1165.95 616.636 1165.93 612.272 cv
1165.93 611.67 1166 611.057 1166.13 610.441 cv
1188.48 510.338 li
1223.98 514.601 1279.22 524.38 1279.22 543.955 cv
1279.22 564.069 1260.58 601.038 1249.3 621.566 cv
.462745 .443137 .517647 rgb
f
1230.19 1423.58 mo
1225.51 1430.78 1235.74 1443.46 1244.32 1443.46 cv
1247.98 1443.46 1251.38 1441.62 1253.38 1438.56 cv
1384.23 1238.03 li
1388.98 1230.75 1380.62 1216.81 1371.93 1216.81 cv
1230.19 1423.58 li
cp
.0980392 .176471 .643137 rgb
f
1351.25 1427.77 mo
1336.75 1427.77 1332.21 1415.32 1332.21 1400.71 cv
1332.21 1370.65 1355.99 1368.18 1365.33 1380.25 cv
1374.16 1391.66 1373.2 1427.77 1351.25 1427.77 cv
cp
1309.08 1401.34 mo
1309.08 1420.34 1315.5 1437.77 1333.39 1444.77 cv
1348.66 1450.75 1369.35 1448.52 1381.86 1434.07 cv
1394.84 1419.07 1396.03 1396.03 1390.67 1380.09 cv
1376.8 1338.91 1309.08 1345.06 1309.08 1401.34 cv
cp
f
1361.53 1221.71 mo
1230.88 1422.37 li
1226.19 1429.56 1231.36 1439.08 1239.94 1439.08 cv
1243.6 1439.08 1247.01 1437.24 1249 1434.18 cv
1379.85 1233.65 li
1384.6 1226.38 1379.38 1216.74 1370.69 1216.74 cv
1366.99 1216.74 1363.55 1218.61 1361.53 1221.71 cv
cp
.129412 .239216 .858824 rgb
f
1346.04 1421.3 mo
1331.54 1421.3 1327 1408.85 1327 1394.24 cv
1327 1364.18 1350.78 1361.71 1360.12 1373.78 cv
1368.95 1385.19 1367.99 1421.3 1346.04 1421.3 cv
cp
1303.87 1394.87 mo
1303.87 1413.88 1310.29 1431.3 1328.18 1438.3 cv
1343.45 1444.27 1364.13 1442.05 1376.64 1427.6 cv
1389.63 1412.6 1390.81 1389.56 1385.46 1373.62 cv
1371.59 1332.44 1303.87 1338.59 1303.87 1394.87 cv
cp
f
1261.45 1282.27 mo
1246.95 1282.27 1242.41 1269.82 1242.41 1255.21 cv
1242.41 1225.15 1266.19 1222.68 1275.53 1234.75 cv
1284.36 1246.16 1283.4 1282.27 1261.45 1282.27 cv
cp
1219.28 1255.84 mo
1219.28 1274.85 1225.7 1292.27 1243.59 1299.27 cv
1258.86 1305.25 1279.55 1303.02 1292.06 1288.57 cv
1305.04 1273.57 1306.23 1250.53 1300.87 1234.59 cv
1287 1193.41 1219.28 1199.56 1219.28 1255.84 cv
cp
.0980392 .176471 .643137 rgb
f
1256.24 1275.8 mo
1241.74 1275.8 1237.2 1263.35 1237.2 1248.74 cv
1237.2 1218.68 1260.98 1216.21 1270.32 1228.28 cv
1279.15 1239.69 1278.19 1275.8 1256.24 1275.8 cv
cp
1214.07 1249.37 mo
1214.07 1268.38 1220.49 1285.8 1238.38 1292.8 cv
1253.65 1298.78 1274.33 1296.55 1286.84 1282.1 cv
1299.83 1267.1 1301.02 1244.06 1295.66 1228.13 cv
1281.79 1186.94 1214.07 1193.09 1214.07 1249.37 cv
cp
.129412 .239216 .858824 rgb
f
1205.88 1575.25 mo
1205.88 1590 1193.93 1601.95 1179.18 1601.95 cv
1164.44 1601.95 1152.49 1590 1152.49 1575.25 cv
1152.49 1560.51 1164.44 1548.55 1179.18 1548.55 cv
1193.93 1548.55 1205.88 1560.51 1205.88 1575.25 cv
cp
.121569 .188235 .313726 rgb
f
1427.07 1575.25 mo
1427.07 1590 1415.11 1601.95 1400.37 1601.95 cv
1385.62 1601.95 1373.67 1590 1373.67 1575.25 cv
1373.67 1560.51 1385.62 1548.55 1400.37 1548.55 cv
1415.11 1548.55 1427.07 1560.51 1427.07 1575.25 cv
cp
f
1166.08 1574.72 mo
1163.92 1575.1 li
1158.51 1576.05 1153.36 1572.43 1152.41 1567.02 cv
1147.18 1537.21 li
1169.6 1537.17 li
1174.17 1563.21 li
1175.11 1568.62 1171.5 1573.77 1166.08 1574.72 cv
cp
1 .670588 0 rgb
f
1387.27 1574.72 mo
1385.11 1575.1 li
1379.7 1576.05 1374.54 1572.43 1373.59 1567.02 cv
1368.37 1537.21 li
1390.79 1537.17 li
1395.35 1563.21 li
1396.3 1568.62 1392.68 1573.77 1387.27 1574.72 cv
cp
f
1394.27 1538.92 mo
1138.72 1538.92 li
1136.84 1538.92 1135.32 1537.39 1135.32 1535.51 cv
1135.32 1533.63 1136.84 1532.1 1138.72 1532.1 cv
1394.27 1532.1 li
1413.12 1532.1 1422.7 1509.13 1409.32 1495.76 cv
1394.78 1481.22 1375.49 1472.27 1355 1470.56 cv
1285.8 1464.8 li
1283.93 1464.64 1282.53 1462.99 1282.69 1461.12 cv
1282.84 1459.24 1284.64 1458.01 1286.53 1458.17 cv
1355.56 1463.77 li
1377.66 1465.61 1398.46 1475.26 1414.14 1490.94 cv
1419.45 1496.25 1422.37 1503.31 1422.37 1510.81 cv
1422.37 1526.31 1409.77 1538.92 1394.27 1538.92 cv
cp
f
1400.23 1464.81 mo
1398.34 1464.81 1396.82 1463.28 1396.82 1461.4 cv
1396.82 1304.8 li
1396.82 1274.74 1420.33 1249.84 1450.33 1248.12 cv
1498.84 1245.33 li
1500.74 1245.21 1502.33 1246.66 1502.44 1248.54 cv
1502.54 1250.42 1501.11 1252.03 1499.23 1252.13 cv
1450.73 1254.92 li
1424.32 1256.44 1403.63 1278.35 1403.63 1304.8 cv
1403.63 1461.4 li
1403.63 1463.28 1402.11 1464.81 1400.23 1464.81 cv
cp
f
1193.82 1431.56 mo
1222.46 1431.56 li
1226.48 1457.99 li
1198.64 1457.99 li
1193.82 1431.56 li
cp
1206.66 1327.67 mo
1211.14 1357.13 li
1180.26 1357.13 li
1174.89 1327.67 li
1206.66 1327.67 li
cp
1266.61 1431.56 mo
1269.65 1457.99 li
1232.78 1457.99 li
1228.76 1431.56 li
1266.61 1431.56 li
cp
1224.02 1400.43 mo
1263.04 1400.43 li
1266.06 1426.73 li
1228.02 1426.73 li
1224.02 1400.43 li
cp
1216.99 1395.6 mo
1187.27 1395.6 li
1181.14 1361.95 li
1211.87 1361.95 li
1216.99 1395.6 li
cp
1258.62 1361.95 mo
1262.48 1395.6 li
1223.29 1395.6 li
1218.17 1361.95 li
1258.62 1361.95 li
cp
1254.69 1327.67 mo
1258.07 1357.13 li
1217.44 1357.13 li
1212.96 1327.67 li
1254.69 1327.67 li
cp
1326.08 1431.56 mo
1326.08 1457.99 li
1275.09 1457.99 li
1272.06 1431.56 li
1326.08 1431.56 li
cp
1326.08 1400.43 mo
1326.08 1426.73 li
1271.5 1426.73 li
1268.48 1400.43 li
1326.08 1400.43 li
cp
1326.08 1361.95 mo
1326.08 1395.6 li
1267.93 1395.6 li
1264.07 1361.95 li
1326.08 1361.95 li
cp
1326.08 1357.13 mo
1263.51 1357.13 li
1260.13 1327.67 li
1326.08 1327.67 li
1326.08 1357.13 li
cp
1369.1 1431.56 mo
1369.1 1457.99 li
1329.75 1457.99 li
1329.75 1431.56 li
1369.1 1431.56 li
cp
1369.1 1400.43 mo
1369.1 1426.73 li
1329.75 1426.73 li
1329.75 1400.43 li
1369.1 1400.43 li
cp
1369.1 1361.95 mo
1369.1 1395.6 li
1329.75 1395.6 li
1329.75 1361.95 li
1369.1 1361.95 li
cp
1369.1 1357.13 mo
1329.75 1357.13 li
1329.75 1327.67 li
1369.1 1327.67 li
1369.1 1357.13 li
cp
1373.93 1395.6 mo
1373.93 1361.95 li
1396.82 1361.95 li
1396.82 1395.6 li
1373.93 1395.6 li
cp
1396.82 1431.56 mo
1396.82 1457.99 li
1373.93 1457.99 li
1373.93 1431.56 li
1396.82 1431.56 li
cp
1373.93 1426.73 mo
1373.93 1400.43 li
1396.82 1400.43 li
1396.82 1426.73 li
1373.93 1426.73 li
cp
1396.82 1357.13 mo
1373.93 1357.13 li
1373.93 1327.67 li
1396.82 1327.67 li
1396.82 1357.13 li
cp
1188.15 1400.43 mo
1217.72 1400.43 li
1221.72 1426.73 li
1192.94 1426.73 li
1188.15 1400.43 li
cp
1404.26 1321.56 mo
1403.63 1320.85 li
1172.31 1320.85 li
1169.4 1320.85 1167.2 1323.49 1167.72 1326.35 cv
1192.42 1461.9 li
1192.73 1463.59 1194.19 1464.81 1195.9 1464.81 cv
1403.63 1464.81 li
1404.26 1464.1 li
1404.26 1321.56 li
cp
f
1616.53 1563.91 mo
1609.43 1583.65 li
1592.73 1574.66 li
1592.73 1574.66 1593.57 1571.81 1595.29 1570.63 cv
1597 1569.45 1601.83 1544.17 1601.83 1544.17 cv
1616.53 1563.91 li
cp
.905882 .415686 .32549 rgb
f
1768.98 1542.08 mo
1784.9 1529.93 li
1784.9 1529.93 1738.37 1427.26 1738.37 1402.9 cv
1738.37 1378.54 1751.79 1251.01 1735.6 1234.82 cv
1719.42 1218.64 1719.77 1200.72 1719.77 1200.72 cv
1660.98 1229.95 li
1660.98 1229.95 1667.4 1367.58 1684.45 1418.73 cv
1701.5 1469.88 1768.98 1542.08 1768.98 1542.08 cv
cp
.0392157 .309804 .34902 rgb
f
1735.6 1234.82 mo
1723.17 1222.4 1720.5 1208.96 1719.92 1203.38 cv
1719.33 1202.69 1718.77 1202.05 1718.25 1201.47 cv
1660.98 1229.95 li
1660.98 1229.95 1665.55 1327.93 1677.22 1389.27 cv
1700.37 1350.97 1746.36 1312.52 1742.96 1265.94 cv
1741.99 1250.61 1739.78 1239 1735.6 1234.82 cv
cp
.027451 .231373 .262745 rgb
f
1673.65 1233.61 mo
1673.65 1233.61 1589.45 1365.14 1584.58 1390.72 cv
1579.71 1416.29 1596.39 1556.21 1596.39 1556.21 cv
1619.73 1563.91 li
1619.73 1563.91 1634.21 1420.86 1651.56 1403.51 cv
1668.92 1386.15 1731.44 1303.99 1738.37 1288.41 cv
1749.73 1262.87 1729.51 1215.34 1729.51 1215.34 cv
1673.65 1233.61 li
cp
.0509804 .34902 .396078 rgb
f
1729.51 1215.34 mo
1673.65 1233.61 li
1673.65 1233.61 1663.44 1249.56 1649.93 1271.42 cv
1651.71 1272.73 1653.55 1273.85 1655.45 1274.76 cv
1677.55 1285.26 1719.77 1261.23 1735.6 1244.57 cv
1736.5 1243.62 1737.17 1242.07 1737.63 1240 cv
1734.06 1226.03 1729.51 1215.34 1729.51 1215.34 cv
cp
.027451 .231373 .262745 rgb
f
1608 992.252 mo
1608 992.252 1593.45 994.096 1589.96 1000.25 cv
1586.48 1006.39 1585.45 1048.62 1593.86 1052.51 cv
1602.26 1056.41 1625.01 1042.06 1626.45 1024.64 cv
1627.88 1007.21 1608 992.252 1608 992.252 cv
1 .635294 .513726 rgb
f
gsave
1588.24 1007.51 mo
1588.24 1007.51 li
1588.34 1006.77 1588.44 1006.06 1588.55 1005.4 cv
1588.44 1006.06 1588.34 1006.77 1588.24 1007.51 cv
1588.55 1005.39 mo
1588.55 1005.38 1588.56 1005.37 1588.56 1005.36 cv
1588.56 1005.37 1588.55 1005.38 1588.55 1005.39 cv
1588.57 1005.32 mo
1588.57 1005.31 1588.57 1005.3 1588.57 1005.3 cv
1588.57 1005.3 1588.57 1005.31 1588.57 1005.32 cv
1588.85 1003.76 mo
1588.85 1003.76 1588.85 1003.76 1588.85 1003.76 cv
1588.85 1003.76 1588.85 1003.76 1588.85 1003.76 cv
1588.87 1003.71 mo
1588.87 1003.71 1588.87 1003.7 1588.87 1003.7 cv
1588.87 1003.7 1588.87 1003.7 1588.87 1003.71 cv
1588.88 1003.65 mo
1588.88 1003.64 1588.88 1003.63 1588.88 1003.63 cv
1588.88 1003.63 1588.88 1003.64 1588.88 1003.65 cv
1588.89 1003.59 mo
1588.89 1003.58 1588.89 1003.57 1588.9 1003.56 cv
1588.89 1003.57 1588.89 1003.58 1588.89 1003.59 cv
1588.9 1003.53 mo
1588.91 1003.52 1588.91 1003.51 1588.91 1003.5 cv
1588.91 1003.51 1588.9 1003.52 1588.9 1003.53 cv
clp
1588.24 1003.5 mo
1588.91 1003.5 li
1588.91 1007.51 li
1588.24 1007.51 li
cp
.94902 .623529 .517647 rgb
f
grestore
1588.91 1003.49 mo
1589.23 1002.04 1589.58 1000.92 1589.96 1000.25 cv
1592.33 996.076 1599.78 993.886 1604.33 992.908 cv
1604.33 992.908 li
1599.78 993.886 1592.33 996.076 1589.96 1000.25 cv
1589.58 1000.92 1589.23 1002.04 1588.91 1003.49 cv
.94902 .623529 .517647 rgb
f
1608.22 992.42 mo
1608.22 992.419 1608.22 992.419 1608.22 992.418 cv
1608.22 992.419 1608.22 992.419 1608.22 992.42 cv
1608.18 992.386 mo
1608.18 992.386 1608.17 992.385 1608.17 992.385 cv
1608.17 992.385 1608.18 992.386 1608.18 992.386 cv
1608.13 992.35 mo
1608.13 992.35 1608.13 992.349 1608.13 992.348 cv
1608.13 992.349 1608.13 992.35 1608.13 992.35 cv
1608.11 992.339 mo
1608.11 992.339 1608.11 992.339 1608.11 992.338 cv
1608.11 992.339 1608.11 992.339 1608.11 992.339 cv
1608.11 992.332 mo
1608.1 992.325 1608.09 992.319 1608.08 992.313 cv
1608.09 992.319 1608.1 992.325 1608.11 992.332 cv
1608.08 992.313 mo
1608.08 992.311 1608.08 992.31 1608.08 992.308 cv
1608.08 992.31 1608.08 992.311 1608.08 992.313 cv
1608.06 992.295 mo
1608.06 992.293 1608.05 992.291 1608.05 992.289 cv
1608.05 992.291 1608.06 992.293 1608.06 992.295 cv
1608.03 992.27 mo
1608.03 992.27 li
1608.03 992.27 li
1608.02 992.268 mo
1608.01 992.258 1608 992.252 1608 992.252 cv
1608 992.252 1608.01 992.257 1608.02 992.268 cv
.737255 .482353 .47451 rgb
f
1619.17 1011.04 mo
1618.83 1011.04 1618.55 1010.94 1618.33 1010.73 cv
1615.63 1008.03 1597.01 1009.28 1588.24 1007.51 cv
1588.34 1006.77 1588.44 1006.06 1588.55 1005.4 cv
1588.55 1005.4 1588.55 1005.4 1588.55 1005.39 cv
1588.55 1005.38 1588.56 1005.37 1588.56 1005.36 cv
1588.56 1005.35 1588.56 1005.33 1588.57 1005.32 cv
1588.57 1005.31 1588.57 1005.3 1588.57 1005.3 cv
1588.66 1004.75 1588.75 1004.24 1588.85 1003.76 cv
1588.85 1003.76 1588.85 1003.76 1588.85 1003.76 cv
1588.86 1003.74 1588.86 1003.73 1588.87 1003.71 cv
1588.87 1003.7 1588.87 1003.7 1588.87 1003.7 cv
1588.87 1003.68 1588.87 1003.66 1588.88 1003.65 cv
1588.88 1003.64 1588.88 1003.63 1588.88 1003.63 cv
1588.88 1003.62 1588.89 1003.6 1588.89 1003.59 cv
1588.89 1003.58 1588.89 1003.57 1588.9 1003.56 cv
1588.9 1003.55 1588.9 1003.54 1588.9 1003.53 cv
1588.9 1003.52 1588.91 1003.51 1588.91 1003.5 cv
1588.91 1003.5 1588.91 1003.49 1588.91 1003.49 cv
1589.23 1002.04 1589.58 1000.92 1589.96 1000.25 cv
1592.33 996.076 1599.78 993.886 1604.33 992.908 cv
1605.88 992.576 1607.09 992.383 1607.65 992.301 cv
1607.88 992.268 1608 992.252 1608 992.252 cv
1608 992.252 li
1608 992.252 1608.01 992.258 1608.02 992.268 cv
1608.02 992.269 1608.02 992.269 1608.03 992.27 cv
1608.03 992.27 li
1608.03 992.275 1608.04 992.282 1608.05 992.289 cv
1608.05 992.291 1608.06 992.293 1608.06 992.295 cv
1608.06 992.299 1608.07 992.304 1608.08 992.308 cv
1608.08 992.31 1608.08 992.311 1608.08 992.313 cv
1608.08 992.313 1608.08 992.313 1608.08 992.313 cv
1608.09 992.319 1608.1 992.325 1608.11 992.332 cv
1608.11 992.334 1608.11 992.336 1608.11 992.338 cv
1608.11 992.339 1608.11 992.339 1608.11 992.339 cv
1608.12 992.342 1608.12 992.345 1608.13 992.348 cv
1608.13 992.349 1608.13 992.35 1608.13 992.35 cv
1608.14 992.361 1608.16 992.373 1608.17 992.385 cv
1608.17 992.385 1608.18 992.386 1608.18 992.386 cv
1608.19 992.396 1608.2 992.407 1608.22 992.418 cv
1608.22 992.419 1608.22 992.419 1608.22 992.42 cv
1609.65 993.542 1617.83 1000.18 1622.76 1009.31 cv
1621.28 1010.39 1620.04 1011.04 1619.17 1011.04 cv
1 .419608 .270588 rgb
f
1659.66 1053.16 mo
1626.45 1024.64 li
1605.13 1043.91 li
1622.96 1070.96 li
1659.66 1053.16 li
1 .635294 .513726 rgb
f
1631.43 1028.92 mo
1626.45 1024.64 li
1631.43 1028.92 li
1631.43 1028.92 li
.94902 .623529 .517647 rgb
f
1620.67 1067.48 mo
1605.13 1043.91 li
1626.45 1024.64 li
1631.43 1028.92 li
1630.41 1029.43 li
1628.25 1030.49 1627.18 1032.95 1627.88 1035.25 cv
1630.26 1043.07 1633.76 1060.49 1620.67 1067.48 cv
1 .419608 .270588 rgb
f
1599.39 1036.32 mo
1603.8 1040.73 1618.53 1019.44 1618.53 1011.85 cv
1618.53 1004.27 1595.59 1005.72 1587.39 1001.82 cv
1579.19 997.929 1573.95 982.003 1587.39 976.264 cv
1600.83 970.524 1608.41 976.879 1608.41 976.879 cv
1608.41 976.879 1621.12 973.189 1632.39 977.289 cv
1643.67 981.388 1644.9 990.202 1644.9 990.202 cv
1644.9 990.202 1651.66 990.407 1653.3 1002.91 cv
1654.94 1015.41 1643.96 1039.67 1643.96 1039.67 cv
1626.52 1026.28 li
1626.19 1026.48 li
1623.28 1028.23 1622.12 1031.87 1623.49 1034.99 cv
1624.97 1038.36 1626.52 1042.72 1626.52 1046.16 cv
1626.52 1050.18 1622.73 1058.8 1614.57 1064.18 cv
1604.97 1070.51 1591.87 1066.02 1587.8 1055.28 cv
1585.57 1049.38 1583.86 1043.19 1585.25 1040.63 cv
1588.24 1035.09 1594.99 1031.91 1599.39 1036.32 cv
cp
.011765 .145098 .490196 rgb
f
1618.33 1010.73 mo
1618.33 1010.73 1624.89 1005.08 1629.36 1009.55 cv
1633.83 1014.02 1633.13 1018.26 1628.31 1021.63 cv
1623.5 1025 1616.31 1019.3 1616.31 1019.3 cv
1618.33 1010.73 li
cp
1 .635294 .513726 rgb
f
1639.38 1052.13 mo
1639.38 1052.13 1608.94 1105.72 1608.94 1142.26 cv
1608.94 1178.8 1623.66 1249.15 1655.45 1263.5 cv
1677.55 1273.48 1719.77 1250.66 1735.6 1234.82 cv
1751.43 1218.99 1696.63 1028.99 1639.38 1052.13 cv
cp
.568627 .164706 .301961 rgb
f
1630.6 1236.42 mo
1643.84 1232.33 1656.44 1222.5 1662.75 1201.47 cv
1679.48 1145.71 1662.71 1058.85 1662.71 1058.85 cv
1657.97 1051.75 li
1610.98 1169.42 li
1614.01 1191.65 1620.47 1217.18 1630.6 1236.42 cv
cp
.486275 .164706 .270588 rgb
f
1784.43 1528.63 mo
1796.38 1540.71 li
1785.39 1553.09 li
1785.39 1553.09 1782.1 1548.82 1781.28 1546.91 cv
1780.46 1545 1770.48 1537.76 1770.48 1537.76 cv
1784.43 1528.63 li
cp
.905882 .415686 .32549 rgb
f
1814.09 1545.12 mo
1814.09 1545.12 1812.71 1540.29 1807.25 1538.1 cv
1801.79 1535.91 1794.88 1534.56 1793.93 1534.97 cv
1792.97 1535.38 1789.88 1545.07 1786.53 1546.5 cv
1783.19 1547.93 1775.3 1545.87 1775.3 1545.87 cv
1775.3 1545.87 1772.4 1550.73 1774.22 1560.81 cv
1776.04 1570.88 1766.93 1587.66 1765.4 1591.48 cv
1763.87 1595.3 1769.54 1598.53 1769.54 1598.53 cv
1769.54 1598.53 1789.42 1596.37 1814.09 1545.12 cv
cp
.0352941 .262745 .298039 rgb
f
1789.59 1529.59 mo
1768.59 1542.86 li
1762.28 1539.23 li
1784.49 1522.95 li
1789.59 1529.59 li
cp
0 .6 .627451 rgb
f
1606.19 1601.23 mo
1606.19 1601.23 1610.66 1598.92 1611.73 1593.14 cv
1612.8 1587.36 1612.76 1580.32 1612.17 1579.46 cv
1611.59 1578.61 1601.48 1577.48 1599.42 1574.48 cv
1597.36 1571.48 1597.82 1563.34 1597.82 1563.34 cv
1597.82 1563.34 1592.49 1561.45 1582.97 1565.22 cv
1573.45 1568.98 1555.2 1563.35 1551.16 1562.6 cv
1547.11 1561.85 1545.06 1568.05 1545.06 1568.05 cv
1545.06 1568.05 1551.09 1587.11 1606.19 1601.23 cv
cp
.0352941 .262745 .298039 rgb
f
1620.12 1570.63 mo
1592.73 1558.21 li
1593.67 1547.94 li
1625.5 1561.71 li
1620.12 1570.63 li
cp
0 .6 .627451 rgb
f
1509.99 1234.27 mo
1507.94 1236.32 1484.23 1236.42 1478.57 1236.42 cv
1472.92 1236.42 1462.54 1245.93 1463.95 1247.34 cv
1465.36 1248.75 1478.4 1246.51 1478.4 1246.51 cv
1478.4 1246.51 1485.19 1250.98 1478.74 1253.31 cv
1472.29 1255.65 1480.95 1256.75 1484.39 1256.75 cv
1487.84 1256.75 1513.92 1250.62 1513.92 1250.62 cv
1509.99 1234.27 li
cp
1 .635294 .513726 rgb
f
1662.71 1058.85 mo
1662.71 1058.85 1664.35 1169.66 1646.08 1200.72 cv
1627.81 1231.78 1513.92 1253.16 1513.92 1253.16 cv
1502.44 1227.4 li
1502.44 1227.4 1592.49 1199.5 1598.58 1183.06 cv
1604.67 1166.62 1616.62 1085.58 1622.96 1070.96 cv
1630.42 1053.79 1658.45 1036.32 1662.71 1058.85 cv
cp
.568627 .164706 .301961 rgb
f
938.083 1027.53 mo
938.083 1027.53 963.058 1100 978.391 1101.63 cv
993.724 1103.26 1046.06 1077.93 1046.06 1077.93 cv
1050.21 1093.93 li
1050.21 1093.93 994.391 1134.01 972.391 1126.64 cv
950.391 1119.26 928.855 1097.23 928.855 1097.23 cv
938.083 1027.53 li
cp
.905882 .415686 .32549 rgb
f
914.867 922.404 mo
916.131 922.638 li
936.347 926.395 li
936.347 926.395 935.221 930.775 939.544 935.098 cv
943.866 939.421 967.223 1021.71 954.311 1034.63 cv
941.397 1047.54 889.317 1042.79 887.77 1042.79 cv
886.224 1042.79 878.007 982.987 878.007 982.987 cv
914.867 922.404 li
0 .117647 .278431 rgb
f
941.072 1318.61 mo
941.072 1318.61 926.718 1467.94 933.945 1486.47 cv
941.173 1504.99 952.974 1536.83 952.974 1536.83 cv
939.697 1536.83 li
912.565 1500.78 li
912.565 1500.78 913.216 1499.12 910.957 1491.89 cv
908.698 1484.66 892.435 1406.96 898.308 1370.37 cv
899.974 1359.99 902.04 1309.97 907.148 1301.5 cv
920.047 1280.12 941.072 1307.81 941.072 1318.61 cv
.905882 .415686 .32549 rgb
f
911.533 1493.84 mo
911.533 1493.84 908.185 1492.47 905.207 1499.47 cv
902.229 1506.48 910.64 1541.19 910.64 1541.19 cv
917.482 1541.4 li
917.482 1541.4 912.828 1515.66 914.404 1515.66 cv
915.98 1515.66 923.597 1541.86 927.45 1542.91 cv
931.304 1543.96 956.612 1545.62 960.553 1541.68 cv
964.494 1537.74 950.313 1529.67 950.313 1529.67 cv
950.313 1529.67 937.594 1531.36 935.93 1529.7 cv
934.267 1528.04 911.533 1493.84 911.533 1493.84 cv
cp
.0352941 .262745 .298039 rgb
f
902.664 1318.61 mo
902.664 1318.61 888.309 1467.94 895.537 1486.47 cv
902.764 1504.99 914.566 1536.83 914.566 1536.83 cv
901.288 1536.83 li
874.156 1500.78 li
874.156 1500.78 874.807 1499.12 872.548 1491.89 cv
870.29 1484.66 854.026 1406.96 859.899 1370.37 cv
861.565 1359.99 863.631 1309.97 868.74 1301.5 cv
881.638 1280.12 902.664 1307.81 902.664 1318.61 cv
1 .635294 .513726 rgb
f
860.894 1360.91 mo
860.894 1360.91 li
861.116 1358.31 861.349 1355.38 861.599 1352.25 cv
861.349 1355.38 861.116 1358.31 860.894 1360.91 cv
861.603 1352.2 mo
861.605 1352.17 861.608 1352.14 861.611 1352.11 cv
861.608 1352.14 861.605 1352.17 861.603 1352.2 cv
863.087 1334.59 mo
863.091 1334.54 863.095 1334.49 863.1 1334.45 cv
863.095 1334.49 863.091 1334.54 863.087 1334.59 cv
863.102 1334.42 mo
863.107 1334.37 863.112 1334.31 863.118 1334.25 cv
863.118 1334.25 li
863.112 1334.31 863.107 1334.37 863.102 1334.42 cv
1 .207843 .109804 rgb
f
873.799 1361.86 mo
869.304 1361.86 864.85 1361.6 860.894 1360.91 cv
861.116 1358.31 861.349 1355.38 861.599 1352.25 cv
861.6 1352.24 861.602 1352.22 861.603 1352.2 cv
861.605 1352.17 861.608 1352.14 861.611 1352.11 cv
862.046 1346.65 862.531 1340.59 863.087 1334.59 cv
863.091 1334.54 863.095 1334.49 863.1 1334.45 cv
863.101 1334.44 863.101 1334.43 863.102 1334.42 cv
863.107 1334.37 863.112 1334.31 863.118 1334.25 cv
870.262 1332.99 885.13 1330.39 901.831 1327.57 cv
901.16 1334.96 900.151 1346.37 899.066 1359.79 cv
893.645 1360.6 883.626 1361.86 873.799 1361.86 cv
1 .419608 .270588 rgb
f
899.242 1361.6 mo
899.242 1361.6 li
900.068 1352.06 901.06 1337.68 902.436 1325.25 cv
902.436 1325.25 li
901.06 1337.68 900.068 1352.06 899.243 1361.6 cv
.376471 .372549 .521569 rgb
f
937.537 1359.01 mo
937.617 1358.03 937.696 1357.06 937.775 1356.1 cv
937.775 1356.1 li
937.696 1357.06 937.617 1358.03 937.537 1359.01 cv
937.537 1359.01 li
.737255 .482353 .47451 rgb
f
937.775 1356.1 mo
937.775 1356.1 li
939.219 1338.51 940.477 1324.92 940.911 1320.31 cv
940.478 1324.92 939.219 1338.51 937.775 1356.1 cv
.94902 .623529 .517647 rgb
f
912.462 1362.79 mo
907.344 1362.79 902.85 1362.26 899.242 1361.6 cv
900.068 1352.06 901.06 1337.68 902.437 1325.25 cv
916.137 1322.98 929.979 1320.78 941.016 1319.19 cv
940.99 1319.47 940.955 1319.84 940.911 1320.31 cv
940.477 1324.92 939.219 1338.51 937.775 1356.1 cv
937.696 1357.06 937.617 1358.03 937.537 1359.01 cv
933.755 1360.08 928.966 1361.16 923.032 1362.03 cv
919.299 1362.57 915.751 1362.79 912.462 1362.79 cv
.905882 .27451 .172549 rgb
f
849.961 1349.68 mo
849.961 1318.91 849.961 1273.72 849.961 1260.45 cv
849.961 1236.96 858.996 1175.21 873.452 1144.49 cv
887.908 1113.77 947.539 1144.49 947.539 1144.49 cv
947.539 1144.49 961.152 1174.37 964.766 1217.74 cv
968.232 1352.17 li
925.267 1358.84 891.654 1359.36 849.961 1349.68 cv
cp
.568627 .164706 .301961 rgb
f
964.962 1225.36 mo
964.766 1217.74 li
964.132 1210.13 963.189 1202.94 962.067 1196.25 cv
895.653 1179.63 li
895.653 1179.63 927.859 1210.5 964.962 1225.36 cv
cp
.486275 .164706 .270588 rgb
f
932.963 1017.1 mo
935.012 1019.15 962.968 1047.26 960.724 1069.93 cv
957.372 1103.79 947.995 1138.1 951.242 1151.63 cv
956.663 1174.22 875.297 1177.61 871.498 1149.06 cv
870.146 1138.91 872.784 1113.5 870.394 1090.52 cv
866.599 1054.02 857.919 1018.09 859.527 1017.1 cv
895.147 995.252 927.347 1011.48 932.963 1017.1 cv
0 .6 .627451 rgb
f
951.263 1129.18 mo
939.857 1128.69 920.964 1126.26 918.525 1123.82 cv
915.148 1120.44 906.613 1092.73 906.613 1092.73 cv
912.769 1089.88 li
912.769 1089.88 898.865 1039.12 884.169 1024.43 cv
875.463 1015.72 870.081 1013.34 867.139 1012.85 cv
865.723 1013.57 864.302 1014.32 862.875 1015.13 cv
862.723 1018.7 862.352 1026.84 861.842 1034.4 cv
863.711 1044.82 866.292 1058.97 868.397 1074.18 cv
873.743 1086.6 879.933 1099.44 881.28 1101.63 cv
883.843 1105.8 904.39 1137.82 904.39 1137.82 cv
950.872 1149.18 li
950.456 1144.22 949.531 1138.01 951.263 1129.18 cv
.0509804 .34902 .396078 rgb
f
911.683 1180.53 mo
922.855 1156.93 li
1025.8 1101.52 li
1004.33 992.661 li
1015.75 968.541 li
1128.23 1021.8 li
1115.88 1047.89 li
1042.33 1013.06 li
1062.67 1117.22 li
961.382 1171.48 li
1043.58 1210.4 li
1030.97 1237.01 li
911.683 1180.53 li
cp
.129412 .239216 .858824 rgb
f
1015.65 1235.45 mo
1030.97 1237.01 li
911.683 1180.53 li
922.855 1156.93 li
1025.8 1101.52 li
1004.33 992.661 li
1015.75 968.541 li
1002.67 967.204 li
991.925 989.52 li
1010.13 1098.19 li
907.574 1152.19 li
895.653 1179.63 li
1015.65 1235.45 li
cp
.0980392 .176471 .643137 rgb
f
1103.01 1049.71 mo
1115.88 1047.89 li
1042.33 1013.06 li
1044.25 1022.87 li
1103.01 1049.71 li
cp
f
866.922 1064.14 mo
864.974 1063.47 863.055 1062.58 861.182 1061.46 cv
853.606 1056.95 849.589 1048.66 847.46 1041.14 cv
853.496 1017.42 859.208 1017.1 859.514 1017.1 cv
859.523 1017.1 859.527 1017.1 859.527 1017.1 cv
858.61 1017.66 861.036 1029.58 863.995 1046.48 cv
864.947 1051.92 865.954 1057.88 866.922 1064.14 cv
.415686 .270588 .203922 rgb
f
863.995 1046.48 mo
861.036 1029.58 858.61 1017.66 859.527 1017.1 cv
859.527 1017.1 li
859.527 1017.1 860.579 1022.27 862.118 1030.04 cv
862.032 1031.49 861.939 1032.96 861.842 1034.4 cv
862.49 1038.02 863.225 1042.08 863.995 1046.48 cv
0 .513725 .6 rgb
f
868.768 1064.71 mo
868.151 1064.54 867.535 1064.35 866.922 1064.14 cv
865.954 1057.88 864.947 1051.92 863.995 1046.48 cv
863.225 1042.08 862.49 1038.02 861.842 1034.4 cv
861.939 1032.96 862.032 1031.49 862.118 1030.04 cv
863.961 1039.35 866.502 1052.38 868.768 1064.71 cv
.0196078 .298039 .380392 rgb
f
873.125 1493.84 mo
873.125 1493.84 869.776 1492.47 866.798 1499.47 cv
863.821 1506.48 872.231 1541.19 872.231 1541.19 cv
879.073 1541.4 li
879.073 1541.4 874.419 1515.66 875.996 1515.66 cv
877.572 1515.66 885.188 1541.86 889.042 1542.91 cv
892.895 1543.96 918.204 1545.62 922.145 1541.68 cv
926.085 1537.74 911.904 1529.67 911.904 1529.67 cv
911.904 1529.67 899.186 1531.36 897.521 1529.7 cv
895.858 1528.04 873.125 1493.84 873.125 1493.84 cv
cp
.0352941 .262745 .298039 rgb
f
926.941 968.486 mo
930.039 1005.28 li
930.039 1005.28 942.43 1048.95 932.48 1052.59 cv
922.531 1056.23 908.196 1006.96 908.196 1006.96 cv
908.196 959.868 li
926.941 968.486 li
1 .635294 .513726 rgb
f
928.855 991.222 mo
922.053 990.736 914.184 984.581 908.196 976.039 cv
908.196 959.868 li
926.941 968.486 li
928.855 991.222 li
1 .419608 .270588 rgb
f
926.941 925.92 mo
926.941 925.92 937.853 921.07 941.49 942.894 cv
945.127 964.718 942.359 985.116 931.582 986.733 cv
920.805 988.35 905.925 970.376 900.671 955.827 cv
895.417 941.277 918.313 923.618 926.941 925.92 cv
cp
1 .635294 .513726 rgb
f
1018.92 1140.65 mo
1018.39 1140.94 1017.86 1140.29 1018.24 1139.82 cv
1021.22 1136.24 1026.19 1129.6 1022.06 1129.6 cv
1017.87 1129.6 1013.64 1134.87 1008.81 1136.68 cv
1007.09 1137.32 919.042 1140.26 911.683 1125.26 cv
909.117 1120.03 901.53 1102.33 897.946 1083.82 cv
881.434 1084.31 872.64 1086.35 858.114 1094.23 cv
863.456 1121.87 871.185 1145.42 881.363 1155.6 cv
894.148 1168.38 968.005 1158.64 985.419 1156.14 cv
987.983 1155.77 990.559 1155.54 993.148 1155.44 cv
1000.73 1155.16 1016.61 1154.6 1019.96 1154.6 cv
1024.39 1154.6 1034.89 1132.1 1034.89 1132.1 cv
1018.92 1140.65 li
f
858.255 1094.95 mo
858.252 1094.94 858.249 1094.93 858.246 1094.91 cv
858.249 1094.92 858.252 1094.94 858.255 1094.95 cv
858.207 1094.71 mo
858.203 1094.69 858.2 1094.67 858.196 1094.66 cv
858.2 1094.67 858.203 1094.69 858.207 1094.71 cv
858.168 1094.51 mo
858.163 1094.48 858.157 1094.45 858.152 1094.43 cv
858.157 1094.45 858.163 1094.48 858.168 1094.51 cv
1 .207843 .109804 rgb
f
900.219 1093.67 mo
899.366 1090.46 898.591 1087.15 897.946 1083.82 cv
898.592 1087.15 899.368 1090.46 900.22 1093.67 cv
900.22 1093.67 900.219 1093.67 900.219 1093.67 cv
.0509804 .227451 .207843 rgb
f
859.625 1101.63 mo
859.153 1099.44 858.695 1097.21 858.255 1094.95 cv
858.252 1094.94 858.249 1094.92 858.246 1094.91 cv
858.233 1094.84 858.22 1094.78 858.207 1094.71 cv
858.203 1094.69 858.2 1094.67 858.196 1094.66 cv
858.187 1094.61 858.177 1094.56 858.168 1094.51 cv
858.163 1094.48 858.157 1094.45 858.152 1094.43 cv
858.139 1094.36 858.127 1094.3 858.114 1094.23 cv
858.114 1094.23 li
872.64 1086.35 881.434 1084.31 897.946 1083.82 cv
897.946 1083.82 li
898.591 1087.15 899.366 1090.46 900.219 1093.67 cv
889.278 1097.23 869.39 1101.63 859.625 1101.63 cv
1 .419608 .270588 rgb
f
864.247 1013.06 mo
864.247 1013.06 851.76 1011.5 851.76 1058.21 cv
851.76 1072.17 853.115 1085.18 855.391 1096.95 cv
862.946 1097.6 892.702 1098.25 903.025 1085.35 cv
903.025 1085.35 885.868 1007.94 864.247 1013.06 cv
cp
0 .6 .627451 rgb
f
916.314 911.944 mo
918.159 912.647 920.069 913.167 922.019 913.478 cv
926.214 914.145 933.218 916.62 937.487 925.461 cv
943.891 938.723 896.303 982.52 908.195 998.237 cv
920.088 1013.95 906.729 1033.71 889.276 1044.72 cv
871.824 1055.73 895.22 1052.49 874.098 1062.93 cv
852.977 1073.37 826.189 1034.61 842.472 1006.33 cv
858.755 978.046 873.17 923.65 893.197 915.396 cv
906.412 909.95 913.215 910.762 916.314 911.944 cv
cp
0 .235294 .556863 rgb
f
1053.31 1069.28 mo
1053.31 1069.28 1043.84 1073.53 1043.84 1077.53 cv
1043.84 1081.53 1054.31 1075.61 1052.39 1077.53 cv
1050.47 1079.45 1042.56 1081.82 1043.39 1084.6 cv
1044.96 1089.87 1053.06 1081.93 1054.95 1083.82 cv
1056.84 1085.71 1048.39 1087.62 1048.39 1089.88 cv
1048.39 1092.15 1055.36 1090.34 1057.71 1089.88 cv
1060.06 1089.42 1056.2 1073.28 1053.31 1069.28 cv
cp
.905882 .415686 .32549 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Accounting app vector illustration.eps)
%%CreationDate: 2/5/2020 3:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fok@;ehH7P*RX>k:s>]%LOs!,.4CkOJJ'(jKg:kJHLL9[5Jk/gI,hG<^_)$LcSl>(r;OECf]S6a.1)(=Ju#ID!4=h0RLR\C
%Y$<JYXsnFg%#,HZS+OeD+@Z;Fd5V2p>N<NsQq)d__JY>d'`.NY_,)6n"H*>KTt@Wc1#_C+h'H/]9iEmd7Ps?OpdA'"#N-)p\L/e_
%r_o#TnEpQEP:ZRb3KbS,1c*-3%H_ZAq5]m\SXP[?mrC>S&55J*#^Q42hDX9V2%,iT/]7&TojGBk#+(b]a+6teUp(_(,G1.m"^H2]
%0e=12K.iV<mgb,g(LPgSK``67,NdP;A)<k*'uN._$[gg.EV"\B`s+7@=cU<YP+Fd?k$;EZknn&&X;XSO:l?/d.@_W-`W^a-VdJHa
%@,O8t+*1i*$6IRS`LL&GmEmnFiLnXA"s(Y;^5t/3"atQ=49;?=*"Im&/br.h-](&4RKA'7#Y&?CP2Vkj:V\R+kB"7h:[qIq7M3l;
%K]E+:!e8)hJ#d[PTYM5a-?9gGZ^(R.QCf?h$YKYH#NUQ8AroLp9k](]N*uni5sS;_6mT/h0ko#oHtOI.^b<Ga!/CVPkm)VF@m7[t
%*f1us_1E'-f^_sW*B"'?R\L/*JZAlUW%m@`S4#%b/8gMUP`e-rp6J$s/cPP=SK:WRr(nRkp]^R'Gl590php`#'`/EN_/[D(:(WN<
%FB'N3DJ-?`]9/ZVde"@d%1@Z_J.PG*5Z75>]Y"*XhZHTsVBT=DL%Zf%*Zui7iGX3N$MQmS3].!uo*ddO(+4P,gE5QgO7!RJ)ktO'
%$lJ?&VUg"p5:d`EPLni?ncmlF?6AqY^k@2d[rBS6!8#&8^B`WI#WI,snHQFLcj,'t_0*Km'+BK$(\jL[3ON\f*8h]%BS="U=oKfD
%D]erpjnT>4#>/IY^m!C;&c)V,'m),+k/SSf5*6-?hgcMj#QKB>NR1^LnsuH;.E"INWkg&Gbq747;>O1gn-RBRp_t=AM@M`Wp`/p`
%K-M88?r/'V#5eKDiWj*N=uq2E6@K0Q_1@7^FW8Pd.2Xl?+Wb5]_H$ZY/L4:T2[!<UR.T$l1C+?q&+Y[1s7O^s(H`7*U%GG^A)*b,
%Ora/m_Sj/ZH-^]N\!6W;8";^07A#:2^fPubBI*0P'=u1Jj+fQIc#UtsXa1*U8>K%ok')I'/38O,?]JM@[>D\4B#Y<</XiP#c>8Pc
%W<%6]L]TR!!\]g8!r_O5gOf>o!';?Gkat/W!r,]@O,9;akRf,f,BT#cnC2fipM$.la8pohLLg.#$1LLXm9Jh#,o4uXp3j*-YdlsS
%8=W;%OVCi_T.*A^Z+5N\1`-0R-r:=(MEp]:iV;R38n<clqh&tOj:Sm%<RD/r0@`osok:Wo')4+0VJmbRo1tnB%Q,!,_r(qpCb\%K
%W;GWYpuIn+N8t8\/]6Xcn]d'*a:c=8p`pJ#8n$)Y+<NM3P;Kr=L;+2Q9<%gPE.%Nbe"e<gpG1(Q4VE";&WQT)!-&]l*9Yp1?I7'Q
%bJ7-OBMuN^Ilr2Wj8@XRmP+YWEX0Ef_!U=bI,N?2`kW[P!oc>40C0)BK"cc]mfR\.0Q5O3nYWuKDqH!11^/+`i(pt1kaXjR!.Vgi
%#lKBt8ar(hV86LcQN_lLH)mo@.\',.;Q4afPKEq</F?#Ue%W1R*CpFa+W_+Ml-gL'.>I:I#QihL-ffgg5DFkY5r#A>/q1n)"ec0s
%&(:[VfE4Mdi'HSO[s*6Q`U^OOJP[0f2kEjm+7oiDL,0fgK88B[*m>]39-9EBh#1Z;23h=e^jP(KL)$([\CnO:K8?%MnY9mi>n[7R
%m])OF&/auq1Lq<AGrYD*bH7__r7@=)J=@$&UDU9mis=QUg&YTE@;mMdG6jplL7%HA*f[3+6uHuXIW.NEgCA+i!KR[*NN3@(SIFRE
%hf3BX6N'LL\=j8^"<S"JTE?C.rLeub''*HA+]'s"g_Vt-++?hF7b_YCo7Ftp,7k-F619`SA?h]$VF/"UD'tD2+]&>np-fCIr2C.#
%P_Qp_RtMjh,lCckZE9aSVA$KXe!Yb`\4^Z$K^dJlAh4kX$ULBOFA-<,>*m.A'.A/o$G8;PFh7P+am.e8O^j4A)&Q'^TiJnsMms)L
%">41cc/_J&A9g/%njXKV)>(Y!K@=Tt@19ut-kn0p#=MNLC44)[om+1*-!K&fL8<.b3PUnHJ_Asu7+,"c_*K&r0ITT@_j3&uU8Al@
%*X.5N(ElM!`cR'MOS(l4#`54fc^-IOT$f/3a!49Ehp`%js4uN4=,,pSU8LiUi.sCIEebOTq+dX=.?lmsS_.Ro&?&El1s(33?k-U_
%*FUXWOSh,XEi3%-'[*%V\Pk&'MWMR"/Ecn&YoFB27ha's-mqH2-`H/=n'QW6M.J2mk6j[>BLI78GXjGAHk?:fk2fE,*L?#&M!lTr
%;h3pc9>U?k=,36D=fN_?Re-<5AP%94;Q&rerFQ1Pl_18<hB&Fd'H0g?G]/Y#*,U!A]_8)sI?reLb_@@6lSY9BUR^E[oH)stc7WJL
%p?,78DNWV?*u%=b:k[SibTUeZ?tW.Tmh3ktN^f*=r1jrh6j>4AWQirTbm3pXIUYAAJHJ<d.%ElX':-N`-rd<4Z8_X8kQGMtRaMjY
%-N]Wq*,31hJhHQ-m6(6%^m(I<N#hjf<#g2eN1g^#kJk<PbK$R1jFjS,-&(^#Y8^2UW`DO&i@(7g0=N42A"r#A<sFaLK7C=jF$-KC
%LSb(`becn&Gp"+9#dc846D6]i+dLH**ON^H6IAi/4Xqrr)S@ITGkX]1cB-h#9Q2EGYX`7BGH`=tD\[c^HMO.Q:E4l0aN6DjM"ug<
%>Be3]*m:.8._uN!aN:4LG0hVjf,Tk/g5FE4T?m)'YgY3H2/;iubNBsGZ&tnt.`Dt;:P;`P_r&Pr8!(PScf--CUp%Im$$.<?XM[D.
%AggSp%_/\Sm?-o-dOuAKI]]_a#W*OGROlU+m%DGolLiTLF9mqO78S15(l"R1fYOVnYFrOW;[M$KdW/5ls!Bu&$g`X;WZ+%ll&Dq(
%E]isjPNufR3Pgc$([MqhN(9&46_EZM)gIFJ\f\`r5#q>!??L`&-$hQi_h14uYo'&W5G18YDhrMDTU$tl\LmnOW"+<L`Kr9L*<`W.
%*c6Trbe^L&1_A5IdR/C;+fH_RnaAb1=diK=A7+sT&XI-SVf26j4^4Baa\F:t9>Gaj<Uo<NR[c)BRR:2p4c2eNXdT3'<k`%KYM0BG
%^S5tKF23FZL^.jn&9;O+A"u6`R)aX?38ojVS!:j"lSkWE3:tmT;G;D$kC"I`FcL+c,7sJ"Zi8<`>9@k"<1fs7[&m`crW\T2-NoI6
%Eu@C"?2.0!"G2r4q]^n@GaEP7<Ht];_Y8$o:pgG^(KD,pJjNAE3ucL(XOYLMOoXs//-Me%-#\hAOsaa$KlZt%3ULQV[PS:c%$6FT
%#e)Hbr!9+j:_&$hT_:eY:Ap%L5Tg54>RkBXD6j4f^`HIITuSQ>M$Me)KHWbK1eO95ml@\h-fc+9&_he:&&,iqClZkV-d"^XB\fl!
%'*X)W@nC$tG+osSIMPM\%XkLTS:#I4>>\.6%6VqL.,D)6(BoM[@kg,:^)$sh[60Vc-qH[Ipj5lPK^nDXV7e9*`16OqSG&]T406\@
%0?Sjb3a4M8I*K>Q8/h$VD:DY@Mh4:>Z$=d=^)$re/.R)OI+>nYh641%"bi=RRJ!2_8oor<C66GU#Hb8WYrqHlo8n-?SOVW6%];:X
%JbZ@\fOk`/eG4g?@QVK"$.Jn7%+-f`09hFQl(jrb+'A6u?G=)4.5N?b[YnH"SFd^$$Vl$8Ut8@fm3qU1Q2t&^mb695f*F@7-`qR?
%CB&+PG&l0JPd>P]C+$.WO4J'o'qt=Bf!c0L,mZ'sk`Y:0/HDB>dI,I3Ga_)-/3$A!dkm60N8Lc-,Ac9OLi+@&iKM(Fb8^?!]]5td
%r^BY+$NJN16d=YbaYH5BC";f=NpZ<OEmc3/j@&scS$Hm:;Zc,;8-^qA@/!).4,#'2Ca\Oj0$WWcRbpK`2KO%&PidK+V85uA3LrdK
%Q_Df7;3+q6q8&t5"9(a*GOXK<\=r^]AKgr/5^#0Xjj78-YOtZ*Im]m@TDc;k0,d'D:&J\cr"HR0mjY"+Vm!WNI#0uFN&c"Ygni%i
%RK]C#D5O2.5,cg$W<gpnlAeaM+=-hRC?mV&_14dt$Z6Mh:s4X9BYa?*3[<"%U9@%5<*(J)W,9S<dGWhj<5t$TE(k4!(?>b',I5LB
%n@!<qUN0<lni%T'pa(m[0ePl\34;>`)<b&aG?Y#0XoBI)qX5I8*]u8^5-=i+a858h]d0NKhp_GjC&Re5ri6h"*R":4mleN&@#mC,
%kXhAsHk/%7FPutXe!f`>c1eU-]<glm's/hB;<Te!I0nR;JthHn\!':DK-:I"**mgY-3A>4#PR<N+?2Jo^HZ4b1d(k'^][(`X?<aH
%Y5pqSc^6nPVGO*e%Y!?In'EYg-mrBC-m;N2b)e47j&:^!PT`,"aL5%?75JIFY1"goG"?>Qe'!(K2,,F9/("Ab&<eO3&rA$@?0$Nr
%IOAiei1^Y-Mp`"t;-hd;jj3X?j:4L7PG#]E`-daOG&KDcKKp4MP8qn.[?h?FPkZ5=cY8gVa[`]QBX@ED2^K[O)AUYE*i7KkAb;6D
%/#VIG5pmc,.FA=%0D!pJ#PPNXM'-pbjZ@#F<Za?cBdNI2qpuP#9KNirI,pN:3@/!,M3h0#jck!M-!j?'QW)mTX/1D^(*W2lAmtK4
%b:2t%^_,cZnZkgIAUdbGlg44'Qip;c%![dnKChSCReSq?Zo]R::+;rdC8THg'+jh#&">gEjP\AqRm7jH6U,AgKne&b'71o3I>?Y;
%>K>Xr.ZZagl<G>W<V,T*j*8?HmEgjQkp3.D0TN&pQk%b.mMKg^]R`I0-q@bd:F@iEXV7(F(t[7$9;g7*p*HU9Que.R6bGqhH$W',
%=0'J63-FLcQ%(J?_9nUU,J5G1L[_0=*b\oTKgLE\*K\\<f:c!$K@aFO^X!N4S.,nS6WD1J2Wnj<NW6p6i)`DBCBalr2DSY4A_Ese
%mE7q3R*TX%/tmcX4f!L1,2Bp!*Tfd6Ak8S3K3A9Cc$]Q/U?><9icd'*3&!RK#bq+/HZXbbLd287I[osG#8%7F:3hdCMJ8)7NtM3i
%GmkB*:3heNNHC4ucCaYEV`_tmNQ`i4EQVc28KQoa'.\,`dLNRd^<YMHn1KJpQSaQ)/R*I;.mFfomtIS*-h$1XfV;h$ZZ-E_hKPc9
%@k$o]LiPQhc@>*:/<OFupDG^MU'*C^pjLOJTpm%DFk+pPZ4$beCQT=Z\B1E<2Pgt*MFVa1&dg@#?1"6o)F>(ddm6@98,,ga%3<\Z
%6R_*lps0g=S^!pIXS7'"&!G8kBBV(-RGu'V7g[&UWAkeB^7p`1O5H/nf]CbYhj*tNc'Ze8!a=hJPCf^]:J_,^4dN8pKaC84Wnjeu
%l]`gR/fg>V.rG&J,3H8k9+pY66kXi\!o%HigW-\c$Uk=3I*3<5$"&%s(UqX@41=5RKFKJ&R##sY1@[l&M20RGlg<Cd`H%kYDZ@'*
%'[<2C\Pk>_UuiB9rVN?M"R#+cboHup?TX_RK%n0S%TYR+GRf;);`Jt.k>(!k.@`JRF/O!FMhcBQY8#8*&T\<B%P=3_V<Qie_,605
%_8gR+ljH4&BLI78Gj_WGZiD993??2Fs,mc.!r=-e%G]@'.rdTlo5q.R&Y:MX8)h7Co(njY1A6ojVLV;k]^Ru1U%%IuWY$l2;nPbD
%59`X4:mUuETk(,k\:)I>id8A"Af`,DF"Gcg#6jQEB@3'hDZ8A+2[>u97%H"ZmpM2[NTH5V9ReYMG22Q06[hO(Z\p%g!]&tf$/2"=
%V"/\$Hm-"0PP1(NVgMlZoHB0^q!ucg4lP;8NY:(qT@as&#lAo"):QX<"KG;@_+t*uLWD`0/a^s<-1i#@Idr%c!XRs;&JY"oQl_R/
%mS-]-&_%-dP8qo1Q8]VAqkAj)6$kSTkBFI4)3VHe'sn-IqsWkWY66>LM*FUNm]64J-dU_D4bK<^aa5l$!J7X@-[Z/;HhEN7d>)-%
%kIo.>25M\=:'<0k3B9MUVs$'#744_kdlYtlkO;>17:.[$s4'"Un)QBsS=ifdqcAOW_2s`-f#4D;!J(a5)]booaCrB_7g$mnTP1IT
%*gIKJ%;Nola_:23Ns;*t\`&o@3njV4/0oO.p[G<F=5/C%O^&nS<C=ikEBIW_G3HpXKn_rRN[P,2d#B7W%4C1\$j"K_(eAb$EjC\F
%D]=`lK7&!ui1W1p^INJfcZoB=?6#e0I).Ud^=HN-^Z<#`:++9VT'>bc8[S0[Sg3s^Nr3:Z0b0X>3&'A@F?$.;Mgt',/ZrofQN)gt
%^#jjc0XD8GB][(Zm"R*+8$"$3Eh;Qn\TZV?ibNg0?hK59hd6u)cT-+>B4Nt5gt.0C,fB-e:<E9Z=f/lo;u8N(_sVU>+7UKf?Z'f<
%YK5H1XHDl-Iic6pJ4g2fJ6H=N1uREN7'PFu*5&4Y.'M)_8q1#*:^GU)a#8j9hP'p`$N$u%0KG<LA,bN87[V(T.&2,'fh%5/@8Vb,
%p]`VS."gB_2Ta2jh8W<lOfp$@cCi1Zq<DFT5De(-`=2Y?at0sPboqIj"&"5M$pJ+s-uW!C5ahXmWK3SX%1YSfZ('d!'RmDC8Gi(U
%:T9CtUVh"q92a7g_YI2W4`.J%4^0Ie;\+&!$'HH7`8'bHUpkRd&qA.:0=<It8KG1TT/#C<YG[0W3K`1op;c9Z^D@ONeYsG]XRWL8
%!?Ff+kRO:X0f+!OWT"S=5VSWFdfY$RG#KX@:#cpV%KuYVK!o?]Ee2P>GIZeDbG'!6*<JXM]CQt4;s>C"5coeWId7R-iW&@ioD^(c
%TAT[QE%f=P9m@jA$g(rE6N9()J&+]jIK]4l"1@h27->2=#sW'ljEO9/$QupU#!_8)SD`9F%^._)LGS.<H[q=J$j=J!OI-",p38^X
%9A#4-I,\X[8bg)KO4;trpo=P3]n'sK!_-k'R`B'MVY:PTCr"-mE:cCsq#0,I@$e(c;H!#Ys7Q,9C&[e?r;HZorEk'SO+7,3J,dRH
%s7uEhqlg%uGUVPV$4O(JR'r'"*N'1',6Tde*V=fM*uj-`Q=K][2rG;oipJ2TV#86A5O.'I>Vb4-kF.7:;7VDPX5S;I,X)JU$$uc'
%5CCE0%L0g:n--_B?4:.[@otGCLKAkPG;o`>pcroZJB$B#Gr>Db2lK<e0TTT-rWom6\07M:FeE"s?NUdY'[bA0LUp!-?q97b8-iGf
%hnq:M!@0^k!\LR%l5.NZ`8%"qTZrj.I(Z%S%e4!NGFQbj0N&jd?T,GrKhQaj(\J+h*W41EO)]rP?rR)he>+LqWaQGfb0\tt(bdn$
%F+@JL[VL<mc;aR;jrf3_'(9PZD091g!&)!IIoeFuKLO."0XNc"I>52`3+:S!EJBHjp%SM@]Wj>HZKM`Js*=7<lAu\S?GGm^Foa.%
%Bp7I-H(H._9+#Q$#\#1RA:"jfi$c/u,.=)m`V3mQqO'\?ECOd:WsrpQYpNo%&8>aLN:,O-Is7_#q2VTn+REMB3M`uC@l\j_!:'$^
%MJ.[^Tna"m-r;baP5=X72pLaEl2KN;q-$^bmJhG3npLY0S>F<pf2:QL^Y>l12$f`+5VgcWUA7P8h\CP>Uq%(.6[N`.h[@PqU\@QS
%,CjVYDX5SkT`^':''@4s>A;epEkqG-a+;S?e4kgt2pp*J3T+(?Ld"mMaMIS'3T$7TLCV=^i74U,7_le"r%Qn3@,2<e+(Ko?HbdDm
%K[,68g_kN99TgO?S-5:qjI]5u4@OI5W^0<k'Kb1QCM5B.;i2cT?3@4Q)[UQ\m1qib^BqkaEL/%8c-Xob6f:NiVnWm\`-c.-#JrYu
%'?%bTd!hN4-QLG_F(7ZON,1,kZ"-CK9&W"73&@#pmI1)Hn,N7]5QCE6s8J(os.@(+oC)_SfDhNF(]Nm<rs/>q5QC&as6G0`^p9a$
%$/#JUS241Y[psLMlH.'D;CLn_8/*3([0Aq)k_@G7Tpp27QjP8$DgS:W^_[?O5D^hs;isd0>_g=eSs\oW>UP>K(nS]fIOf^1%Etf@
%ik=33R0'*;cAn.1fdY/piGa[E/$@f8`V-1);nV6+06Lud=\<A5W(G8o>1:8iNaTr#KX0-=&]6GH1"M:1FE^.!36cuIB@G,0,YM&q
%7qdG9cf]LQTu3<J4s_$T99*Z7E\$o_Bg<57jIg,\er?L4JH-\F5;U7rGeO:D(YJoX/a2\NI%HF7CDm`Ih$b0E^^plRZ5&a0Uh!l=
%h6.<G8c,_,<n`>2^rnoL!H6&k!1dbKe+hucc8M$U_IQ#:B*af2^(ZqNnJA+Fp.,\^O;,h8:s=,)G`b,n@GYh#WSiuV$m-%L3^$b>
%b#2lTHR&i,J0QC++F(hp7P^_Sl4)0E-.q0C@X5N31^G4@1N&1)Kb)[Fg_:%]p.+9+GhPkG_h=b%\jr\n>_RgW,cCdi!NJC@"B3OK
%Z<=@4>G8Yg"Y#^&9-IImG_W0[U)-uE=!ni0O<%<_Gp)p"hI^<uiZoj@*>f\$)6@p(]/BQ+E.A6jOV:(!!AR[Y)N]L/'9:QB9n^hm
%OVnNdh+m3@_GRV+Ro.[_n8CRq!)LF:`*TYf6]W!HRSP.-U&[J1=#1g'Whr+1-`FF"1<'-C;Bn2'.S;n4A>,V62[_I(/:(3U7Qb!W
%kVPS&dWt$5"IKBg+f?SP#mfE@bfktnKq[B`nhoA0fFh2Y69YNi//3q*'FnOj+B&o%#!A8k"))#@::JRrl`A\O$j9QKk/!D?h$PXr
%YKn9tWqD^6Q$1f^!XN$JDP9a*SL,ZXns)k&Fsmp?1nf&pf%OheK25$]#_\`RS6Pus+11"G!aFE0,>b<-#lu>GW<Uq:-?8g<P906q
%PN^GYhMr-.8;>rTLhAX'[i:JV"d@ErE),ZBWfjag0qPd=kg(IE"ut:6md_r_I(Qa.W#=8""Ymr((;0E"UTC=:]+d7/`ZJfgrrU2i
%!;%bAi0iR2L,XsLmf4m-(dLcHo1.',3!7TAVK94sr_>.G\@0U*bVid>;.^@MQs/qkXbE#gVp0rnY!m`<3Z%?MLNeU9A3^`2U%tQe
%^t$]t%8$I(``%,q9paL8[%Kt9UQPd2*K-HK-FH-)0Ddj2,'mk'@"iu77.nAp]qbR/4S$nq\SUMs-g7jmeJYs`k:&'Oh+j$_m0eT!
%JF@BTGI)D%!K>VHi:j39-jbj^LPJ_*YZGL."so*5J2c]*]Y$oB;pD-$2@9@?/qXU_4Xg]u-50Po%/-R_>r.+cRc\DnV_5%/2\Kh>
%o@^062/%-;7g.Uf_0;8$HkAl3"^VC;-C3L<@!@rLH:2[G>8l*>c,oG#c"mQ^T6Z5tbfj5\==&:SCb5,'T.R@q_4q$Nl]uKUih""0
%(]'t"ka*nH;(6_a(=Q*.VFC12OK$P@fUD#`2J(aD>7I[AFIe&58XofiKWrC;,O"'M;?tBQCJ'l(SQV=,>ArrF/I9%L>sb$:r"=Oh
%1JA:V_D)&sO_&![8tKJ>'Z>Z2g+a$siQ\:1ruOarQb7Jn'?I=8]&T<trO!aV<d&9_%\grl8teG6@-i]>Fo\52/T;+(Go2j?q0frG
%6+\sB/bQ;.-1f'l0%A+;OXt.&8Hm3!'&>!3qQr^)eo#!)CsVIZSjI/t^'T)EE2B$T7lbo_>C:?*Hs5D[";g#Bl.lfQe)$J[&_$rs
%(Xq6l<e^Jd9?;6c$M:q9[fJ,b'(O9'VQesg=@H,>8s^nm50OlMWBnZBq_6P)aYB/!:($buLnG_NcQDsM?M0<c^l5'"+]!>MG6N5"
%=_Os3JV4'[e'iDfBJL!8'c7Z_K?m?EA>`ttW8sO2P`0Z&)Pa.frJ'I!E%<]ZKCOfI/K1?RYiK19c-:Pmc23O2I'p4R*g5rTPVSh7
%Y=dFWac5i@'VZ4D4s$aM;iGe1biPgTJ<1NT3sQGcS*5Bq$a\7>pK*:>$*FGEH;9o[>FG"=#tH:P+5#*ec2=))]aECk>bBXs%m8j&
%F0c:45kFqaQs1;a5E01#g/c#X>:='p;l]_)K<c,?\s&DLJJ*b@iIl<46%qobA/%3r@###tM1Fhu4E;&JkR_Z3aq0McHbVLs0FoKY
%DopM]!"3>/h^1QXmI^2*W]CCnoK@;r'\[5K=$&)t\dbU]d*lhcd/P8?Ol$A`8BN$_ie8iW%aM;J#&m-<:kV_>K)j.fl.Q=m2)YJ8
%n1i4I=@H!sTU.f-!1*=hh)ssu3+n<+UAk@h.FY1B)jMLu@qV@OSFis'/JaG[be:3&6s+)WK^R]o6"c`%@Xq*PX&YgcgCAkj/M[G0
%Jao.EBoTu;Hh]@W^KqaZ-Tf7tRn[_Y(5*kkQp.!ir[mrN[QOdrE1QFsC[.-3lM0eL"(N20)AhO;!?J7lWW7n\;R.(FDJYYi_K*m:
%:gicN@tj5@\3(g4JY]4"9cAeB?oJNZ&(-l?`RftP\+h'gJmo<C"qT:W9tHgI70!sqqLu_dmhlXo_[Oq9Yc[F_G:`E^b\SMrdM0%P
%!#?%I*$-K)(7gG95:?.#eiAln#f^#jUm+IVjsfN^prB7N=9;'8_l_n%i+T9_#hoc=/;c\hf/!-/\l%&VN$U6$QX@1++&43H:J(_(
%Bl:o)>\pU-Ih>YN@/<8mku8fZjC?A,q`H[BW7Ad54`Q0^a[h7,SNg,*WLb@[4N24p=F!N!91\=6N(eI)"e0$c=i#qD5*;uoc["9`
%^CsTY9TrD481KcDgN"4u,a"UU.$au#F1LKr+7.utUk/2edSUe'U?e5;R+[+P+[+q?A=Pbt>,"*IRW(ogrsK%Kd_-/HY]ZF&<`UIm
%Mt"rU,3QlkS*=B:jNeBV9,E*0G>U.[g<OVHVC6n+06rO77k2@9a2>u+U+PK6G-`Vli_K1uE*^NhoT@(75$mnf6n2!0C4_jrK=S(]
%)DY\aTAJsI1N/\4h0kTF^,W6OF8M1rY[rk'TLhO%>%S7Ei_kEG<@)YQ,FW=%(@Pk*:=ESS=/C*O&-apN6R;Ggk;$u%.GocqSfH2o
%((;oV[)E.D=YA_r]1ot9VH\Qtds%->CKik.LASfVX2h,K/+'uHa!ue$4=AEE\`ZA6FcL;V]4%!]kBhW-L?DY+[9]85qTlXe'U>?Z
%,5p#Q9+QXcR#E8n`_72L]I1uX9Xd>UT[R`RAai$=DoVNFYufGP*20jJACI6E#bAKCHS^1!r+<B[ZX*Tr3Bd#BUZY4$f4[f_g0\]R
%[-9W<->(j(9h@R.G.[MTINr^_IUsq#`nW1/aH1&<&b;dJ92UEOPCp,'c'"?hnJr6M8OQ3=00g2,hE30KPHJV9McHOTi:n`j#(nP:
%mnGRn,%_c_YXOc39SpF`S-tdAi2tVeMi_Wh%L*fO`lnoSOeRI#Ys?3T`K3V,ch4bMHe8kP\22+EJ3G#JdkA0$S).Yne'UDOmD^LX
%5Z0^Pe\bg@%,;&i-BM6teAr8AL]VnOX15EII5U'%c]'rem=Bh%!q=2;h[0kqd'u0KU6#=_Ms&C)Ds+U_Z2gN*B4$AD4SPEkOPi40
%/KW6l4dh3o9PioNFrp%a?,#g'\`bb]YEnb*d/^+EC!hXtAJ[%AX9#"#++MP=9kE$@]/'S:i<qaNhR^g0k094V]?9SF*&jFb!hJYX
%o0T;p:UZ!`/m1F)<g,+r(Q(I5pjB7M&+q!LGHVgh"d]ANPtC;bB\?RFE\`@ET\\(bIP]a==UNm%/[i/QH7OpeC`/nf[P?N2b'-q0
%,oC6=m>Fq^0DJBOq+2n57aPnZV<IE,P+-L?V6$;q8f1gc'L3>>`Fe7;L;HjVP!9"3nnq?=-m%U!M.hgr-!M[5[`V=`BM)Ak+8n8j
%$a6t2:4%2J8L:ELNA-JN)lK"o0[P'cG2293%)FW@2c5W)(Hi?iZ=$0KT59iJ?KTNRY;nRRbK`fO/Vo<g5T&$Jo6jk=em;8)>e48L
%\Zp1QQV7(mpUhhY1Cj3p'o:Zu)\6nQfL)[cd`3&m!,+V^Lfu,i1(XH;eN$Se??\VS9<\%j$.f@<ls,">l\*0aW:*X#P@tOf5&$0+
%"2*o@4OuY2IBg#P.nW3g@kaf"(+<]n>HIHnRU[@#!M/?VG7>:&Snn)?al[@fj!&!qSBsOY<!XaR<I0b:Bbg/C2KX'Hd%&kGfr#!D
%VHH!/l,aeFOZP8dZZ*?7H8j,(n.UMm"Z:.E1f](/N1#h<C20$N?/Ys[$;J6B@q^!3bP+`@<EQ!Ck5am;.ql#\/+5&`AjWT=9L!6;
%OdUkl0%[OFLHH_F!D`tT[JV&ah73eVJ<A(H8055AZ^Reup/X*V(jU63VYJu8/KP:Eq7FbG4Y]NljAc^'VhH7q9Y"DIjNb)\$\+M@
%Amh/8n?$HBOJ5?b-QK>1j[9Q4/kE#rERSn2l\0'Ulb$IM]ghBlemg^e8RqR<,ltd"JYZd12pmIe@!6Vf@W<t0d)[:A5l#3bB*rCp
%2#ej$1XN4JY2J+Qs7cX_)I?&C9dS++\Y.iBBmA>BdjtV^LDh)J_^h,YXqZQ#>W*k#JI(@S,So3s0:n!j+L!qM^/',(+>ogcUsKuM
%WB`9+(1^5L?AnBV/^a').(KIB]acRmF3ZVpA5gcMrh1aQb7ep$jJDncHRCLf15K6gR*ans\j1<hV.M`>nVuRe4;`s<!,*(!+Zoo'
%[;;?\KP-R?,;Gdmj\NUi"mZ#k'*+#>5i_/5Dr\&-S`[[=kRt*PIu9Dt<]gq(!s2O>F=lTC.CgW[Wr._\[.6"dcB6bBC'\'Ka&g6E
%"_\ZfN%$/\YU(K3j$MUno^Z/aXodp:CmG`2+ucg$NA$!P#DUGnY*h&m72P7t2'RjV855---/U=)]-X$#-o='<Ta3ni/fKeSdtTu)
%M`JA<0_/]t1@9I?Ja[.p&AftUrgPSE$X/16)eU7ko/Ejd#fFbUZI'bYJ\tW^.dT[2F]4mm&f<M.B_$n*)mI;"%S/^Jfp1MYfB-8f
%7+>Mog9NY]Kt2&AS4S):M5R!TUSMj*TOHUu3&SK$gEaTS('Xe63>F4KT@!/-)K#_R&!^DJ4$"n^;1b;`)]q6D1a0Hk%V?aT^+WF!
%GkXeWUtS5B0kjrARp9s'[8gIDq->J:#TKZ4R%n(mL1^RBia_:;=\G[X]OrI8?"4aj5aVnl1HDQM%jW"Z?8n%`Vc"a<@]Zd!)G']4
%cc'Gjp'UZC@c+<tUHDa*(ss_4"B*%"5<0ORKl_<KYrSuF?&j2D!F#p9YFgYlVLQQC?"EmG\CB4+[,?mi4hA\Yd?87C"OK]7V59hO
%ie0Sp/m6A/hJV(^nh&dWp;_mgE.+i*?q^DT(i8hXfK7.%D%]"e-M>#f$4=/mg=HZo!nKg"+J'H1//JAB.rY>#3,g`RH>'od]?#4J
%,*&"[<O,G4"JjqC>=Qe4Vb+q&?JpS=@.ienQD#MD^*ob>SuBUJ`jd/ZbBZo;:b_B@L'R;%5gn3PLa]/%8Ng;G[2fcjo(TsaLt]0V
%[jUXF.bhYb>+QE_N$rDn3TAYk9`Nh4#?j3UnQ:*?@4Lj,/2RZA6&E:F)b4Z7/!t[/[d%qeam@Pf#`h>o&NI7l\K4,SDP`T/W[@d(
%pZ"n$&MUgU,d/hi2n=mD2nuV^H.qHlNb4in]2J&jQ]\X13T56#_6HQBT<o274Pt&&jm1S+L='.!NN+nppt,DdaW#e6R?uFE'@SRP
%/.r0T88h24ThW(N%"DCA7:8s%#5`&.(*0>Hkp2i]YA>"6q"l$u/!u-Ymr]bk*,=Spf94C+mgY4MN:A0r[:+M(pd'_(B-%*]?D"t5
%FkXfrSadpF^&fc"TR"@>)_Eu&Smn6Yo\/Aj,h5#+8f-m@l>Oeq21?&i6n!9I.H(Hd.6&*S>++Z+q(sQkpXS=/>Ca0Edob<Bi\^AO
%P)u/GZJ-$`)D`BUdG-dB,s?h.GQ7n.B;nhW>fQg%Z,Q1(XfG/?A-4+E<[?-R<G;thQGTn`#>2=]ZdEh>,+!5CL!=?9FLatHbU*B'
%FA1S+1?5s(-KZj:&[!;Ind8OBMS72G@\PosNVT:0pS>g:3&GD+GN@2=Wm/0eJDCYmCU46A&eh^<4t'6Y1];YK&\3<;U]!MlOGM]R
%UeM0l>6sc:*LMV:<rCa%+"6W<9C01pl8F96T'Lt_I#)BjBs#8L(]f'(Vh`kdR<#@.>N-1M:mDg#Hl$GK[X7S8l*iE%6(G@3eQL=m
%83UXtFipHJU;Um1^b>iD2671kY03;FX-/#)1$i$0rjb&*35W"4^#=9tO>!:k)"h)`*#jad,M8o]$cl&]$J^rFlWcM4F=FJ@ipUA2
%dK=@GrLuq9Dntn3,t"6f^kieDm,BlVbg9.$S\7+*Aiaa*gqu1<U1`0!_W8R/?TM*7f\Hd!1O9>F,IRD:F;i/"M%ekCYlUN6ckUCt
%L#PBB]jBlM($*2nEJGW0\MOm8-!M6,92Qj\aR-7IPDMitMW+k8Wbb^HM-o(pFmgBfjN1AbNE5%e<C$1mRZ(8"6mQE\!uHO#I/5UH
%F0T['"*8f&4=@b%R:<X&:\elkgreiqkdA3n\?Br8dR>HeGfk$#K.IM.'8TjQ&1sM#qjE$7fb]T@SS@"-Ok+)BJia6BlOu+>]uP3;
%R@t(Dr&i_R4\XsT\^7f^bBVU^[IqNdT[<CsI<jkaI+iV+V0O]J8Qj:<9r)Oq4sjJcUK/]s(WAhT'eu[6b!nfran)-#.T00kkL.Ib
%i&`9C0KYZFfN\>DRSi9eGa-F\P/2*I&GEf7`dl9t>87:p"WYN[(<=AM>.ADl:2AZjN"Y=D.9n2l;%pEY9cHK8AE$31hnAHh&:<u9
%OD#C-5?TLKk7`ng<4i@m8X>Z;^d*L+p9=`6Ujujf<t?L2L[_U/#Stipjt-7L/m5p/H4m<anmsK')i*gd'bAYM1JmqUd9rr5"dMcr
%%fMP>]3+qAe?A8&I`qB$,q@BKP(mr;Pr[/:WJQY]Tdk^"M?$lmN*N5c:RQ8!ga2`7Su\_5Qc8g`>U8"Lbt%HX$k,GF'o:t7nPm:X
%ok0.AAQVeu<8@VcoA"kReX7j&FYM4>Qq?K7=oCONE-#kMn<6UBCUIXpcFnrCKfrfJH!eC8]Eh*_oifTU+TMt[JhQ`WYCo3HKI?=6
%RPPc#amefa;P2.^X3I/Cl2u@pQ5Cm[W<_=$;Ms<CppTh,pk?LoYc1DG_7r=rgu5WA7g#HDH'i,k!`3%gl=AA)P!3sP3br=hcVUNI
%8q+<RqZB%g?j8^\e^63(.?C=_>2'6n.eR1W>u&hcRT180D47cCoIkg5N>#]^[t!I?&E%eY13bVTPW.Zq6U5<S1C5a:aZT_<8=]5L
%$,>!3qp9m^2<1bIcR$FI&(p-:eRB$hn&T,AO[ar^f.<[b\9fI'irr',;Hfp-M@334C=b&tr)H=PRdt0rT/2i*@Hg>S,('!YLGu/B
%ZSUtV!Mq0:)l1Kbd$qt)8ee/kMs7dZ2a!O5ml;GJ?Ie>_k3Ug.C1-s5VDoo*@)l/Tcp]FGH`\4'l<Zb.EXiagl"[Dr?U*[o7jA_F
%?/9=P/i^;T[>_T@=o>\+99!dXM9T?tR`$Sa\@_p]9hP*[-sDg.^_L%HJa'Y[5SgHi^`>(7/rVWj9]$]9?-YF!&h2]h"[X@DO@qoa
%*b9's!Hm\O;Q7.7H6Q;S?#c9qfpm]\WC:7W.7rK.hIF]K`hIX:\ce@$fD)b=Fj@,QiA16NPWjHbb1[%XZTH1&b.0@hgr7>3\RJad
%W<$m0[hZH$l-+1O0:jn_2"+mjr]r#10d7pK#&qQiS1qHCO2+fOR599O<$1&@>V+L(S1Zf?o#3cm,JmW:OV_48XshtfA)jsj]YI,.
%iCTZ`7#/&%Z7?g8ZQ.bU!$&ZrI[=FoGIgJYo_b:(c<k\:5nbGo=!'-Nr@-)=:TcsY;_t.3%\F2_kc7P$[CKp?/n#r-neJh<5@6fi
%1QNL?^fi**_[o(HcfZB:Xf$!5Q+Y?Mr'jSXaVIKbY.ka,>>SJ^Y[mRgJ@co];J(7MGlF:-ee?M'Q(?=nCgnOVNeJF?DAjU.XJDm9
%4SNHElpJOT?)0<&O=$@lboF)jGV\?!l<r0gcYG4cC%[6hla>ZnAS+M_H1MBQ+XT]+2b@&$7;Z1*UZf6UFB]GR%Y1j#c<@pCAe76a
%MN(s,;LV7Km^(%/,+4!MFc$/N]uXoMIFlRF?$Qmth^p'e?k(eZ17_LPp?.YU4R3k<;n>*+J2Md"+k,H>el&Ad7l8#gM\ksYmHH.)
%0Gi2/L&6c/&i5G#T["Q<I=SjX>QBQC!\!F+H]%:@,,OS81369lc3)\kSdS6FCO=?WR6bqCeZ`[Yg:gc`K)e$Q!]TTH,]=iHL.X.o
%BRBgh,qWbW(ec]5qUrk9Rarh"7EqG3_5qZ-5BBS,P2upABIO"%97\PHS`sHI[=Yk&p=`0e>ha]@;,X`6W0O1oVHi!)CO.\YRG]!0
%8Cm#o"4KM!8\_Sa\7MJ%Gp`"QZDI#d.Ys>YS*H.?Z=*P:pr:jS.<!9B`f%>56r:@*c:l?WpIe@^gf_)?Z1n$1$+HK6na]dpKVRFZ
%Nnh/r8,aK%6sgq?A1J[:K?1D)!caP/:XVfY\*T[4MV"AW-DJi<WSjT)_D9GiB+N2o1oZ.DhAT32ocBKVj>il9k+u[2`dD@/h!3tM
%)T+Lb5`$H`>)rIb:KHdP\V?:hIMO![18(rWGiDC(99\("':_!>C\L!P5''DBPOI,#XV_<]`]=Y>>^,`mh.ja<s"1t?q'Y'_Qf/Im
%6`c\,;UgXYY+QZWYLH@NgS"oI,1\Q\2Ldng8lgnU%b:_j>7<]d/ruc2&*\_.o:<%RG2LSlYW1ueF1Zf1RN)gWK\<a&HJWIr+ij*E
%\h/U*Y]Y=Y'P18s>IrSC>[\h/9hG'cDsBcD(e?`i_?Y)1KM%(HZ`u&NerPQ]]YrSD&hK`m)+)4M$&r%ZWaQ2D^12cFr&H#L)A`>_
%jU7\oTE&0jkN64ZpOI$u(>`<a?(E&VkL<bCI)Fm+'qUUHr.CSTVA+9>SnNp$$1IB>&/lSIj?u@1K]b0)fsb_si^Eq_5a$ks@7+<e
%6h5BW\;%kSkC12KmXVZBA61`>N.nGM!Z`mg142+CZ7uBdL_"HD#'s#<QQ78Qc"o.e0@"R;9Y.cVJsO"W3SdS_0cuW"c>pB^#9G1C
%0]Kr#+X\K;=QQLnlYB/UcrGBYGD?Si-8L*@i@K*$/_01.(/AHD\&$GCL%55BI-NOrrk'jsD%Y!0kLc`Z?ElUX+t?_]Wm^ZA3:2_O
%2A]H98P.Bp*ab18liE9j5.RUQ;!A2Dq*"$OGNNGO(Su$eJ\X/iSmGGnQ-%"5:-6t>/-L$6"IlV5?!<*R=4&g;#Q"6S1&q[@Oo\!R
%g7@TWMk[Ja,oI)QkGtG#5`1+br0(_^L^$</*3=0iq#bmf1:pZiKBJPkPqZIFL/VfQDPd$c4%U_"=[3W$q%q?oP*!%NJ'FUsgic6*
%r#,%<=$I8PNOj'5"(ZrC83W:d2BGK#Bg0>3[!k&P)Ugf:KQBOs3#d&g3(]gR%cV#58IdFCn>(S_j>kVN<]ka,gLpZHKX@+VUL%la
%3cI^<'<V@k'SQQC%4'od]&HPc.g"Fk*@eXg&q96s85UO@b6aK('rk`'U=qG(UF9]pqI3@pF%WnNK1(%)@k`C($`:A_W$._X\Ok8+
%#/<.^!opn^\l%u:jtc!pE>d>em0AWid[`nu1Ql$umbh=Rs$8?],>:&>dX%IkR8WjV>Tn3iOnp=pP"#s)TER$$F-']2SB;0pQ)_D@
%75YDH#dJDBp.A'5OT)RO0$7/,+RGG\\1Oa)"lWTgk6C8+DMR.fL;EmpEtHp^I[,Z8:7EO6Yg&GCVA=.?Zql?uJ5.(:.L7sJe7l>E
%lmuBpV:sZ#Ghed.eI(8K%Q?)H<3or^=1lpRXd6M?CQ6%p,8$n$\1j>O55bo?mUnmNMt-E%:T`4=RaGlP-Cn1Q0'V:4]YBW3rET=4
%T[A&ubZ,5W?d9M`Z]tq_%k-qdE!8FITmS=UjFnWmLCh7n\9WP4J1i5_s"jQ+/XG>@./u*b%7Mr.c^FjhHK[iVcS#5R)7oB6_&'Ef
%2L_5+e_g5]RjA8g_F/.qj@n:D%kE=]2=cLLV&+Nc?c'jiBp*>Di(q(frf"2B@)3Wa`o#%;$0E9-]S8Wkg"6#2)1KE<8(aI)$p+mt
%;kPHGqA/R]QN4R<s#Kd/n.:rsZ^mCdQTNO;P"orW_Wjk+*;*k.SMfK6.B<^Cg\dT/S4+Lpe^mK?k'c4!`q.[&k5rI*fTLRJd$#o)
%X.IPgA&S=lK/J,W1euAa`(Ed=*4O25"?[1o_[eRD_X"oqK\"P'E)CZMMuh_]lQEBJD>k`,**b,t;GH6hE.(."JTVPa7("q_;f"!H
%*9;f#Fk+,1H(Q^[=?^m-cq$'@(WKG*V>'LC1-5a00=FQ%'[%EZ4)7%Q'R3?3,!C;4rLQ\S,\l"K%E]W+=i,c^E<Q#@$td'A>d5%M
%Pe4/UZ4O9PWtc'2,mi;2Q/#rdHT(3hr95,bb$&#>@tO<r>:Cb^\dWoSoZ,nb.IMj>KYd"B5F:Ar?sMg-bnh?a@b6M:<22mj:s4%;
%p0"\KYO@,6I']XhiN#IN4_`nWg(T]07JRB5=lEib),:n%<=.Tdd)kED41(iiSpik[0b.;RfpO5QT=gRk[2N*VX>lq=H"$]OeQX__
%<q#=6[CT]'9rlOoqLJ&jBs%*'`5/&1_u[2HT64>\jk[Q")@9Vn@2DBLJ;CP`r!\)>F(RJorY`4g:ppLB)2-p"#8D3\;6)K:8$mSh
%k#-QgZ$!F.+IL-f=:K/7d[DBJ][hHr4_cS%-EX\AUJ@rY8sdu[DdI=gNi265f%G%F[&sEIe%3Tm.kSaF$*@:TSS>dDl[[Q)4>1CN
%G5[=WLp\+;-rKYP_`;'i)nFP6BVSl4<Qj*`nM[>*a%J;W`D(0A9h[712ANK/[-:)/>FRK*BA-Vh4eXGEVGGoTD5u3R*ODQMJfEFt
%b6se.>;lbDg8du3e2E4bTD$ueGHJQH^$2nJZotI<BZK&*UA!j>3iIJ;U7S`q/\bTG\S3n.]t<Ns[bm!EZpPbpZm2?XTH-PjhmIRN
%RFf/sDr7smh,D[7MtfuDT;JVL@nL[hR>6"<3a;HtX`L_$=.Qs\7s/.>3X08>rjPEi(V2GkFj\:k8Ja>EkILe;s/o!*)bjW+V<lYG
%T8Sr:nl2RPC;$WCf:]8n\ng`2V7Ur(L7XQm:=jAugUbZIT^G=.*Z]M8)Aqe<camgR"BW]fSEW)-f/8sP^!V$Ye6C#>XkqG6'_Ide
%5,@ol]f(:PN3iBPf4\N`BY6Ll1RFr,^<guboTe0.9OE:\o''@s0o,a7D_^LK_c**IYN(S5(c9;02c'5YT[?ORl(O\+-3n1pg-u%c
%A5<`]CbPVCR6+T$47d6ka(OA/pA8"*4Op%"1RRF.i(Z8XWjZ.3=i8P)c>K28r7R;"VLF7ioT*Y`C3b%^H=^`%;_IMqBVR@cF^d&]
%>uhBBRH_hD?/cMbJ4nT)kEj2u+m&,N%Jeu5cql=7/;@c`R5!F^\3%S920q4RhT16+Xo2E^9`*YN;;9!:7an;[ATSj2;kl"EM]*g_
%m*V1CPAne(Qk.u:NRbYg`7Qj!A&a;)I)h&T8Y9ufp`GKZbcT>RF'*<S7eYDAEY,B8POIYeBo64cT1l4>m5#Jmc(:p6'Yc?XP3/b.
%AN$WYqLO!_Bj<*q:#%.:!O\UM*n-RKrU?@<&.V+PZ*t9WcK:jFjsn`?k16>B1d=.^?$!2+XdH)P4(.2KAY$f),.\Okg/bZc/![X+
%ie;MYo'[II;Kn.IQFg&kf()FKb8)kiJnQ_(<6/u8ADV0(Vt!W&%6S:[XVV/uaBJ))&_8HWNEbjcil0WFn0dOXI"&GCFSjHtYmd4@
%Se0_d716\e/bA8qgFhk2b'%"&@r/Z82;$cc+fC=K21bgfh;$SZm%.JPdXLVW+732h8(q`a<c>a&Y']Ql=)ZYRmYl$(\k-\uE#@Rm
%7kipn3g,iu[uN5oV]@_q-a2S'l*fjo3?(?+D"-A+g/<u3B>E/nS;H2=U2cK;bdYleb5%G=04,Nc<,"\0F=$CdbL(!F>bRbGmn1n5
%0<SK3o=?!G9.qn?NdfT,rMAO4S!3#Qn$RW*^@:/CGDWBdh)Bu1Xh/Z9ot)RO0kMi&iOUe!?!:K8XD&P]7GM1fY3DSalX4EFRhY-H
%*lC(-oQXglRjUsD.8Mu&EppQF3qJpad0t?X.sdE2P%d\(!MAK(S+aU'HgALIanm&A96f>DK9/lQ>D%9kI4d-ho>T"-7UPE:VXrVH
%cT!"dJ&_=emhtH#NNAX7HlLT2oBEWuJ*j7=r*@@Ym=2TLK)r#1FV+mfYD#4oj_>!'NFk9!U!-Ko4a_/V>+^1n@+`of9AK(kjh'GF
%gbT<2(tom=HdLDECU^#/6=Cc^Vc1=V6TfZ4,0PhPYeHFmKKV`6*_mSkVW"TBn3$V@S:R(M3k%V\jS`((P1+,rqRXa<mYTmZ6FL>@
%J0oSCVWas3S^0_\)&!s+AY(F"hJL@Kj`'t]\_F4[T-r'*jEZ1+/Y;!r-d2=4s5>it\@>>Tims\IG)6aAZ1cFF3ArJb]lAD5bf""Z
%c?&ohCb<Z]%ok"ZnL6IU?8rqhd7*trH+p4O/+j94B?sg:;`pRheafk21?^SARV%11d2S.D8aX^m.-\\ma^hi(5=jW@DYqO7'0]*X
%c:;fPnC;?F.Snkol6V_IVl!/>#1kJuQWA#cl)DVM9o^a#qjmXZk3R!:b62UICo10Q3]#*k_dmBU>&@kW`]0A\KrgU,ooh;%-*?5)
%SE]a,bsbpUE:/l+?0=7+Nm2>aQ<<#4#ef;WQ:m#\s(pn"oC"RF;fIN8ksD8mN!adHCqMI1;M1^W<K7lZ(<]qPqQZMB^4l/PaYNHm
%QK!SS<bf'tc_]S0&MKVhO)-iMn8_G3JQE[::QhcG6d0s)f(Qnj^e3(?ZrVo?O)J#+VS/tKa],k*\gBSj[o?=RBaYE*QcVMdnab87
%^UtPY5@nTTC+`]5]XU,48);BqHd@^GFjCWNf8CG@Z[/*fiNBQ6rRk1!8*d<m@C$!-\a%oNQA4'mG;h.eDo'FfaE>lI?XB(f0#Dkh
%be"dak"ErSD/",g[T9>LESd]cbdH#PlZ]M6h&H<8lEM>>IV:(2Y*i=4FQ7k-@5l_F]R&$cB&@JXWMU3!\P3S1f=)86KC5&ia0Tu@
%_XlMfc"<!m%7\n9^$YJDGb98qmbC#kH9r-GSErI.L6[[PQ9@Q!N3ehm,M$M0O(Ie<jg"R.M*G-P?0tSE5X%:nFf+\AmB[JWSioRs
%,G"#`X(LI]DGe4d+!/eDe?fbb(G][;DEG&*ZgFJ)$b!Zk6eeZ\=.Ht$-eRYUjcSlgB>r.0IZ_.N`?,`c-9`s2Y<('#^#$<ah:+NF
%[F=>o/id%hdVZ;BA!\eanQs!pGjAXXh+Va7o4T:p-+BMF`u\+]Q&[d!hSOWK?b="@oget6GMr.=Mh>3^fH,uR>!)@_9qoP:CO@q6
%7LVZ\Sh*b0l8nK,:+e'D0msGZ]>_8APAU4U*>E"YY`\41DDK>lLjbcPe9Ua;7,?0C@][0\a2a&.k'6g`ad"2"F4`=kR]r\]fB&%?
%p7RVE9*Oc94m^,5V]L%V5HQm!Y>a/P/HI]sU"?gSrO.OJ(p2C]0F?q6%F_`io;opX&'L<A=2Jdqg9ouI*KPR-nO1b^/)/Hi_Q3%0
%PFgc&p+Qq!]\sp'n2%iTm12BF+hb6HVRFJBY<gp^9ul@=fr>P:`K9].D][g3<Q)MZEOGS]hhZS3>$NQ+&*HFdI3XJZqX47Uii^<;
%CBTAqMmj8H3a=#AKapL%UN>A%5D6H<+URSMp46.*M_qj8l<QmFE*#2?=7"efj7d?<Q7F'C@B6&FR??s4p)<\&6J`7Z6cT`8Bb>a[
%j79@bcmIZ\<sIm?:=;>>/1&GI2BF?<h`>iNKC:/14?^21&%VR</s_H=0l&O(&^bjLFs@JP9q[PUHnZlqC)nHf88INPRujca]U%+%
%gHE=&6B3IrKhIPi3/a"\T=s3,q3m9HC4UJhRTBRpcp5sW3$PVST>9.pc!Cb7`$[&dkXPhb\/PU:+L%K^'E71t&US2'Ms%Lf-"!2q
%2?]3\T%X'X#@,AL+;DN88DB-0GKdB>;h\MBFV(br4D]B6kr]P.GRWWC=d*6A^(+\>=J9dY8*n"]NYjXTYKZT"GHHHSh$GoWLM%W.
%-j"5K(/lHei!UKeU\.a8F[jr(7ShWEAS/-k1NV`\n\eoPa$t[5STA/.X'cD#cU-$.GWf*brKB=p8mSR:$IH#ggb`K=Ok%H4Enu"(
%>uARU.TLjr2%EtL:L-a&@YLlYX%_+#H4>>K"J585.mk79Mi1^'-BhnDIB?nKij"),f#]PLo$]D;4u:MD*FAFkX&pT`s)i8<>)W'm
%dCN;r)KbYA-6=]0G3+Ord"8gN7VqF;XE@nWmtMSS3ioD3IZLVK$@R+7lQ="5-,5IF34/GJ>hFJ8(99&H#bEonT%Z6,mbIDTNlT:X
%BI11i]jWasVU_p1m_&MkAj+_X4)#n__0Z@:\P?Wo^&:8CpYK=Z9V./8?gLA"RXH+9A69r!h3FW8K356+=:58V:K`2P+:_/3jAm<D
%E##GTI;m]Z]r5Aa\?"3DYQ?=C,9SVQ7hTaaARd=CB%5mA`EFUW?FL9m7u+_0[_UD_H?.14ipuWU@U=uc`\\R3@VlUY6rgn<b+fO\
%kM8)Yl1oY,'sHRWQT1&.a#Yg:<3b;eo/]Y9"kJi@F5L;g1[D;Hj4X.LearB9XO":O;1V_4,9hTKp\/\X=J%qJB9mS>a*RP>*S8.O
%molg[U'#.D<H8sEe#$-]H@P>-P2jtoXJ&:B:7HKOA-(9&4-(,F[AAVH[=`<.CWC3f9HMAE"h4&)4f5a"+K)X,I^MY.&?C5uo!I<2
%@1ieq[9EWNN)Ak/Q8Z`NXPAM(6)tb<IuAh7FcR:!9$tqgf5WC\lK#4!j3K8]C8dk::2ZM!@"h1:J:R:o.m%9DrBpJ3GPTBkoq"V#
%ANA<th@SV9#t4,\P05*WH7m2`X\p,8h]aK]CZNX;i384g?<`#p,OfkAl#QP,f>\UfZ34"Z]t_G(2emPlcmP<b]/qqS5S7Xf.Z]4%
%0\XqZna7>.<87q9YkG`mlmS[B3uR>Ok0nAl5d4RR4K70HH*!!,ot*Th`O*:YA6M6joGA[]WfL4tP7*HJh+k'o?$B@X>!QHDFZTbl
%a$U#?iV],Zme0BD@7B5.2DY+UhSjRKjkW[g5HRToi$Ms'qk%ZlhASF-XnpkO9I.'Z]?7K^_b9Jmp$juD4tW_i*Sks<=6o;"R5Q,J
%i\,&-"+m_NIau%VO"Ys[HFH!#1b0N4B%.`W:KH#XfjqKXW89+O/p,_MVBrXA1J:-tEIYfqNEPFD8'FiL?!HWP]b'Y0S`_NPZd=$C
%>Ee@QprR;7]9p4QlgA(A,\kc>+F'(QO(jA,c$M@Ga7M-9P6Ps9[XU[6k2FTnGb!>G9&Y+.*l#,@LD+";C$h<X)LgHC[22$e?$.l0
%'U4T5&9"B,8sI_K9X2/r1_,m=C,"Xn0:_C*Yn.=pi(Yu->h.3>"<u+&)6]`"49TWscPHl[/i)"_!'R7'_Ka-F;r(?Q[WBdQ8d/uq
%YJ6Z,O"t'MM&9FS#?@k@,e[Wd=P^OeATJmCq7M8*[(D?'Lp\VLl>)t_Y_Fc/9aTCBdAUD]AbAEb+nZ#O$7<gNcc2#eXEdEmeT.jN
%'lZ.p=bh.fWq2q'Jm>L2aY:)H;8ISYXA5fKa84l2J=Kk.Zr"^K6]9oLXQNdM3ikZT`ZqXR<11u-.B6LDPL>VR.hSB5kJ,81!'"EO
%LYd83VuZQI)c*oZ"n_7:ft3\Hfr0GtLSFEtWZq\GIS/<>$*<4sIPm2JW?GXYE\iI%1Oq4)`*>Y_T6-4lLjf(2T:1*Y0dXW5[fBdq
%;p4u9P&5d[`5@;82nfsqE;hQo1`2g<W4e+^:st&Bef]FoX0d\6GHU*GQJDS[`MN]m/@3>H^m&V*A.4BWL*H*u;e39>Hj6=e9*p&!
%?-GBY>mETR0\i.#k6qtI!_$_i8r0:&&iM5Lmk4DF#6"]sk3]T@NP`YWI=_hf6FYZ)'9M.Ph.+$8(ROA,7<4T)]]XR+.PD[ST'Pl5
%m(8;o1Jg[f@BMkR5U$04FUXa#IX,\_0^9Gg>#d#)54Q&G)"I\hg+^AuU_SKmQ!\!!]Z[S6)J2^WjgMRO,4e[PdMM\_I-%!W2mXPT
%)cZ5-O6PU>B95Ff!.K2k&)kqink6->/5%QOpB<gC?F'.lp&=64A=na<P_YpF7DLO>?mDk2<7pr.?#WoB48,a]p^l,f8._s3n%D(P
%4f(burUf07IqsnQ=&.)\M!RHupYr&Mh99Y`D";-^m!1sp1Dq,=>t!L_'LcCuk-G,X)u@Gt_.`@6dYYqR<%+5;M\1(#/u(1$p*k`g
%R0q^0:k^Vd)Ncsr<Sk6?Zn42&TS5Z&fq\4V`Y;-!F#I^6aX<a(eIB<8lXlcNK\U\OijubT`mN:Gp1qk^59B";Lhd_UiW7Q)3EoN)
%ebP<D%ksg&m.[N1i,B3`;C+q>X'I<g-0ZAAL<Hdf=?PJLf9$@C)?;&<"F'6:n]j$$Mf!T=H?iMca3P\>7C6C.7j1p`8PjOUQe#(n
%aM>iAj>L0kjWLU`E$"SGTQ"c`Q3u<ElK.,2>A9sZ1dHYZ[Wk0K\;QMBT5"h?4">ZAAN>E]WV_""iBnO$n<l$U=Re:-7g-+PS8<B@
%KJA/-)Tjbrlf4$sK[`Q1es_fKOtW5G&Tue4>.`Z3jQssp/IpZu9PZGV`\aZ<q\>u&AQp+*bY!!#`Kg9jB%D.qS-uqsM[_P7QF\#M
%;$3H`e!%DjIGXTih7]F(K[XBud'-(WL=\-C!\7>K)76P.E6Cf;?>'0YKAu77;QFTsV5(<PBe4(%%pO@sUB-oONrmjYZ9]Rg@tVW6
%\_"Ar:ILPEY[%8XJk);f*?>i%cMLH^09U!c?2Q+PN\8f@NFe<FB=?ibjMA[A+r'tAk%'>^K<TW0Kmga*6qMl!e-MQjo*mDE!A3m1
%a:;(RHCsh6o)d"5i0cB;8]aLLD6k]?m\1&Q'[$"KJ4S/WN*jnRRJ3rBhC+%Yc-q.m_I^\j":?;0gP.H#@G,9OO.Q/L%Gg25+d`F#
%n#,\kAYuZWEZjmfc"'n@#XP+pr/sj!moanrP#(e7EjDkXj(,\K[:BUU?JS,8%]*_\=0gg/mh'Ta0eUS=HhCp,/=3D,SEV9:M2%Z+
%2bI&Y7a7D8+W"6p-F_K2L%X5i$fO/VK]1bYM^1jt]!Pp[Ij%B?0#9F-HNdp1RC000fp3XX-j:1UX*C1s5lh)m8X+fX,p@K='/OWX
%Rafdj_LRf!h!Sd@QYs7s]Koq4jN=^;4%m2qaE=MN7dn<=d'R(0[b+#ghNX;&nX#'<W"K?U##.IM=2O2B`*FS6e$@C;rXqe+\IDNa
%%W55L(Y8lkm]&Odm98RF>FFLN,rZWZB4:To$T+<A$eN!adN'Km/o](0$jqK,!iA8-S1(B-78ULcn@PQ<.J)08TAZ`%eikTW$_(=j
%Jida]3-c($3#(q`fFgCj4B41n.enBAb=H]ZA`OXH=u-oF[3@Z@)]JRg3leN@Ql"E.(94ei?Y*2\3KVfP?lamU/GDQ]r,,]g))P],
%7Egslq-C;<S"KAY-Z%&fgi9/eQ()]FQ-\-^0N;W2I%tjp8!XnW`f=ku0^;$n72kYBn\/jV[_$g/f,rCXb2b^!mF/GsohrDM^k%(D
%D,fo2=UTbrqZQ:5Lk%UQp8\X>eo",4Ye?`+=N0A@g9@;^:RN",6*@UO83U^E3*TLKQ7OOX<Zp#k0&f(#q-HQ&&ZoToiALF/m]Z*C
%JkPB"q?VC`]W8d'Rn\MQ?e_Y/OYnbU[-Z8$p;9)o]OU]I%BI!pJ`Y_401O`SZ%7P*fJE1Nl2e=;oD3#iaP@cg\>qsDMWtB_^7j)u
%qcC?B0gBJ\/DfTo.pLbmpKG0nD3KAN'\\fF&R9BnSjDt@&B-im]#NGe#J1.nGIO4)r<l?ANMF(\U"ICie,Wb#d&M]goY.s3^S:V@
%aN`+[\=q0e&^d]M%3^&t)pK;Yd"f;afZH88\BG?IAfmZ%2pKAXj!Z7c2VQ4FlDcYQ[`_--IV`!NA&O>9bA4Yr@m0e-2RkZO@9B>\
%<:LKpF6RSu,ZdC^kk"^i-RW"9)qB4_LG[>d.e,OJO='ku!#1BhF5:q>h$0e:m/WI/\Br.q+[O=r$W/J+:GTJKijZb#SW4FXQ$00O
%HD`IBPIg))2XF=1fbu7,R/.-k*u+,schNJOT=D9F[^LV[#A*9-2?hHPc_BOD-cg>^)+;Y8X">mD#IKI'#7+&'8(.,NGP]J#!i\s:
%jU1mFRr!cr]JOSIIs&%Tn5sE+^3#DVBH<;;[W(;c,O'W-7=87fEk]MSY-$gGNV$kJo51Yl")'lrS8SS3XHlX]SKBNJgK_o,WVMd!
%5%2a9eagreNt7TKD6E!t-C-95\=@IhejV1J[rnO*^J`@d\X)^=r03>)QLesrjnlKf_Y[Fqhr\*+?Di3@3M02RaZ!V.XF'AAcF7QC
%Uq<7QA;XPF;VdSl(2$:83qZ)j*mNhA1pV"9kgQER=b>oA:*WZm<fZ"GUImZm[B^pC;>S::=f(6t5A$5DJ$Jn0(KmS*8?M<Z(\kA%
%Zje=!<ghaGfuFloQoA*B#qL_6,k-f'q&HA;\'&P5^-NHfW+.1^V<^(@AU!]5QQ"nnpW97:=SW]OMga<Jkh=N<ebZt))r$;F"A.?#
%[oqffm[`s&6GRL%:q)g.hI!"GCL0RD,G^g8]C.EK[\eBDhP'sgg"j4KQbQRE\'+a`eM%>rh0gEP[4%8\D2JUBi/RU4&kS<3(MK(!
%-*(2tL)BMU(#'@-Z.2:8Noth[\0Ga%4L]ZV]REC5hR35;(J2]=l<\I9<ETF73RK10J6EE_n8#qY3's?VSnM@Gl1cY`<Ff(Ej4Bo&
%Nq5t)&5^UlgK'B4-q7/.`?`D=a>J[XD&-lQR_mA4qA[+!a/*)eVq\TM*oYTW=eCFp[6>n4Q!R!]<EjY'n$4O=Q^;>JfD(3DA&p4-
%T'BYF%]sRU6*e?F`+Z8i/(*&"0u`]5Ci*ArJkkG`-i4cTgK_8"/(:qtf!(-JMXm=fh7Z1iO/ejV^4Y_5/ug+'[MX#<YI47slh8%E
%%a<SR`^mS8'<duD%">jlS)i#2l@i#l#6tEX3dC&V4H"G\[>f$\@\j+%Z5F?7+6=[emN"pn<[q.YO&F_l)A/r`!Ea/nRZ1-Rl+/!5
%2>1#4aL6-FF_a&(+p($Xeep-a)JgfFM!tWr2rmYbF\o]'U?]-U$J',0kUe)WRg\n"$L$7(7-/RAFY'G*j*1(CMEEbg2##mbMRgLQ
%:IAV,@P141KWjg!L)"O-c]NikgpkuCM:epfII\NQ8\.cE;^pKsfpg7*I_JTeeb32%:#1tFDk*l]RrM"WH_Vp%.bU<>04o,:ap'Ag
%I89LUHPUT>Og5r4fpgEfCeb%KQp79n0jc#@=CF_'LYJE6&[oMmX,$Rkp4crN%_qm)K/XaLK>+HejDWa?!t,=pEt<8cb/-\"8n0MX
%S6PDPQa`7"DK;Pf8Is&7?<l7W+-_RqH!U8:YlP%`WW>QoWL.gjrn1hX!HA_CLPb%S@At%;"[RiRD!JR0,tSZm[M$=c++#mto@nP6
%fV>K*<8,S9!n"G)6Jd*cQrOnkPrE;M\(:@(pB&nl$aNEVL6oA&?2S/ChF`0JY`nu$.eD.kUHZ(@O%8fhqUk2#H)NSA+0<[jep,8n
%o7"5n7AVbXh;6!8%ILeeGL]\0b3;+#1(QZnIR[o*dN/8Y3Y@%f]Pkl(VL5<tDr''Y&_>:2bki_ON.,*Io\jp9Z(ULu$NHg56X<u\
%/:FRq3FQ\Fh0LM)"?/0cf#qoaBARb>?aJt(aYcVmm^`,#;L,u"qaXrWZsnZ@UAecFL-DN.$uV,&NNRId?^:B7@%Ep9!c?O@f$GSH
%.OLqSVem:[`;+YQ)J=P`+.fmJT^!=pHe0Pe@;DLC(&EC%:W<pVlB'sQ!Tc4@4oHg"*K-bPR4\)>.+8I/U-=QI]=YO2KX0ilgZ^ib
%c0$,9[+S](hXN_U[7b<+KXSk6Rdu%VE3c]P[TL2k:+_hf7-<GtS[S.+aW$.KEF!p.Aa:u`al9nWg;LkN*iR>Wc0ZknaZdCf7Zf6<
%j\q%I@GTY8'Zn4H5$fKB>?ND<<BKDjHPtN(8e`o4!l:q_X]q1Ro?jgT52L-OKC,nNpEN+PCX(Sr(ZhWWc)2?=I9W:gNtUCNC/LQ0
%dltAl%lO(Y?r>di5ENMMOeTM=9btKGPdf=UPUmKal7;PHRGCWQ:Fl-DX=UI>?K/FPDGmS2n/F!h0)EB7ONn_BgNP'hWl*COPgYdO
%9m2!VL=N6i.hd:^*Qe\.qY@_#MRhrTS(<,:D1rOGnD/Cg4i7M9];mbo1_efAB33cS,)ud*#17[4R&=ikG"1AYATQh:`(R6JY@eM$
%cBQV^/qWiqHf-[j=XK7^"BqXDb1TLe;m%m'm6YkT2bjQl-$(T6W8pBU)[bNK[?'T+ZO:&-lA?j_]^.9)X];3CCC+&ActYPldV<?;
%GFOKg=C&)mP"l][fj-,)?L.pS7#n<VIGJ/pQZn*/=HtOaMqHYc<b9r)Hoq)^KoaYCZu<g.$I,'_mP(Og<nhnAXB+[(d-KQkZR>ET
%^\c&G"`WKr`I;p0[1;N3q0NH!`3?.?lpkkACqR>Xa-s\hbY+]g-'QY%hIp+&ld^kXJU&d*kJ)l5*a'illTq:::&:G2S)JTK@ejS@
%!#:K--*YB^S^66LN)CSH9rGfRUg&0XhfE1pXDH1c)sPWE5f>\bPX6FeoBIV.QAtA*HN4#uHdAiSP%9(;rLUoN!*Kl[<+TZ%=hKiL
%]_=aKOYfr\$..Q/^3Mp>'>K@El7uL:2tYn;]4]FWd6Nd.l,.)"iPQRZ9_HX&a*Vof?!]00(b>?NA9kj"LX\9IA+Ig(\l>5lQt-!G
%XH-1pV'^KuYD%2;b'G41HpI"\bt/G`Z%Z4\Z>!)i336Vi.h!@q<>J[Yf4f<IQl61le(gF^HcHh1)Yhk6JhJGafG>H8lRCicJUO5j
%^:L7,Ohe\mIE]k9'+F487J0Y%]d=KH2rre9P(A%PUiWhmIA\lFNuZdgdS3%5qNQPZ28MSRqAN=@&qPJ)W4jCZ3F-$"8@pK['IO^L
%(Q.Js]])[;YYQRb>#\kng,lj\^/.d9`F^p*^qS/*Mn+2/JUJQbX-4%[$]W8tL*dbi(YZd,X4;k)qa+/.`s>Kh$1&%nRek'lfT$L/
%)tgK2P_"6W<&jXd>I<A+ijan)6=A[fMftQ)^/.e$52f3kYV-^@2\dqfGacF^&;!0cb%UtT.LT0=[WG!?S34#/,Zde?UR>!He:E%A
%W4n!JcQiSh6G#(!nX*Ed?Zj4LWc(;]ZZAQ)N;jddOFP]o^<i+ARMl%D$LFgSBo%d/2'b`$Xs4/-DZ@@,C<ig=e>QTlQ15hG+q0D'
%p@-[Rf=ng"a&VZq&32(C`GbBP&][rB)`;m.B`;JYkOt]E[=0r;g'Ar))H,Fp*Z?d$QqE?GPQH</`gaDPosPk<7p`3*V1N<J[NWQR
%G0_"D9RLc5)bi]lZ`Z(>Li4@nN9p7CnZsYP[!eE50q4/$r,2jp^-/b!kPa/;76@d+j3Ze8UK]`R<W$cSDhcgB)`^ltX8(S>rm3#E
%r\r@u@h>gC2kHQm;#DtW9Gu*eAZXm@-2/B_s0)7rFF<VnO`T:U]Q7gdT"XYN52Y9W-['RD1I?'0^^'-AM>ZP-e%#GT"&8C!2L"GR
%^/"FBEP/nDVXJ&89iI%UddsAsb.SI/$YaV,Ok'`^NQ9l5RZgpA_^-(3U`c2T6CQu2S\<[7C-jE&iEj2B4W*"&cu8/--O`s9`W:K-
%="D-GP4/!UY#^3m'IWJ154)#I-PM:rD@+V)8S]M2FeCBt;'%]MFH20UgI#bh)Np;__`?go85;"qpMnXmK=N@\-^EO"Vuh"si$i-J
%J/9-m."n^"@&)14nB$Ke=]I?^@R\8_20Z%%q'.N]jN.d5+]oB`N+o/3%cr-V3JrEmD%@/u(oOkgrU%E,&'i3q2CsRZWRD#[NZ(5=
%28%?M&=p8F0X+5F,)q0'fGc0r='XaG7o[6aj&G;Z.NWt7L."mt*C;LLO$NY-5+BcECt/E!(l63?<#`O=TC8ZS5#.pAT>#PlQi7re
%5'GQV)b3jl7GY_5mb'5kGG8m&Wr"_tM?8B>B\ZmfH<L)_Lr".k\pmXV!i\7+qD$WkJK#VPs,M6b))9k>q/FrbO_NO=?`+KbRO=*!
%9e+lkc*(1$K+f#r)nE]\&F1Iu*Uc`GBV)I#-K*:jLlP?<9'bE?LeadRQ)(bJ[<(?kH`82Ke.Zm#kkiQ0$a';NH+"SF*V(3jkrufu
%/!)5s[];oq^$?@g7h2=E9r^&!mW*#O4]h_be+1soZr(nS"5>6UF,6s)^1dBgUq[jCpO"]1/CgsiWqQahS6*9>0CJPQpjlCC*;/,>
%1^6iBEkKtj&nB1=\/m&BH<3;FRTp5=EcJQA4(!@>En]_s[kGeJWmtrd#I[2<_^l0$:+5ORXgcgU!&Os_3'Qc=jkA+-/6ZOu]CYNr
%-;Y+Lbsg9Am>PZk=pH\o,5,p?g6;2Jn_39VmH<eJpMN3%^G5c`agE34k#;-@jo^GrI.:h?PIYr:bdoJP2@%hLc2UZL$+tKB;75"Z
%ADZ:uB.k?+/R.nrFI1Tc^MH=#9iYYt\jHN0IXejIGP2ql7[L]\&C[uKZ:AtSCFX3bDX:)Apu@deT=2A`RqH(kD=f<:^mCq1os+8%
%X#/YfO;PM58U"_%iPk0#6.NU%2M*REAoG?]h@Utk2ma"N:,<5SS70T0^2rs58$D11oBtK3LT\_2pHs8?GqQ5VRqDW6LM't:oU9^K
%69UgO5&0_i^)Z5h^@SG<f8YcfS+WmHLVGI+5A<[Pmn;8u)XVXog.gs<1]kh`_kkO,,IG@_?2eiN0jpM.nX$EC#>r50"ISH-&H/Vt
%fPEq\9j6.ZY5Xru5,rhhe-KXAXppGqC)KqOnOKSkXH2VUeNKe;T]=g,-.0r8nPtA)qlb372D%#[BT?<5:bApJ;&q9M=fTN_34M\B
%*Zd7lj4;<1EQ:%kNcM-^Wp6Y<E?<'="TXSH"'-lm6\a-3!ul_`g^R]ma)M2#2Q!]uq'>^s`t0=H*DWQK7Y>f"]X`Kj::`>YD4C5K
%/g7te_Rnh_nSOi(H6D"'qA/jHnJE(3OH/*bCaNPUI^_%.!`!W/)_:1/&:<-N,i6;nD6QI?:-)/b6MbbVm(2aiI*C<7<3$<Hkk,Nf
%k>>J]RP2'I>1mg<M68cbWCcPpNc.;QHm:oCh[oU!/;(daB&JYVgjD\9o8ELrapdel5A1sk:E4";o6N,J:##3+/8B0]a2rD=*=b-G
%I(FT>o_k`9<5hNWFE*OE%,GoH_pZ5Y,-'7LeK#nh6;V.9Ue7]amG*A(9C#B;nk=/b\A[D8J-i6T8su5YfS5`D5'C=4K-4<)CKH*O
%kqq/`Su9GK>Vsi1Mg!;Pka79ObR<W:e(f+b\ehI``S@H_N`Bbsb&:#dOuR2=@f:V5*Ko%r6oZ6m/ujsQOuVM;HUKsf80Nhb`ZpdA
%iRg-0.Pquc[2M%NER]5$Ir@AN9pdSm>A,_34\$#S*&SdW'MWmE8E-T<LrV[;%1c$8QJo46eLXb"Srg@ALVKKaiUI0LR,G6sMA8l,
%QS;o)`<qm_h"lqe'fMRjs/KO^*LcVrM\V7`[QAc>_Pq-*\A+nC@@aP!A]5"o!n=/APn&qWGrR$Z[2Q7,iL!cM:0R.k9!-gt%RZg:
%-Rs@#gdSNEd&/I?3-92I'C^Ra4e\rX,8E='5-*4%$6B\\FuV?K]]U`\0Ue$E-SBW\P3*#"%]aLNV^cpn=h[//_l8h&P`>,Ffk#^Q
%]AVZ;C55`cY4&=n%o6p**4=_`n,P`<Ac`,HLPH1pkR;fc_8DDq4\o/KY]_U%&NeqRI=d'+K-8#Bk8PnKNDo=cphg</S!+OKm.-s8
%C58Rs&WB]YE&d_6g$SXGJqmjc.6M`@IV6(+WBf7mM$b:6`tIn*3a';:&=*>C+9(I]7_utS8EV6**Y+6k;<.W>$Q]fP;Q(3I?orAE
%_q&SRWZ;T,S'"[UE<Ql.=$(53CLar#593b,T/nSeDDLaZSpO3`j<@jrE-s.^;=JP7B[BYP:0R-@J7[]l,;=S__r4^PL6@Kon8NW[
%_dP3Pj+Ub)%BFY#1i39t%u44Jo_Qh3$Qb<I*]LA!mqT8JO_NNh"V4BXWfL?QE25OKV_<9S]\;?..df"p&'(bMGg_2!FY(dZKcP_!
%itjfd);iG,!]3fk_r5>hG;G)-LVp/5*iJ"X*i_H3g>Q#-d.=4D*fcS)lGNi:)o7Yr-aBWa`o=E6*hG2(GKbYo6a4LA?ColGb83;-
%Y_0!ONd$"6FhttXZG`BLi8JW2=In*7U>TH.N,>5HL"P+9$6B]/maY21oE>b\C\OssH.%;"Tg]pNiGsm/LSO.+V_!'PRZ$1)$Qc`%
%``fdf5rY\mGZ\j$YhEO)!TnJ-%u1DS%UO-N=n$D*MbeKC:0$ef5-UnIoAl'/UYt,#Q\h\O;AtO"n8NW[_^W\bFS^TEISA]C?%$-'
%5I8O2J60DKj;$YVFoU\SR9?`Nr6i^taft3B;"*j;eZL&5LnedV.Tr'gam8f2T+qF/U7Cp7gL+e=H9VUL'.r%t9?Wm?=&W51%hB/o
%iKkEk1Uh#Z?f*p]/\UqF8J=L7c()CmrDkS?h4Ij(IJqXJK.j^mg3`eqgZ%2@9='QT\VmN'<hleCpK#T=qRr?C]\3*kl),'8kOL.<
%2_Nn!s6EPQleBV7=jhB'q;':3]fWo[R:Q2lqloq\gX@+6*oB\aIsJ>D0DY9WG41K5cWB8aqO_Dl4G"UMgZ@m*?i8Qg0t[JOIJ3")
%_=E&$Ds$l/)]-iRfph7%5@36Y2>@!kg"5Z4S%["X^Dq!7rTTNdcXqLpn!7V1k?lQtYM+oXdH9_beS+Q8h:p?%oYRAUK+Grf_.!<_
%pZCu3]Cb,lo'uC*1+r+=r3`B?k<6F_SFHW)IkD`]^A3<eI)Xe."*-!Moua?&pVk;C_k/'>O+.Z5#3@amIu)EX>$9^r*Ek+&&Xr4:
%KnBJSDJ&*;^Wc+Ngj=#6frHLPcg;f*@;db8p\FR:n"42U+h[KV%p,=t^$sM,K1"GMI?'DZ=kS2njEu&emh<MYr2<9[59&41-MLnb
%@#jo'B]5PJ!h_s@6AohHh3r\Pg=o,emRdHK7^TGlHp+l]2BNa%QI@5Q`J^LEIa.<6_q[E<?gZ(&lW]H30<X`GgV`CVh>"k7'AW"g
%^O-PiCihS,s-=hNo&[LF/))ib4N!H`O6siM43sP6TAOne@LGEJe/s),+fKWOX8pk9QNu@K'eLHN_UIKBO\k8<Uj(5d'[O)XR2.4*
%VdHc'*10E!kgiQ+p"BKI8dt.\!WBU\o:KkPD/P`Q3?d49k1:Ep6X/<8h7@_Z?F]dl]cZO13W>NITfCaTs"IgY_tO"Gq1lrS+5URU
%jWBd,h>COT>lH=XHusH&(LeBP?)kc5c@5DFmk%N=nC`4>s3TdMOR^o4j[bZRF7Ii@VT%G%V3!X.)QX4Hd`t^pp2t!sNgAnq+<#;e
%fC6VY7=Q2(?W%g8@(XHRfFaa)I2&*YLEGP*:.G6iO;EN#hKV?l(gWWAF1jTj_.`)p/`$`tAhC`k]tV/:j)43uDY#B*n)jUOqiYjR
%?i?Rgbq!N8VSl(M8Q15Camo\UFC.48)AQfhT=<M':d0jC.+>*G0!DB>]l<)Ng6_0Oc]ok.qp3(u$FBU*d_!cuF0G&"\_S'/rJj"F
%KC_emoZpO/3ZmRHgC**pfV&u6lP&WI>QEDMk2`G21X?j4-X-;cQfP'p=*=u<kG<J$qs#d4adt$Z7tffAJgQD'qm`,6:J%]PF#0]<
%b:iGD#l2WEr3UN_m@%q4[iJBWk9KZhoS3C`BBLqjX/)917sj:\-=$O6j=GGNY85`VG-5/]r-A>%e'4p4ma"o^n]_j\<S<Xe0%?I.
%bkBTPM*-*tKH]@!XmiE=@^`m30At!oO$6d&OZ586_'9j,-[jP&qS)sLq84T'=)Y`j.sG;f`#OrL$!i:@Z[>C4Ks0YmD!ZWJ<=IA*
%PlTC82IBY7.aQuIPn2p.7i0HUrNr2f\\<C"Ep!5]1dA<oC$sZB)nY"bS@NWL$]`ABQL3,l1H3a/2p\S,ls3'/jNNV&XXe%M5MWr%
%k5(9/`5*8Qb([JN7O"O5f3ZVhbMBh,aqGA6D6ibK;)A?OUMb6?6qb[H&O*D5n:ZL[HWtQIOR0m__8"D_07WVIIU69NH->@i1@tW<
%R.KQHqYK3M=#q^W>p.u/_8r4[Z>hrOS'rt!G=SfAq%*JoPe+tm6=8($b&d>Yl-]0>o/pKMboPdSf7&+"%,2H$H9HV`[J&S6b,=O8
%]tPLUai?J%!n7t5f&uos@f6]Ik5T&4b@s?kf+nJtdi87393T/cs3K6aBD+8M=CWMU"6<ZF*eDs-]JP5Ea<s\.bZ0.`+;&st?4f^<
%DLB_^^O:(1=P6;F<;=2=])(CBfmEY_jU4<(0<_#(>I_*2I!+o*nfLZe$hRNlGdBB!5`OJKc9;$2p@e45XXh.NP:kU2#L>s!]l^Ts
%WI;@1--dIVj29gHIIO@"GAd6I`ih=fmFqF6Pp^A9hJ@!kp_kgc>$5%&DUrb!^E.9qIud\((:a%@K_Nk+ACu6t?(iI&NS<^O_i=Jq
%YJ.)#H1i3YAQSS_K5W9$J'WMaIVh7%hUpMlf\:ZDl-'s0"K@mg\&cSPJ%T&SIJ'Ff7P\`1EmhJlk@VEZ]D?pHrR'AEq9&)CNs9Yh
%G/>Mq?N5F^VP.0biY7Pqk,1'7LF/bJHs`l(0)Xkujm>RFk'LH:^Wk%f*3\ZI=0>nDRt_-\&+BA;STF+8eo0EXp2/p5])=M'Wadrp
%Kf;D_j'*nbo95fRUPh:E[<f*\*%U:/HZ3gCUf.qRCqSI!<@UsLi6SmFp3#uD_=Fpj09B7`q8_(&bK]bh>A%%*J%iKglep'js7,UJ
%&RW\uRC=!aUJL(IfBITfIQ52fLDJYq*[b36=n#(V&'qReD:Wq"hZurIm/geArWH0?EGPG:r?]LD\d?X<XrPZe&%FRGl?A#CiJ^B-
%Y?kKs\r)^FHfsNLOk%M,b=b>am]:4N1C$<>f,q26R'#IZ,MueZ3-]ZC*N>8"f5H+fp>QN=Go\Ii*WGuR1T]hSiKXs(0X5ENFThA_
%opC.uci.0R>Q&_bs35jC]6H:NYrt+P)1TNQ9o.;iV!DG&VJ[;nVW7CA>h,53rmJfC]CrS.DN:2G&[o[W`Vb)Hg5Xg9qkTdIiX@.'
%C?lk#Z]EG`VlC%(-cf[69@#!Q0+_]T4_^ZDpK/*+DFU"7a)N&Hene5Id8#JbfBH)bl(g;IV[`&3$16*BHHes2RKAl%bh[VGbfoPL
%QLW;db_"N\-bmr4=uA*oD`/Z_/1t5`L2lqtrF$;TmEEH'(QW2Ek*ER._TZK'phj^3lhB^$Mu+%Bi:@6ADhr"-<@E=3k%lYB`\1&5
%G'>#dRme2s1j:R5U;M+5poiP(Yl&Zc4\7i=4Lt%Gm/!j9l##.:fe]ENDtZf@i30s\/:BOnIm>d,S"_q/Y-+\4XBVIoB7%hJmTd@m
%qs\-.j$S.mb=FD.[9%!&H_'_!k;qdBG2HY1^@LF0qt8g@%gQm">hf9<Ej)<A;;)1K+]==C<3`._j90p2hF?=[,#XH2e"$jV!G]8)
%T+G3G?(MmcX\S[)8/%;`)AE_N2l@3:7cij1[PeW/r<j>5R7m"_s"'GEfb9tQRMn'Gl8SS^_W?HJ9n^]WUC5W<p?V(]@+>MN2m],_
%<h3ac%QjUM_YPJZ5!lpDeL[tomr!2YiVf\/pbeLCq"=5=\-Dp)iL)3(-hh9955^Ph/3J9g_>NHo-TeYZ]6O/'n/IGjB[We$^R[E&
%KD(1RGTo39YcbZ0f*IUjA*:bL\)mQq9-:,47k_nj[6GH+fD/.#gRYS7c3[E.JN4CKH$4(RJqb57[,WMD.f\EDqnWS6g;ESJ0)Rg>
%iVFe$_s[D#93-Gg`au^@?SXXgUYiBkSiPr)VnD"6S2m+HEUMKdH_kUT6Wd*-d`*I^UKk)ZB\KDk%UCi>dS<);7_*'d%IX"<#2b5L
%^Y2/1Wc,i0C+h=]cW=K1>?U_=/[+M)]XPG#@m4=i[d`>J`V!<%7rMJ;dLZ)<s*4,+b/V9PO8#j5LnEepB0Z@O=MJii_eqZKOhElN
%Z1-C)K#sC!]Z;fnMoK-&7PI6a)WcrdV*C8,4#'HUHjP-ldcm>mef7-#nb6Yd7b_,HCepORG!#W[&%/=c`U2+oI-*BJQnM7dFjlp?
%.8Aj+\(l`1]<FFM5,g\^p>"sT$to>)l[sa4"8uh`\kIKkmqD)]p3*WZdiijW>kVOrlHbfER6P`<J&BUoZMFcaHebTioZ!Y!DcWGl
%rU\i9k"G\foDK*rFEq@qo50TA>b#*s3qIZ8e3cE=bZp*E]K"/OeB')NaV-ie>8qY#nfXoQT"k+ZI=>(Ph9ZK"opirI&"g(>CD5@]
%i=i)+-F:h3-`dO3dr4gH*?N6^G`$8f-Z&pS4IVd`l:i<`@5oWoZcQqn41[.2e4HhP$%Nh:7C#c<C=P?,C24[dXFBuI\5[\P:R];4
%VL'OZmT%59C]<&JNDEmJgV$GNMq+T'GFf=U6F6CHUDp9b_p86RJ)Bo)5#fUjf;&q+Isgad_V$TT1:JcT@+`]2Qi6J0lY3JA&MNq&
%WfD6Gq6=']5;:aHH9K(6=E%r`'.jUhiea;ak51'KY.pDKU1#soq<i;,j_[b$423Bsm+[qR3"Lp+.>Z6>kKcB#(c!G`AXpn@7@0=4
%?eQZsI=@CZcpQIEK-0J!7N?f\0WQ#_9)fJn%EL%P(Gt]Lpr`?/pFt)Qpqt:$<N"NdhRo6OZ*YZlq?O&S?Oo-mm)O1.hN7<lDB`J]
%f8fCjMtVK%^!=]6]#3,9r6aX6<lNb.E2lFtU\Wjb@G+ZsiV_5o%q6@5F`:!+FhigI<UpT?*?\L?ou"g]oYd6a,5cn<^KcF]6*1</
%(DsjrG5:+`XKKIdNVg+fFnsBkB^'Z:\h/@CP^A/:iC84l:iF28gmrI+[bg`'r:tGf_]W[IPY'3Rm/AqL#P1$[Y/B]+]3U3NU<kn<
%\bZ0-<Z\;q5YkPk8**PgM^*m?l6V]$VCI;H7`W?!9BnHGppCt.RhEceR@EfGR7R!QH3Br-3>;^rdN3$F"*(Q`5r>NaRYf[<`O@.i
%OgT71(C,`U.$*QdB2cab]<g&JH'3M<><SHm"J-26a&,!k-Q7Zb[.8HBEK%IRZdlD8JH3$UNMD>?E'1aVjMp;"q]<SMo1]?IS)pB8
%k\/5$H8bR)FPmuUcQT>LN!Ip)B=,)Gpg[GXDnk.NDK#`RbpTRRG[J1%[N"b4%9]12"sFt5ET`(HZr'Wbgu+uNSe=5$_o<94KO[`P
%ERIT=OhjU.:4S(h[(3?'2Y%t[A(!.LfAA\i*9Q`r*QP"]W1`^N(JPn2nN>bQ)H<r`Udn^L9@^@/g9G<Gkt<6@c_3bndOCP?.qO'W
%mQiP_>%iXG0A\<f_)h;t#.^k(L&5p!*!(]%,)Kk&2Od<i8oLGnQ^F[C&E2dK104"_%j0Eqph.8/q=A`Xh9c5@DeC=D;$,jRfcIXN
%6]ce0<e'se&!<37K0k?Y3%4e!ngq`'X[W22gF^N[IltDl`"?P-;K=9+KJ.=1)o!(Z6rH1TBeY>.fB+T5W._Tb?X"NJTbcF*CME8C
%Hg]&>PtF"0j77-We2VF=g8+hOg@`^uKutJe>pJ9a0#JtZ0lQ2#o]bc%T>11ehg?,Jc:aFAVa1U<a3X@]KKdm6Xke'OA_k7X],^LX
%)Xf:bK3%_cM(KG3mYtH'["ko8naNLm`T&-,[pD5@JYOWjHX=T^(EN5.8L;a7bhZC8;Eb^W>5d=THth]YmN:3LGAbYf*k^\CNBm%=
%N`X[S0M$5kC?Dr_YE"[BL#q:e[1WkkG0/-aF*fk'^</[D4T9cslc,u$%jK4@*lNi&\%gfPqp<u>et;%OXtn8p)d+%lr*7O@=b!r9
%S+_5Db3)Qq?O6JJ[r_<np2PZ03EGYTI^8'2:2k#Sl)41>.n08_QXbbW/bs<l7HI;VDCZt.@,@0rY-2[7&*r,ul)"1KB2XJGVH'OJ
%muPe5//30oQEN^&cHTGM1Hs%VVgRS6RF:"8br;O<iiXYIH\5YlKt7(_f=1CubND^]ho=bRVV:J+B*XeS21jP<*c?FOp2Y"u5+gTb
%gpm54=*eu<:SPO`QW&o'[HF]!rIC!N=-=V6BUGZQ*((o-k9gn>agTK'Od_I?e)\1[(9';YOYG$/c8@F(;KIFuRfD:<WIJGM&l3.S
%<_P/0qYbj2i;UREcX6FE(T.1OAa1@1/%=O5l2IS&Rg4:e:\OeFdJAp[hu17eUZotN9.Q(TDV`I!otB0'TD#/4DXq4T-5La6C-AY1
%+fUkEKjLk\;;D)XFnX4jSb54AQe.]JIrff!)Ee#W;M,4VX7A$SnE&sPq"FAmk'p`eN;'RLRDnBmiBnGSnPZX<^.S:+XtG1Ur/j.O
%dAQ8(I)!/1D#a@>O"1T&n(h<a;]K,i\#qp`D>neASo#I[GnmHrg3i^,o@h?p>s8Jc1b-CpW68Em[4M17`)/IGW9MpGB5YBYA+e'*
%mg"(,capi8qLIt5=4JS8M2!R4/+Qbt'+J)2XeugK-Q9:DFu+,XU*3/XgRku8d?#ZmJ3F9Z_Pb(RX!_9p'He9#YS`6Q,\#[L%92@@
%(,9?<ShL&],)142.fP>p%!etEmJk-LL<Se^Rt-;LE[h*^#GX)?5W1k,jCg`82KnMj`:)".achL0Y!$i%p=J0RX)Tt_oV:g:G36r4
%S&Ii8?_qq4'(bDP&"L#ncGrHLIB&npXcP_3?;tsFR7??:eirl&EmBS]6?,"@=,?(l1Cl+&7.cRbPGO25-T5;V.SRT<1&I%D[>\HG
%cc7lOl_7haoDOEXG_Wobl>^u&e=c&G\rldM],jj`DCr7GlBE/b\"^GrJ&20Dc7Fl\nNsV_ThO*[8Yqoao0;mR?=.;A"ST`'^R1n(
%?mA2":9U*$kiZ-VIf&DkW3*-5'i;a/g*Ju$Hh2W4K\4[?5csH+U(5sEI.QN4m)2&tSgn.8BhBG@XTRYX`mYg"[h"cXNKQo6HMX[f
%8,X+a5YeNE>SAE5\arNm?t\%kcBJiscWZBmk&>4<(>sULiTir8a8FZ%)]P(:e(N`WD7lL43HP/=:&f\=j&4n<p@-;gk5!a.<j[&t
%=_cl>n`%AWM<!o</ZBN-pt0IE#9.Ta/D:J5?H4=IXtO1L,Zc8/+I1Etlj<ISiHnD82i!u4]g$9.I@eY.W6YJ\b:2\.WFd!ZAd2%S
%GU%RiGe3NO3kmoWh6LKNl[$-i\ZgRP-Ta4mS^+;s?Wi'6#POp""Fa,>Mm2p?'7@ar3qO2'l[We.a1U;93`fI;)f*3;<8T:lH4D"$
%]bg->n(=3"9;<F-QUZ57%D?8<#odM-$]13_7Xu^[5>X^eb_:"pJ=uJ#5'Q7E3(a>FS_(`jV&t%?2"UJK#9b:HAkP>,7!cc>2ib\Y
%'3RB`+JR7g",>fk7mK>q%)]>(2sNQp\E"$<Y5G#b%*&L,c,)dPN_t"2TlR<7Rnas2M)95E7bEiS[g,i_VSgHkBogh3e3G_,0pgqZ
%LdtRl`W^(&MCoa,,<\,uB8:,;hH?ne>IlY)GAc;EH(aO_qki4fI^G:sCgKaZ';3K>CZ8GYjcruKS.b,L7!F,p]Mg$PVMQNYm6mBG
%W'"d(9Z2lSLuq95ZH$=a/U-UMg:Z?'\=V=k!YZhEZ=p!cL06Lp+=^(=SG$Wa?K\Sl1$N+.@R^rT3aL<i8Xh%9)O1<-E_\+Mnfap&
%XfC4/++;smEoZ_kN<<'I@8GWMmqo2oI(oP,qb[jIEMDX$NP"Icqg;GoNI`"Yna>sJ2<N]OgK-!!`OA;-Id>I7:]Dj>p=mJ<S40g*
%g'Xg2BB6`KdZOZE06/Wef!G2(JY!lRqFB+NPN>7/p$L_0jOIfL"h]*A_;X5@+JiptW"%:fnqXXEAR=+Qe\&<u:ZF46XX_XqA`hdo
%fD[2u(0*P%4Ep*aR1*/uY49d(1M,"kHe"q*Ul:RnY'UoD+/f1=eIek4hLol%''%tP\nrUV`rgI1ONUaC'b<3JD=ES#\&s%'a6Xf#
%SC;bo:O:!4qb'7lOp08BJ"7h*e!NAJ7'7&,gSMNC^O\.&RBO8T8tO\%gB0h2#N&65n*(r(CX(mV^7'ndX<l9:`*1M9pX_H'L@@q9
%j8<k\2*^`Dg\J`2^U^n&EUV$GX\[P\I'29AEG:Un<HIO$pLa`.TpIjDOu^!\'`WDb;W[1ReAnI[C9@O2,)SU&hjU=4?H6f=qY8?@
%05_Z]YE(crs7FDf!]I%KrdK44-l9GL"9&(*8O*7K3q>MK)d$6,RYs,5YPZPST5<U"mq1p58J(gYm]Z57fmN+`-V.B&pnsO`puk/M
%lueZ@$[6[a/rFSebBR=JM>^5B#!%0WonjjikuttrNh1)oR_+"pHa\1]mcK;:k6oC7HK"g2(>Z\bT>8I'f/g=X8WqoAqgVfTs+@G+
%LNjDbaVXE;ml0r)<SonFI%ETapPs_&j<i"Ge\0:9pU>AG[<F=tO*Fk-(X`9PDcTQP-D*1f6GFdrDL\2Qa"4]kNp!:KTs_UA=ueQG
%s13RLouI'W_7uj#1[N*:mAIGEV_:h=lhAp*b4I6E.=+e7ktcBuh"i':I6[CcBR0j^]_EQW@c\td^5maf*=Ml@@L%us@5%V6hepn=
%IhM*tVW2@dme#hSdIa=cqVrg;P8DX=@[tAKR]b(J)Z/F#of&6#pmKl:IkFt(d5egK!HreRf)F(hm*=5+QQPV^*pr<Drk<UPnu_ko
%7pgJS5Q&4dl!S0(8CnuQ?@&ufo=`\#mDm'BhSGtX:LASn?G7Cnle,M>s4mGLp!_^gdc7*TYPXqrh`^i+HiFcXiQ8i`dVni4hjKVA
%PB#0g)Jr5mXOa/-W'6F?6o4B!*D\>jrqI'Bg\2f%hu;g)iSFl2'ob*FPKgqIYK`65DOu@VFS+[^Trd0:g*Vl=\80#N@J11;qEC[Q
%$fBOlf?[fa7Rd+36rWgfG"#SOJ,SQej"ELhbCc@<Sc5<Q>!p\&?28/LBE-HT]n:YnrOi]ZFb3(\Dq$R?AtrfrlGZobifnnJZIG<W
%"K[sOcGkloLhpM`LRe?2X[)&YQfYo^-uu%OELQN?(["K39U,9f63Oh#rsj9SoTG^MFp5TnD:Z&EEb"qu.[$k;N,74k;er:T#t"e9
%4.@us9V\\UA[sr.c?R(TiFSp,P0i!d2:^XhkICE(7s<q0p0='KIoG7pW:.mL_]Rcc+#P^pn`9H$O+[GWpV2O\N]X9),cBRB<7hn)
%ek=IKRh.#$U<N:8T%T7iEEp"[i_hQN:!P>Q,9d=:&a"'kpA^^:bPre!1PmsOYlu"';4JCsUs!(NV99%)AKkSWQP4.\;,24l<i9S>
%>C\3D2U6XQ1"kg11eE&>7?0s5NKP?V8."VqE._j+fj5:-BPEW99UueIG.fF]7(^o-mNqKMaC+@jHC>[Y=6.%WV]c&>M[Sen-2QnI
%6;O_>P$4UZ9O;"bj%MreG)7MgPK3Hgn40`kV=W:p`Xj@cZaf0RQO;7irfO#pL70&r9h<_qm\MN[:_jYAE23r==k%LTs"$p%>nfu;
%Bm%j1iMbAIg_@HC'Z(1iU?WWIBJF^c-KY_V!a:Eph<0e.YKHr]Xm%Ml0Y81pd_aYLW18aqeWjE<E?>'<g-K6)o*I2]7uXS6]PM#"
%0eQV7-iMD^j>*1oB4f3ajM-q#N3NF3RYY>8,UO.gQr1@_dS#IrMj;hgGfLMV0)nJ:Hq^?9Lq;_P@i^7r$PE[8/jAm!b;pg[]PS75
%24-MJ/QbC$&n>ro)(CF62T$%So6=^gi#bG`7Y'iWE<M(SA8C@a9,'8h4X\Y2-3\'F*J;FY\mM6>_$l="^t1RuH;<71%:>T(AURY,
%E""HDqDou"Su7+,?BH-2=P?ECe,`&2)e6bJW@PcE0N-ZKS/=`DPXokXJ4J_(=6-0f&<)W<=qk?U8M?f&&<%r8=;i,5LqK(oU_Kmb
%-Qp-c,q3MTgp7SE"L'4Eer*+W!LW";9*eOK`oenj8Co#N6p-*N-ushX-;7["OXA!^M:ho'XGV:;6DlIm.<e2Se#'q5k"\%b2D=*Y
%#2*=P417(im22uplnHSFA%@mH\(DEMZ,Mrn2k_PD8\3gn6h4t5@42GA+JDLGW;t?ems1)9Z;WK$3mJma,UAXCQM*-^EKL_Zp+2o.
%inX\=[lGIn3&P`d4TDi8?eWT[+QYj\hp^0)=sd8q%6?#$?`;#^aiQ*<c*?1PWfaWfR\Vd%<7FB1CE5E:#h7pLb[<e"'5&2KZRE>a
%mgQ$+Q6j)3Y`u"=9sBQfjFG3kekul#,mb''8K;+U_46B/FHY\&d(nl!&d=1^/>Fq^N!-D=Xs\d?(D8dd\Ual`d%.Hh_RW5oK&J''
%Qb=fi"`'!P`rK`t\AWKi7"V.uNHkgd)KhW\[8SWRUG_%N,uMNl$'Z5m+i^-B,4<fiATXL`p6DF:g&\sl3,c0u"K#$8>+leBg([Wi
%U@tsu&-,pIKlF2DKJdoGl2K)^U[NQ%VJdLe4$r!9EL)/aeJil*n*9)8IlP#>Um`Y>>')$d'bSQoZL/SGdq,gP0BbO\=UoJ8kDeV^
%)-/a&Pq(OlmZ)pJFU3.nfXT#faT$cm^UcJJ4%RC9iPUs,"l59aLqKAC6k;Q.P*c`!AE4;+\g9)1&Hn+L'$XkGYXE&[3&6!r#+RPD
%(H4r1+Ji"FE['FWW^MZOOO0l:`$nRc-_O@fZ?!bTKu@Z98m#b)'4R.?$77Oq/CQGMZUKGA-0cB.8.Z1Z+Iu/hcjA_%UD]1eU&9!^
%HVfFl>\0n`)bX"ojb\LdDu\dQ0d34u6S'TdW2%c$!7UV=P7!b@Zc)83UO-OG">HbTdZ3`i6CZ-!$[a-V3:<c`Ai\h*6t+$2"I6i,
%k%NBc[WhgB*!JA6IH2$T/bIXONDu+9#*or2V)c%igpH"A6C56*e"P#m)snCQYBQ#P1auk+GPY[#')O+CAI@)HGh_GLb?^lI$R/"[
%&uFQ>6OXV5Sj3KAK1V238Ha[t59eY]YlH_D3)2s/DY_EdpCre?rdHS]W#M(%2eYpX&/iE'3GIZW@rrce?,Vm7f$kGA2j:qS23i'*
%l/%IG')d8!I%m/E6d"%c_fG)!*U<=t!Q"Epg<)"^kth:$Guai%O;V+`rV3nsIcXU]Vle!0s8'J(IP@__4'+QCifb?31H&s5,tk.K
%kGDTKTDHT,g-blrgRCd(-E74EPXNYr?cp0-o%^I&RXkRggkjJl$\r,)BR`E=:MKE&RKA$b;O&W6"fEVI#R@5]Bu1:I/obbOZP(q7
%;%NlJOap:?B4FST9[lpQ'8^HRhn^#NKUb5`78b;76kX8DKL1:S>8*iJ$Ai.eJNRb*TpaCsb%&9B9S3cc0dL#DJt"%0m>-GfLn@UQ
%,T@E+-HXRG,>L#801cAS$V='Dq$n.o8/@k>kb:p7"r<`s%%^1',n2,4-Hs;:]cCVc/0g9W9;42F2dMb0L'.\"-6`h]4BtZ!e8qA5
%=?7F//-U"uqOiXU]pT&P-T8h\_(1?#oHIIafd!BN$/os`6RhOXYYJMBd--jc'sp&ubY26(:5E5oA4*GTjGdkDE\o?bOU'o3nJugG
%2jnh"=5?2_+Tago=Q%N@WGklh?2D?Q-bJ([3V!ZMd6^kXfoA+h`MP3e5=dBWNc_oTZoaj]mP#`%d)[JW$)`t]9SkZ]BPJeg-SYa0
%a0SI4`'N7$i/''fGq=M-6%V0iL=!_$C%>@ZM^&:;E*6R#/=?0C[,Ms:/'2oj"X;48[\/&rdC.Q.CgO20#VgbeT9_mGa?oQV8LV]c
%fR^"326DkNrl86oieh;aj88SS57]jCC:%t;E*%Ai/3g*O(SY:N5IRSC,M_k+f=d1B:XsVG.oG!&Bd:c.e1aak"L6NP)P'#U52&"V
%WqK/u-1,</KdU1c_$jVEWX3>Qj+r.D8^kb*Aon+g"&qLr*lL%ROdQQnU)&CIi%6^:E,"PH>J+Mo)(tuk`:QF:edY:+4=Cm#,9*[l
%SQ6GJ)-g'QO19it?&d@\eKW*sLMk01M"OKt?^TH%NNaZrpTBmlF=@Z]6BG!+=>T6[P(&_ZOHL$:l-/^r%[6u<4#@#IJ3X@TPR3aP
%6!VZV@($`FJg][Y7#6Z*_M$lU@YChC-YB;X39lF+,8!LX;[o_AC=dI$WIm_V+GI&A^l4LhL=L"t"<"-[lrT<g-`Esp5WC/4#)GjM
%94Ne<0Roo2\-RqZH-QVt"T+^q9!i9&$D.gj+jq]_-jK,a&bet@NlPO0,QT>>Q>]m*-,.FrcQ`-^!aue<TtqOJ`)D]dp^F<n5ph9L
%K?aTW`e-p"@4&Qo0Qtfn+F<(eK:!u$hAF]0>f+hjYA_mciJNJG304l=+!"fOU,^qQ;Q&!#OVqC?HpASgXWC'u==6JfUI`=tJ;Zjr
%P+crf`)nDV00]EC=N'B$[6(TQ&A3^]+uT]><)#m@jYd.7U*E)N"V'0N7Y*rs+@m</GE&hh^qasjEP\^ff.(I2,gu;NE2@7FNJ3mW
%G.?W;m:]m9-H!$/i@PaZ>Y-t1(^-C0>'N\1/n'??&m,YX<kL#laCE;oL:Jt^SEMUTT3)iG7W'nci5*[4o9P7t\r1Lkk7!YJP?UQd
%6rG/43F!ObV_hVhK9d95-Q*^CkP*EP`oJ[[O@i6j/G:e<9f`@_THkgOoJI+t@:4pJ7,?MJi(.[^IaEtLP`h3S1^Yuq"<*jg^EZq7
%fO@D3L8Mn4WPHqUoZX4p5B(?$4HX*nhCKpHV&")6%>TaU4AA-L<hH<H/J4,;klg`AAe,JWa"1]q&U)nC[NA["=^5.($o/AXV)&u$
%B:+G$+_!qZ(^3H/R*OC$7@MT&AZ^Mo]EjaiY`NlkLQ\ftF!,'L"QhZk#RkJ#\/=?U,mFpkl25"h:@+Ac"-$L.N>WG'@[^%`P_2.7
%Y_m)BX[SW@l#,d=a/C2L1.h'sBqUMIMnrMs4Js?cN1(WlCaNVhKeSte__>p7EFRY(,V9:`)%i)HR!G5NE^Z^+CN*[57)H]k+H]Q"
%#V7GjhlK!fi,q"&4UhD&2c0?A_fMQI&5>]4auW/;Cu`-*:q0:5hhP&<KTQ`X)nTU]/^9#A,sMPEKZ/.\s!CX#1Im\c=e-ZUr><sP
%$nin/IjMb*6aXksUWcE@([JRil8TuPff1O6Q@uC@Qt4';Tcp^4@Z?XqNDh"c`7/:u295dKd&:j_%5>6_?NY?iZnqj:>jZ:%;%T"5
%e$o`;&Q;t)$4h5R-p@fKI+Uo;K&Q$Xd-n7+%SX>1+X`2%QB2MC8D+d3)Z'/<=!g\]mKB(1_)j'2-H6pVZ(5!-(+9+GL3F"a[0KI7
%Xo$@d52rOe[>FPj7%)S'!YRSh73g'Fq''lX&fKH;:6ZY\($B1rK$rA<]mosn?-G!'d(1DN?P8c;7P7V\?Hhjc@WgWEU#Qbi:In&@
%Z4%rFQ*L'(D&g;(O^s_i.SrJj.ptUflHBbLN0-$TB'a.I)55+[j*T+)-t&%tYNZ)i43ZPYi<1TdpnXhIhU7rRR1>GSbL,gD`$U)9
%:q[aNbf+DKaS<;u5S2cbk-^+lnVd0/j6]kE=^\A+)t0..ZaBlH@KJR=@a[VO,&aXEcmqg)4<lU<neT[e5hIQ2#i;f*RRdHn(`^<u
%F(^5lak._1i9_178^r_$;EPoD^tDTfq)PA81#HfUn$&@1On_q=`$2>(#1%C-b(oa$b>N/8l;S(S15P0L>oo1*+QYm]O_7[GdX=oq
%AAheQ;\Xhg3Lc_OI-eh(F9GTrHRFM=I.e_nVgR(ZpqgF^,GB`[_oq*L-$[c:39O@!d!n+/,`g*r'&b@n^kK3TK'eMh9mK%gKLIHf
%2EUs5\a'iG&5+VQJEV5d87ZB!h]g-L%PjEXgap\o0P,4H,gD!03h-TE/`&R_#I@m%aEecgC,BY">^V\/-?E'o,e7D'S&966;ul4&
%LgWc"YKQ0hJ4QIb,6F25Q_idk6KFM&csK$DE*.+/5bB/f@(mi+7Bsfn.;b5%NXW*lkql%[KHl1P1J,[+b4*>4%H/*V<#M3-+uujo
%,oV(da5&pWRFlH_a$)V&Z`T=V%mV#&/pQ._QSKbN.3'u('[g]*1GbWB$Nl6TGU`Va;N5!=3em,NTtc]1+e!8,T+_uiN(E;3N9KsJ
%T/%`+G*b8$OsEX[R^?ISOe!9._CuTY.r5]AU+>dR%g8[d@&$98-9fY\NO4!mMKFq'YSFN:GTDSIpA#A-%auk)L`53`H/cqiDX"T]
%$Pa7k+V@"Ect18O0e^T\Oi6K`7(JN-&psmX-We>$(lodF/1,U(-'h:]5gIY,R5bqep]@Q,C(Ce_U9kPZ*p`lu#X`-FCc6m9![An`
%c%Z\S9CNi.J.rL%b!YT;6:@OND?CL,\"!c5PJrTr-OceR,%OQ(")b(s3XR=K3UuqOB*R.X*3ot.'DPlF;e.1#'g7Zh'knt33lh+P
%D)?g=S@DsaLQNdGWua\l<A;3*\s/Im>)5=d'X.d;!-jR$M1H[/]U@+ij<p>G^A_[N$8&Qr_gkpC:-ftT4*-YU(+)GX`U&RiG(k0e
%J7[JoTDaVZ`B7)G*P<JH&EN18`NDWt5[_`k?"q3N,o7"Q`G:CK#S6V2k:*:qk;DD"l:de.>N;7GMKJFo]S+1:3._S]3X_'C]&4jF
%Y\?nWWBtM3S+\&EPZ6Z'N5iuuJOl@5/2fPp9Z8+XB+.K'/WMHn-19rj9eBVBfZB&K"QE$@+;uNOFL]_$$GG,UdZ>e88eB)e<Pc:u
%"h0j$9#-=#!i)8_=!L)a**[(snW"lGNs&dbi6c@L#_Jp@)bLed3tLc^(/A"XMr@;00cdi26+[.LVMK1oM29#r2'&'cC`/fjUOiYU
%R'NGSSiY>"+'U:@RYg+*Ui9,FS"#+e*YFQLFA</cK2RhZ+o#YP;TK:"'$6&AoT8XVq-)aZdtkk,7%3='>]s).L9ZR3'fVeW96iSf
%PD7*j*f.*af:amR%a7<d(3Vlp)$C2_&Ngfc6p;ISVEdMo&VuZ?"a%Y*9I88BfMWpj;n,.V?LVXL.KWX"Kf9=1N$OZsOZjTQ$HWAm
%01V7b+'8U0`@lpeVc&=&0WcTLgKq-O/kL=K1)A&P)O!_9[@"RNmU8-.J!!N]M0O_fNps!!^la0F=ZT*Q',)?"G.)Z/'J>V!>d"cg
%NTQE:7rl6]Zi)h1+G5KB,h]s*q\Y1T;*BeK'(9=TU6"[Impj8$kl:R+N$u7`EQ#/bf>0G/Uo^s+)HhNu!1tGqL]ff_AhFTD(d`H%
%kbh0ERDeE/Gc]%DAas_rAKs@2#p-5L8qb>tQ<bN1#omp[:)/K&Kn03.\J.l'il0ipn)8(?#,]oIEM6)8'D@m?9HRGG36HLh(4qR1
%Bc'\p!HJ?.%mc;pC#N(ra;mO6\8;9qn(=!\gU,<4&"Z'@FU-K=nk.[:9XU7/<J44%9ah\U!?V.`GXTZsS'=i%N::=ti"_?j;ODjb
%oLc%e%kfZZG:?'?$sSAI(jLYjKa+TG>@AfT/ctje@=+^E0%09`NFkU'oKnE/89r<3Zr#,lVnp,'`YQIg##6=Do*"LICq*n3LR4M4
%$5I?A*X[698\X17>XBr^@9YFb/qN9/"s#X@]M.E`e@,UM6Dn@-MVA,-OVA.S6[jel7_jF>Hp!cPX,fd'6,KpIL@m2X0@Q*#'qR9<
%?Et:5+^iYgrbo&P2A4nU?F!7pee_7E]>LS(B0+4SL+/8,N!0-A@h)h&)BM"_+.I^C`2Ym=JtR&@<KBM3A%X&W_\5\10d;#T4*,D7
%5lSO&BI*6r#(B,hotZ`+E<TjH=p`C"c:3?F77?$Q8-cnf_^(&1oU8+tW!Go6DZhYb:%[d=Be72jJHS5.M[iYkgEN?kJn>2Ad<I6I
%IVU+q[\+QZhS^(>.Ia0DQ[&i9Ukk#F);O-Xpbi^9cM@G"YMP&MWtaeR)14gp'?>f,_j??K19hRiQDR5M2W`lkC*Yhrd8Z&k(%?E\
%HNl2*7265.;"t=4TWaH_=bR_NDM&.X@(JC8ZMe)711eMh^)N#`K*__a.RC\3_3[E8H7I@QqDIm1]VtO$"j'kiL"-QM0^eCPYb0pJ
%QbcQ&f('[L2f1ZkfDjSkQOnafH2\2H0#sBK4i')W2fY23?QQI:`Y+dkn.NYWcLT#r?1R+@MP[Dp>rn#=*\Chc6B$Lf];"e1WaA59
%OuRFYpVgE-UmsfVVB<+"aIGfR"\4p;^VmJL\q;0M/27D"eQ>6A[fI*$Wjte-i0"Fc=)ine2&-(>K_+Z6;ZG$FV+.>Fs2J3<rj1fu
%:+Dli5MprrXso%7b#;B$fO[nQfOe?_<!.*)X:9-%Tmm`f^PUe(`9ojDf]@?$JlBU;+0gI32299^Hq2W;EQj7q/kX(K9!TGn^M$nO
%bWg[_$AR4,X!h5E3/jM"2;t!cW=s<kRXjQqIP\.,cn=kfL'(Gf!ioE:#%6UrT%.(@-.Fs^oG[@SHlm<V)@X\SFt7(sYjZPl5o(b7
%Sp2Bj=!aT6`*WQ@JZofBLXp8J<Nr+RTU1O=V7i&(r]N$_@Gl]d*Q$CW2U2mQGijnl1!oI!"Y;iqr'6Sde(>s7L*V#/XmZo#3oEA&
%JKcor.r9V@-)e+<,r@4ESk[`mE<%h)4>4=>RAk&7*(pUlXc9srJ*136UV<W."E=XP;I8[d$IeN9XJZ<TGH)!'k;hb,Z6#\SrS-o7
%\)ldkb>3iF_f[QnK#3`3p;f"R^e\AQG+TUb.qYSnNNe6^TOl%u])P@!+'<Z[`:@D(!F*).Ou;+\.7U8(4;P0!8)ig5C*dRHhN=@G
%EXN#!AhIiF8%9Y<Gugi='k!;>%,a/&^RV#MJT/k%[[Tlj3O1d\2k7#ZX+]lkAl4/p1WMkK,oH.W)"=KM;)!W_"s=cpA+Zudc_uB;
%M%4j2/4jM\s(3-uZ])Y%`a?qF&G8i!h!d/5AX5f=f6-85XKd^@LGM\sFf%>$O(B32Uc=Ls-oY$,NQV_lbSEU^=FlE?V!;M4,@U/g
%qaZO$dT.8&&`(YAk63sm@Zq(QEQ!G$/Jb#f`/@'2^`.J@C5OIH\h,+>:Qg=G01?M01#0&F1P=Z$!/DO][+Q:YfAf9iDuGmSWj``$
%eANPILtH1_7;st0MF[g+_LqijqH76)`%4FVB$?-Ri_74G"<=[I_oj=Z=i<&bS4gs<8Eq<k(V.J)-Z_]H4liC#,sbL),ge[ng!2nZ
%m(Hn>5pFF1a-0(-7#DA-aYa$m6#[.#1([ucLjM&+#3d%s'mS:cU=18)$9M<#d#"Fg:JO@^D\_tPLkrN3^;r90`$H,R8cC]$V+=o9
%Hlkq);QJK0M#!mHB9Sk"N.!4((b%@$"_Td!JKi;Oc=F7aY=)3L<IL'7E9\^*dM1^mm9Z6tlPeO(XrRMrdZ\AWBtKP\qBNd.EJoXM
%,p"]`M3#PE-3-84@nQ3&3WMW)N<l%q@4WTW*2gC[[#R9P6JLaiq9rZH7@Q>+&1';lE''5QQL)I86_Zc(,_0>)-20t3q3nNt1rIuc
%9=01Ha'FkJ$BL=/6gbJtQ2!o]NXh0k!#'FJUjqr3&rE9DH03E5ip,`:r]WZa%`qNH$4hK(pP41o$99/tJ3q_(+JVK1r[ST$Og>]:
%>aSGQ+IpLdP<mUsS*0q9E8MoPB1Ok./Kj9I>]TUG1RP?^6<rb%+P;rT9kkrDOOja=:3sj?jKr<UJ%/_+$-OM%YdOhm:PD9SF"GjO
%BA&h]/47MA-iU-%/`:0>1k\DOIs?f1a;ENn(hBFN5*e#$'m_;TUr+CIBWg*+r5t[aKM2D4;sI#u;ffK#9VM1pa/=a:@j7U<,Sg'D
%.JtoW>bMGoW"b&-:+UUTj2C,0cQlR_BI!K#5t[G*On:V$K%N:E:U3qd3fs2i;[@G$7g:P8NWrbnLEQ7Y'%nR64B'hZ-P(-!"Uo2^
%=Fi;,\W\&8J7E+RiFebk2D&Gs7;b$e"nT:G&GRHKg(9!n5]Co6O#^I1(SsAd.m=e<3Kd(W+4GC$Gp$`*/N6!s&_W9cp-_>-fo.^0
%&Fh>/$lJ>oG6N7pD(an.BUk&bP;;,^`qDX8n%t!$1!_\I%`&Kta]luG5Ti!4:GpSIFBS\mIa-F2$cs\Gg^lcF&nK3-eKDm:.3p3s
%(^sZ8&&AGV&l[.B&['?ICH7(WpS3D2Ri3grr#^"*_#c(f7YO+W`=1]tj\!"+<N$4^.u8+PDrN$;EmC.2aR%rmJp#p@*?M;.5hLX#
%1$q:W&Vu>_Hn?"gE`nXi$eu87.]MBg@)R*6>hB?CO0h2D-JL:3:@=WC)P6YY[i%kLZLDqY3(kB@]L?q%/?IA^!ntF9T(+hbOTGi'
%R?<IVA)CIC?,IqY,N(E<ZmEd#apFVYLHQA,\=2V%>&FJX9qJ1,aNgP[e+X8Y4EIDBf:e:eAW>[M/C(.\lW3j8Ek#+<#Rl$6X#G9p
%dnSg0Sjs(%`r<eM)hDc-OB2eXZ/R%[2\<5_4`jtZP`VQm`Cl`+dl]3.d_=^/'CXK4-q)7?R)B;"i*\$p!6u/tjWr/l$=D.KjIn:?
%^+SVb.ho-T,hDVE,9b$8OZH3(A0XKV14_`eS;[ZoEStG75YNXQCC=c&FN>uM(FMj8rCi>fl=`uq:>!_\,@(LnmYD(%A%-jR[-gAC
%5kop5INlFa!+cX8_C<?=l#hqqi>bH5TC]=sEjcB(IBc>CQ>t(0!bip!rr\1nFt+[G,#E5JR1.bbEaQnEe)#\0170<&!0^ePJL(@i
%i6&5GUSg0.ZAl*=[r<T.8ql'k?][+MY@(f'-(&*ESj!lD-S0k_.8JX8$8i9fD"R/9KsV@.B?,a.J)Mu(aNVM6LV\k$]s]_NYlG"G
%X0i#XLqM$1/X5YZF^0_Tb[ZZ-c&>&^oG&o3(BBX9js1M#1PQ0o;gec1%*glN;D4S_1_$-poNpr1k#:L/EaJ:MJe8El@)J-jgqXN1
%/hkS[JHMY=*\cZ?g==O(9uA@u]pIbO2%P6\G,c6CFc.@jo#;K6E_0$CU+hU8!AR/WF#7O[Y'qF,)FE-@]c7hnrVV=iM*#<_'"\dF
%apAl:Xal9q?q$O\>F4Y.Fu9_:XERsA/I4Wb6eGZSG3pe^Eh"pfbd.G13:)D26<*0"an&cl=bPZ"lK@Q3\`OL&UMTSjf?/W7A]C>D
%<D8KU.7R$."lh5o[3E#-]o`_n@Ih&[B1$^fG;a;HD"V(o$@/Q`NrV2.r2<$3AT35m6E5[rWj#GF;UL"<a93oDC,ZQpC\:q8.F+ib
%#G]XMLf+:*kK;35k@;fr)uDG0JTH?QE+N_<_N(LH12Wb%oNn+?"Aa+$8]5>=WBQoK5R;!u!*FjS3Fb`^-qrX/9qjW\)4()N'l"W'
%f]p*h(2R<IE!U14+OS<8I.gfq@u,UC@k.c$N!/bk;BR3DNo>A5]D?Z^AI)eHo9)#Ma<%P7*uS+D35c^m#&oNC*"3K6#_m>J9:14'
%a>el"&kh$-1lS`fHb!Ae6Hbop(tO_]Js.V2M25nW`VPs:jH/F;2HF:g"U<4^=$I3Q%A@V1?EP*OUYKoe'IE:^3fcC5jeR2b\HqG[
%"I:;s7spbMR#PC^?L=U5Pc`fcEM4pRi`Fp#4;$p:;;!'-',XVpY]Z%99We@/nJ/:,'Ht=F6Ppc5Qc#P-RlEPQ*1>D[E)DKDFFX])
%eMN)K'7q>F4sF>IcVY&14HXW;RYFYIH8!>#e7L,IY>C2jYDd0e!"0l6lD6BKQ=gLhnk09?Eoj7R9g]1*4]a%"<mm#@83BO5gg$O\
%8IZ%E8ST<4MnG9FVBWS2-?UWr$8i9dD"M$o=p<=laso`=om=dMciRg1$8>[$4eJ7-P$nun`A",OSP@ie>J4+V;j05<a[mqPVNPjg
%TU]<(Uf%e^6-.h,FII(89W-i#\#USU>.3oX4"aY[;Q3ij'BbSE/(c6B_'3r$+<.:CO("3bf1$bC/YH?)h$7/=0Xa(;_ZF/o_N<=s
%-.Q'NabtK.`?YbWk$nXT%:XR(nWHKg_PSDV]4i*nUNaJ((:Te!CiI3-A^gi?\X_^$LZ;T@9"E@`?uh'#G_<%PELQ7HZc$8#0Zn_)
%jX)2!Lu/E^Zd`'\25s?1PD:kDnPhU/7,7iS7A?]N,8k^ulTe*Y4E2AaD"M#9Q.=#D4Bpj9/s]LWM8;WLahk9N$;esC8aoErn`:2>
%(T:X<]%%E!UV)Gfd<B0($D_[(3Pb(G&%lic5)O/:#E7<8Y+OA)!DAA9)JSIoC2%FO9rf[&7rc08o#)dJ;[>V&E%/ogCe0s\jm`m^
%[#A[>WR_<;Vl/1V/+U?#OU<s_@;PUBN[g?b`B<"/fXHkJWL.2/?P9[P=QX'uXTBeZ(a_!d&4^;TDeWsT9g^<J]pE@>2&&JpMF;XS
%/!pu]$!8`c8BR5dH>=e"K&nPYS5D#igt017H)PE_AY]"B/k2R\C7`bc6;8VEK)hLaP&kIqUu*u>#AbYr882!32%-(WpK:Xpa9^1K
%@$V>%<ULJ?]tUG]nX+G4L1R>^)m1*CptAiA=9Vm:&[qP=W6n'#)&Bt0Gr7WU,@tdWTJ+oD__A?#,EnYINe/=RAS=/pL/9dS0*q_3
%W5_J?W7'6uYeNM]Q43pi10u_pKC/c`N76P,Lj&I_:t#uu7doHKOGhZS`NTH@(&@>T7Dc61%*OUWHf_=O7X@;F"Lq^iY'qF,)FE-@
%]f]T)V\VmJq(5eD&c&&1JajG>Z\hn!V'.BN=6Pj-@/jhn'p1G_'p=cmehho_h0Z\=<aUE'-&qSP#HQ'IA3,"lLP`_n]^Wpi*!GlA
%d6nW*n*9)+qnCH7KX0!P3A+QJl_Wh#pi57=4n2pRKuV2l^+'>'Jd5b6-l0b@F6QNM0ZllRQ#iQZYFl?S0VnHb]i6+83FDqA([#8X
%JBSShK\9bJX.P09[SaJZ0?9n\0a2Q*rI%@*EP:a@1B0`"[JoTnh:NhVZ1[M6G2:QQN\X\#NS_j"DcBsS_8NDM+O!ES#?!$*=R\<q
%MG1,?4b1M*Qt9_pm4&"nVC&?&%A@V2?ER?Ra]i;o`j9EIJNR-o*.!.G`DDq%F\d,h]QofNRHN(ZVHH+=`5nB`]C0dJ:hrp^4\kY,
%=5"g3j;=CWHD@%,kX>,bmYYq.k3L0/J_aW14Og`tZIsO!I$%#A$k`?d^BIH:Ni&fV3tPuU/a"tl<ep3g)Z,T+G@%:Wdf@C"f7'P?
%P5)0>_B%WpU<eWjd5%'q&&VZ?@9I+U`YgN4dK16=P1,EB>KR7_N(,N[3qpOLbK>FXmonElnY@:-0N!.XhZbZ1ZmK76K"/Z-,6Y>2
%;jd*s^r&l6-sOBObEYDH@f?D]gSf*)DAAHf;eEbd#%2]hHPlW7n<7Au-N\?mjf@&ieWt'2Xj5*uAT0QcM<4:ne5rl4i^1GDmg:`_
%Hkr*6eH+[Bn1]"gg""F'9nCaF-H\gHQ0$/)AnAoCWa\i*Fl`T;Il5"M)k[frSrrj5)ZMP@gg0m6BPGV(;_^ho;:bRrO&d_F8U5AU
%OI<h7,u6.G\P`Z?nnQ=O,#q_ZMi+$\5-_/\LRNro2L;R^`&,o;_2I\6U<>O,>?5F"-,;'(PR*6DE;1ns;ql++_H?9=>c^U,%:Zhe
%Q=md2)+q-s+u&+i=JBmjnQo"9M9b2!-'D\b=$I3Q%A@V1?BW`AXn]!Z`_*Z>c;LhT-=SK`$8qR7WIUT@,Oa).18d>."C$U7[Q6)9
%0W?%/3Xu8_@+.N)Vt^Z$-H1319+AX,+HsLd9/,j5j-D$-[Zo^`3lXYPQ!m+$U0F4_[Z<XW;NI6^>bhBSnXeg:^sC/N3jM'akDArI
%lY,!Ag$67+/of'GEp31DJ42_8E$B`QM&'E1Qq/\=']N4j[tAhXY89'URnZ6u)nhT9*_on5%^=uc5P<)o0"6\QBu1o7a<2k`fT73"
%#Y8RQ+IfD@.GV4gYgmqX.W7+R"F-s:UIo+:1Tg3X&FgDY0WCiVQkPmbl@[c'=_PtY_FE/=TO@(#Ng<^^nZbrP146kE$-t0sPEhs!
%!;RugR#6;_;Q+.ITi5'gn&bhqCNU$;0\'7/N=/1Vl)4'u'IDI4lO%)3$L@EieURM$`&FXO1k`0^HT<]/PlQ'InGUdTH,k;_do[rU
%RT6mVc)dPAe=GP)-iW3OfJJPmd<e<2nBseO[X0YkE703ol]F/'+bQT'jlV^0;ICj!YM#ntM[uMY+dDZF.gKCNZa#OYAgV/'/M[&%
%bQX@NAg3As1r1HRE\7+j(_c7ArOgrCJ?n!X\QWqj(HF$:5qjtD^jj4Z9C)c,0F<s'\aa/K?r<rP;?AN@?2Zh615)p[H+@0NZ5Dhl
%F!O%Y_6L7k9>m)%0Sq+6PG%N$nQI>W.aE-BAo9O:UMTR/=Y;>b`?T!p"M\1o2_(>$&`_de*U=WBG>j`!W<7^>4=caKe22]\d<A$b
%Z*k?@?mkN.:#rC5raLk=bXP48_K9Q9a/)6i:Q!Xp2PHukPc`e86`"4(;#J:u8g70e(St>gf^]'dKlj)q3\q:+Td2rIB\Qu2CcYb.
%&N76RV(HU=B4GlH?[>8[NcPqf$5JnTkR5;(-5rCn94,8]"%u/5(<0D4Pu5Ne$cdGUbWefh%#T(RC66#-J4Zu,g91m8jm".[%Qo?>
%A_(Z8_V"(bgq[#Ha<$R`26g+e'6(f8Cq)P5T-KH959L;%AO%W2FSu[R>)!SHqCWQlNZ)ZJkCTU[Kh<AfN/PNV]aQb+`U>\3g&hbi
%OjOp5/qtB@6R\FpQ_SS)TS;q4#BRtUC.*^J0)]i"]0Mm(9&r*F0V2=O&?^>Oj^9hQA7ebt<TX^/k/o&^Fp%n@:+U/\&t]=/DZ,c:
%l?=l9'I^Y_Dh,.@H\EZ>OiX]($WD;*./8Z,@CB?>fQ%7ceXJ1O7=;.WJ((q\l)oIVC0EpF&Ij<J/"T7!@2(G[5X2Cqo<),_;;2p>
%_99(,_pUZpG3iT'`t`@3d/l1iXkq7Q0Gr'p_JcZ.CW/*>Z+3*:r2`=g/Fd8eM7WeZFEK/<Ko\&a0@Vb-YLR^9""eL7*c2r)]COhT
%1i]9uAajY2iAZKRdc^kGHRS+A@>JXOe^)uE_^HJ;QY50j5=08skO8.eJVsg@fGVB@hI"Z#9`QM#J/IFucIUOQNO%)]\R%`g/9tiP
%Vs/Q4AbLugY402=R%IRI3/973;XFdpZs52XGmrt4`VZBiYgIYD1O-5,a=D0r?boSX.4*Q7)!;/t8H^Bs:13q/.Fc9JqcE]7dh'Z&
%n!2EqXgcknOae?9/\KT&@5To"?t-hON9t;/M;o(2R<J\uBGn\>ke(s"o??HNa14db6SGjS!#AKsLTSMoJ/^4U=:H__Lc$]4k.+f!
%]qs5fX!;HQ?'6f94irsZZ72HM@&^<M@#8Kk'piPW??*DrasQ3B9aJ09+`-mY\VU1_b#b9m]e![3H'+eG_F+TTJ3[+hZ'u<B1+skl
%AF$CI*GQJ/=RWkBY&'6a,3Ia;PJIMh'<iC(!-?`/LtfZqS*";2fJfpBrT?FfMP\5kKV+F$TTrHS8`XlWkZD89+k`u'(,o%]*dQ#/
%ZY:@iZh)<hO>c/1GZJS"7a*Xi/sK%fL*SPgg=r'u^KiJ_FDK6fbtnk.otLC':bnRL/L79IR!M[4ia[%Qi^_cV^[bTAPef.L4;+13
%i*1r8c+]re#\C&\IumNNRk9gA,&pJHd0KSBiB%5[;OSRoL,k=u[G78TAbt%6L?3/4lY7>)g$$+SYM;45VaX`WR4I5e;-F/37<><Y
%))0)<)hKpB_+7s+N&k.N0t'+rQRbqf%0l0l*;(%_`2s>Rd=g.`K"32eYS/Wh#apj.g&Xk>aEP$#@;L$l%Z=&2&;*k2;0mWoF2emu
%PPu$-'fAE(6#8DPM.,BO!*JLbdEse(ZI+"Z/dNFZi-8'W(XPk8=&B)Q@Y\EEjgf:Z>h*d27V?8G&\JKqolGE7W\t<]XES!BX\9tj
%G^GRH^n7`2oPT3Th9U+e:k*K[QuIm@B"r%WRKC>86hjhjqa$nk)OFjO?T;Oa?bmB?aC$VIKh-UE"+d_jfG.<:?!s\jL7<oo[X0[:
%0SQR%Q-G:tj7a)sU6u7%64aj9N'3-uq&.2l@DFk/jK<qQC)TFlke5ci6=gBCEVY?Hl?k!N,2g=FB.eDPCG+#/-mOu;IW(1S]S'Lt
%&[qP=cj+]V9Yoc&573>_M:Ie@'`\8uk?>YH6I2mF-#4cVH&HZDdl,?Ln)_&=\ju2o=.8A(R/Qq#/8nOu2Ndc:!gY/7@]p^TYla8F
%@]O&\@9uW_qY$\)n?ZU,'#Kr??KU.%=DDD\_%iNFi`n)U0^C^A!3.Y$o8'3bm&kdYC>)/1m(>G`M)UD<iC'L#[)aVXM'3dF[T`_Y
%/kX>hKqDJ,4_ITSH;5Jo)+*!@]<['oPMsC;[A9X<s%.<P/X+/Zr"[,>7!Bst95YH@`f?(6+bYihb8l7E<6RiP32n5JL\ENC3%HhL
%"(8*Q^(dM9WurL#=\+A=Y'qC))+*!>]5k'K7/W8VnZD%+Qp+,Ra#3[CA#m86Jk/KfTe*'PUI#k.Op>]"f5)?lg$$*hQ^0,`f$)YB
%JX6`QY^4]<Q/"nle'_'ks"<`3W8<k/K*30rVB%'(]pC*Q/L&EeN:dE>eYbY:F0[)EPa30to@5t6\um+-fJCH2b7MO&fB%:=[0@Ak
%>T$TKYUt]'`+DWW`&X)k>YGm:`)o1.au;@cL+kMH08E!>R:Nn5=m9mm6rH+;_&=GZ6s<HR@1nfbe-=&*O^H3PXcB8%P`=Pu\<&Hn
%AM8;h"SQcl!)(BlK+msUjML6.2eCkZAB\HY1Vn14\<W"pcmk!Vd;_/l4@$/MELM_YZgY_&M6`]iTomqo;@!7JreH,2++U=h=(ft^
%`^\kIW1:Njnp$SopD#6^0+8V?8'Y2s>I"V]&g)u%F#nP'lY%,%fBBb#VSZG@CN&3?W(m_DGWqL/U-<,s'E8i`f_EChe0a8][[W"J
%2ENQ<;Qjl&16P2(aLDq28N2e^b#UQ(+c2hp'DNb5f9AffR^Q)%HEW8Xb9R$'I;snZ=gD>\2uutTpcu6>`YfLt0f2)*WhX86AZbEa
%ZDZfR;^%h>I0H[cLD$eF'+$s'OJF.PEPa611.a8)=?>A"B^/:)Bc(EVG<[^?$Y/'ld+?46392Gs[dG@%;cE`"@lTS0'MiQcQYsbm
%g8c`3-u2p:*#T78"'A768AmsnWeMI.*!MZWoM22uA`CZ]kSD-F:2,r<Dq3'G4kbk^X6`UdiBNXLQC,Ql]LnB-bVrK&nL@&+>>k38
%0+fGO?G@I"Qa2.cNcScF\Wt%^Mcl(?\Cbk51s/rtbh;BKh_t'm@q]nMKM'kc*%;C<2iYbd8etPT8UQbCGio']KstfACk+P%#/dP"
%,$05!hmPC<.P`(hM4_pq*;Cfn'*<3@3i:,h<:glliRbH$A.u*Tb:lZ]dF#<'A\E;;coCi&U_1GN*&OZU<"d47V[]"K43j`9%oVGp
%Rki-r$#B0>&dt5fo"lSQZEIZm##WXu"c#IE;br(b(Co*mY0(n]EC@X?6&^f;97d]M9dECak0R1K-:t]IQ?5qP=*cM&Q:2k52G+06
%F\1h2)+*!>]9I.>F[s;UQtc4V\1#2(@Gul&$O&pRGUagr,n.,/$c=P`#TJ2Y4%SGNB#aG)bd/J235hDLYUl4;FADsI,qD::;!Pej
%e=/am3nnK)_V".c>cV*3oKe1g`(+:2oX89T9At]%1G^r`+:/BI$D6kq\Is=B`3,spN3&e^3j2YJ8-(-:lQ7_m.AGh<m+RstRKH)g
%<acn&;)&1KVQST/KX0!P3Nh"=p%^8t[li'6?ikLV()9:6#&CBG8?rY'nTM8J@r-6n%a,uCK"%0pcBcAjbDY]L)csChGo?i[EoFIH
%'l)Glg$68H%s[u9K9/Vr`kI&D*KS&7"p>dJ$7dfREC+O%87gjmi8>Df)+N9B]5m&o>].'9ddAX8pp8&F[g[9hP@NYYNW#91HGg6@
%$f9PnJ?dsR\Pf\YUuQd^4q"KWac;WSC1\[*MF-Q;_-uYaN?Pi=`'Sl'4.Ct$2L7$s"c#jNX-ajpn]piNNr0!H+8GpNpNhR*XQZp&
%j$BMUX.uNV*`[lQ^.UmZ;ND'Q36jk?=)\ck]h%-/!>q.tB98o)E3P)lYIV$bY'qC).?Wb8KT3]=i>L;q`42#+]",u/VT^oa9E$i(
%8T"[HS1(%Tmn1PL+d^(?]D?fbBc(Epo?o8q#r6n42()W?^D)>08j$bK/Ns=/3BrVeR'U]D9W]lLMiBA`eBtX_ZIO<4>-[7^M3\M;
%/!r/6SXUnU^tb%7:gh<($Bo"/%.ilhiMIc_Xkq6@q'\#rL!tGA'l8k"/1GcD,LKR)9>33t,Us,)_A7T*iMIc_NSZ2_(i0%%hIpA`
%Qn;QON@qHLXBWt7l<i<-I%X/XPcHa5:G:)J1k`0^Hb!Gu:[gE',kD_%T5&G<E#Q'-$_+FM7u>Qn$!?W6R4g5B$Zn;/U<F>&khX\n
%S#J[Y62A_tq[/W/gC0C0rX<F/6/iP&<RlLa!;<AIeZ[_%K,>PUQb/V86)6"tEhZ>aOdG;XZ8250B?tMuF+u-</WaOCDk5A<6lf">
%.-mFjUOoR#\HrimjWDMKljmq[cg;/4H/UNnY=Llo,pG5\B>\$R4Oc3@ZI+$0LP=Fg'2AVq4[CVM0&kn(a^Z=,ErU(b(_]f_]OPAL
%7d>.R%A@V2?K",E,/g(*\A>Z^NF@\)Hgt_/mnMe](3tbca's3KX^Z)?=mfUN8)lp-Zkl=8-8e'1EQk\=3!&$Q#adY0=<u8<Fnl9V
%&&G+dPc`fch93LL%[Q#KJ-DEXnH]>W(Q?Tb^TkR"^(Zj3r7o<K5qLYFN3^iX8[0K##La!#(AbasIJ*p@=7FUZ;4/+V;\p1aZIn'C
%4Ooh>Y,3A,NSZ2G;PSQ$alC/!Lf1U3_<aZ&Qo1HL7Uc?D=HZ'%!CXI7QTLYE;7:d(:V0Ia9Up9H2,u[^Y0_]6oj6:S19\f1)96*X
%s4Ee_o@SiA"e,]M[e_UX$i\;tCaq9<SWZ/7eL&ChT57JcEc7/+_ubIW`...uT,'061k`0kFa4K2#[YXu;^Br^.l\.8%sBmkR,fD7
%gLsM?(][SN5-5DqK3eF<e5YF#l6mUbQhM'K8Uu]hZG(p-Ot"LGOPuaiVa^$CC*a)-&]4t!+s2+NC`5XnlFeBU8JqU]j<47@lDgf$
%M<F;3GJWIAeI:(=PPQC1/%JDFdo\3+5fle@mG?%XN`WRBT31,jD(aD\$jMVufgYc$^bAM9%9SpBJ!ms*#3nXRC!&'(6'SM.bO^G;
%KTZ+8]##P8bJ%aAY&OFo_rN+q@Ib6@_`1Ql$I$O#Kq!fo2L:^0+^QaP`>fD>L#q<nUl.hO&u%-9B:;VY<uqoOemLdp!9^CTZm)r,
%=HnkS#+4!IYf'%JgR,%4#32/`RtabJil+%gCIf#.KfQ'4=^GG<VKk3HeNC]2W3^1LAP7LBnZRq69HX;'-E0JPl#?hW(ADbB0QFt0
%?jLO\dice65c>33C\X@qIE^^aR`gkp]VAJk3l:<s>.2hdIGE#Y@.il!I1K)$p9Ql=F8p8k8f3=+#?,tl2[uHsj^'H3G'/G?2[<!A
%n.I9+IeRZo=uNkXVBM0UF7S7_U%VI:%th>aYf@tK*!PI2>ntq<65\-mJ2/cdc1a;<ODU@;^#_%)=^D+:Cu?rpn_HKpC1l!<b*M#9
%-VeDeFR5?%T+B@h0U?60aoek[k+g5!+dDAAOts1@U:\,EB4V9B:)h?[1q+Og4KOs9Zb'cS@k5`oO&0a_!W*/q>Z6Zu2e#r5Z/!CL
%`u,$_bWD;/LjoS8/,XW72:X5Xr=YW"_$Y7d%;Uha6^ia+ep@'<^7AfUa'7:hpfa[.<#cmK)-m87*u5?RmVEe.fhQPJ$#N%'m$D,C
%TgiDQPG3jrba,JFQH@FL!K:k-eN6njr$8qEKdf^[)/o21P]K,=N6b/DHc%co>"qZiq\!Dn8],0CC8CIkM5H.s2@!V0K\61=1.]iC
%"VX=I2f3"4V%P8!'\/u%I?#M<GT:G9/eNW!6]ao3i?UeH9g^=5Z0`0se&hmNpY_!u?)DMV!_X4OQ.:I8s192(d'`F@qrcah>EJS/
%ip*HLcMd'E>/$a@@'(6um\U#LD5X2XlrgfdGdF;I!>2P9_dtIGndKR\f!8P(2[uHsfkb2(X`Vp<"ZLH<DhhP8%k_tAQ,-hkgmA_U
%5#*;U#tUVlRVko,m:t:2kmedB+-Bg3rQnVZ>,FLq0-u?!Cs??)^G,n-)0@eHTPP@7nF#0CJ(D>c:#SkXQh(n.=$IC$l<u7Tmd?qe
%PciK)en`kHH]Zj^9CaO*!=[+5KXWe:)g=/U@r'hmAH,iPCAK!Q8Rm_*8-t[Va^%>W%2V@rDAkjp.[B&?<MN*>5?L+5N7GL^*1!0c
%H86*^(_DR(mqN_,fIkP0D;PfoL4=QpX;?rZ+c0X4.q)<`54j6VfeeMjAR+cNht;4@n,2QXl)W(n:2T6-a=ofS63$>tQ9gJS==TpT
%Wf_#<B8"^%"gGN.JsW<7,^WHPh3$'`ZXk(_43(?hfV+l;_'`&MP=!SgL1!;u=\j]-n2cr)Tt>"EALmdIBkFNgL3bY^F8itN\b0C,
%V(F:\(Yu<l\@ZG\ALfN9euMqnW:-EkOU8F\!1%k%^dX;Fl?78.%A@U(47Ye?;8(3f/LpkcR?+gfQuP`,3+6+&7Rh%6&B8nX3$06t
%#TN@)_%Kp#i5,`j8lS#_Cj6?npi\UX1i[Z&m@Yc?M2gdNr=\HWWhfT(==g`_@(D'#$8cla%A@UgIM&i`Q1VQS_227YEu2)5M'I(h
%;`rr\A-VL?)FE+L3F';2f&%qT$YPX7`.Qb))6b[74Y6--f$e>Wdh'[Q/#d_$Cj>Z!a$=Wd._u0"A\S^j`J8Uq%A7P7(!?>eAa8`2
%YU5b?fI)=7-RXJ%V)MNG:7HR_@*g`dZ;i9fk;I!!G4K@@I!-R'?C>4sP\?k`iKS,OliaGV\SiqUqDF6!XAWUfN-`nTT6!<@)$lTU
%8Zj>*Pta%FCF-@ODAkjp9%d$4[A'd=WE'ot:q"9D6a2pV9!shUpH:L$P]@[C.PPY>L[cTX.)0tMb7MZo-MGm<[cWe=03$oCjQ!A5
%lJUP"[6/"^>D<\Ih-k`_KLT(M%uQBaBeC/?$Xch4RUVf(g3F2iRg)`uJu["%m<Wl#hh*5o&&=?g*O)=r%1cjKGjFdp+dB+]GV@K&
%P&5K,:<EVD3&Mn0`QkrWkF>?M^<VHJI#5nqb4AUoajf,t]qQ()U&5="=OIC2h-C^7C)XlimsJt;&KAh!4[i$jGs$_U>%CkbLNYj$
%-^a5&]4hO^.oi>,+H79_SqE-_P^5$iEkq#Ak0'^3CV=gK%A@T<..LFel7#8OOpOj7/=%!$Ud"-1bUC:Y&Y1LXkZXBM]WYMVg!"g3
%7'Z8iEJXZh6B^8A'6?QQd/BiJWU*dlA^JuPHiGuD;SDt201VOj9u=,,,%5B"g*D:<]:CMU#i!(thSl5JNU!';7>kc^qYq[r@B=\]
%:2:sFOm$U"6J;'dohM7kY>=UD>.@PF3CSc-&rGd](n59X?EtSG6RY;cVqqTXiS3H)=-i"6[A_W?i@h#2k;)REn*m%9C`5Xnp+5g\
%dLG(dmi%L,2;[+)!/5'lUlYUNjr8>amV3V+f_-ie]@_(*pUb*Tk'_8-B]&MCoUA,Z&JT?Cm:mM*fQNVU\JuO@(jmq@d=aKM!>gq"
%9S=%5_0Xgtp7S0p<f(T4TPWeCnC\d"knne+#:;e><pt-TW&dXm?t-9,'?]p?/JHTL)8b%O"lVgt)np8TjO\$\/"l7li\j<.:W\04
%X+Xu+4.Ct$[QX/nIp^+,bBo!j8ZX#P7:sNP99P%78"PifLmF*.B=e_h[V)!m>E&VqJ$s`j8JmNdi@s@ZaPp=^UYDb33h+,\<&@I\
%_lJJ?2@JgC($`t)VnUA2@"hBW/+6*hP),Z'6RZ0hr-Y)t7V3U3-cEP^c_?UO?%R&oEe-f!o3e:'h_]+,XeLahANR)UXB)BPAD`$G
%==5<CkrH5Q/RdYh)pGeFfeeAf?+s4VeZ'bFpYaj$(CBn)*CSqO)iJ5>W/MR0(W$q;?0R-o-nah@7!BpnE"V2h7"hC)$!"L2AOjWL
%\oq4\mg%N:QL"Jl>o@D<17qW,dJE$F%?U^b+\0PtVBM2k<4t&iAprUOLUodN/=p%@0AVoY=m[uWCI+KF")$YK\$-AJMBoM8-f<Db
%/4l>WTfYqu_r3_K9dS&."_5VPfn[$n@L7F0Mi55UUX@P@krFFI3ADNT.\/.Y(u'TM5!ktU`9&9i1^P;?<aoSpI:HiUPCTT.LdPh(
%+Nd^jS_%EknN9#'-;Fn:9\=`S9O,G:>R\WsFL;N#Cr[1aUXa;tp3uA59(T#/__k[eep<^Gc9dQTg=6#)&"85L[b[0r"C*1)boca4
%pIAO6K)s.oT233m3GD/@'X=uY#\?)J:?%,"feE:1Q1Vj#L%Gn;l:hOZNi+roh6e0,2B'Te9#KngM&YEh5+5TsUS_/g=Mpr:P7W3:
%d<*hXU!k#V6RY=<a?DCI,@>uI2W1C6BBg/%".$r(/hkCU(f%6\feeAfSZT[t3S205I?8NqmT[a\UaZ]"5qYs-Q(/dOS.MZpBaA8m
%7b[%hC?.tX3P$Ij#D3DVABRPP(/e^'=b9J5Xj3dePjL#=50["NH^)kJj:cs<52m+k4::4caCN9@pL'_mcB]W4mF5-")+c'DLd1Ok
%.F$efl3WGUUbGB.'97Y4Ct_>r8nR&n=!N]U5@&9>n)F3ER)pSdGZfn/a)D`?B@A?Q6rCCV./6b#5%(LTlGhq[b>e)]344&AcW/HI
%1k`0^Hb!Ibgcg,iX3d!kRbQPlK9Uqt)Pju#(581];2-h6age@]jn]=HlLHCp5I#/<$BT7<*>5ePoMI<!>A)Cb``btr)+uJ]>$o+A
%)<p6RF.#j&Ai22P\mVhUcDDbLm7_AGN>gL<Hs3Gh$1H#a(?dSR?Y@1(\f/f9eCh3g16cS#qr'A(X*Hq"8Dg!peO1:@M1IliJ(AR]
%]^DX?Pc_f?6K/sK9`#/B@Ef-5M3tq$^:4<`>c+`K6JB_^+dC5NW\UGP]'@"]j].8Ulm2iQd7f6c@!jpM\i05<^^!S$.,2kLIG0uV
%jqXMtKsnu-QrP#Y8VB%?EY4U(abEtn'5\XSg!9KSflSGTVMpEk4n?-;-(bHNZ15@YAMi?cSXiKU-s8)1B&`_U1"9-WqI,3q*)NE0
%SP&PsYY7rML2uC!1_$3rjXl`p[;mtq'hhRrECcC??V6D'L!T#=8ql-TZAl&Yr)nd(b3^cJ!`_.IX%0HU!bN*K($cMe#Lg\:2Jo2t
%AJY;50f7>3qf1_O:L0U2Oe,[I_A^iJa399Y%<]#d@1;8Gp[k.V/&B\iS-r0qClPAP:2=&iN$"_1g&JIZc0J*A.,1"*r&-HrNqX8N
%TLV2B4u!BJV"/:_4+!o+#Z3\23KM0&X/3;gUcoES_*t.(*NdLr$D5EM0Rc\#/E7Y-!qU,:\7qBhRta`tHEX8TNV%CB'qRF%P/0nb
%2df8>\q(_,h40osQuu2nl4pBYD4q@bf4,;MH9R23Z'cB\T\N*godRGqO&XI`qN`9Y%LNQ/"6sbB6<Wcj19PqgU4*F12!>A11l5Ho
%Kk!OgQBnae+dMJm+dC4a8\Bt`aub$*k&IQ$'CiPC=RM+/BcX][rN!)e+bZtl5CTFIorlLY/Gp-V'#"EL(4-n5/;1L*]4k]2-H^N)
%/O-C-'si>qNXHB['"SMCVarF?\1UiqdkJpJn(nYQ?"p>-_/,uXE6:B-W,,L8o:ap(:Noc>lYIJ+frfBBB<,1/ZEI(^o^K0f-bBL4
%M=neXFl[N#bjM>/PcaMDZ<As8kbX:0b\s4C[N&TC=:;*2mqDunA9872jm$OE`'_"gZIsN6<imR@I0HP"(E!so!5nB_^M!&R2di%p
%qRQ@5l=q3RfWK0C_eKq-l[*S_X9VN/Ur[uT#C-^bQ-JZ3)8Q"H\+ac%Q6aM9kW=@pLO9\!%F-U&rPF+,a;UU*";2UnC5,)>%;M%P
%W\Kpt6F4:WqYRP*bhU*Gn(?<]Q!$h]eLtJ+b1IcoGIoC^];Wq4<n1A5F0$gNVKr`![ft^MoHpl*no<4/X,e;ZGuh7M^Z_E'kehqo
%YXq>8<L/@UVPmk]\=Vlk#ERTN/8RA5q,u,BZ-Gir(m9Y">Gu:+-cUsJ5T3VK[C4H<pi0^+Qed9amHn7D5O+ukp;;EO`pNli8HY;M
%2l)JfgI_Mk2G&tM:Kf1$dbJDjDuHJiqTKHP[PFH!8j*dXU[iPr"e%*f=^Q[NW6't_d(60Ki/\o'(u0lIkMb4V3j#96'1l/O%r8FV
%IIs8IZhH'sF]OQNN0M9g[h6uDWn"de:FVf>WFS.5p#hAW[!5^]>n&ROf7ZSg%)N((T/UD+Q;Z8+ilp^R9G?e8(.l:?B[c(P2S">5
%nl<(C$a$-?4$K^B@!3SShhVGKT:e:m@&:@&>T"F&Xuq$_jSnPi*:@UOO"#1ZK^#;kId+8mZtOWr_`INnT"Jn.TOtic:juomriWm-
%_,,:1&_?IWAmm&m\TWjUNF2kGAH]GIHh<uQrQCP21)=Tk)SS$l.qahgl*JBX2?epS56b5a3LEp96cDREq4kPKDiS-f5Kc#$r!RQr
%4A7a,!Ae0dQlhDj7jb$%'sKC+lM/Jt_*5-[]AIL5,p-hO5dk9r?_tS)A8gEkCMPh./niX,jJEc2Ng(to*gF+mdam(jQ\hJ`ULWJr
%jeO.sU*TCCbN"I9PH1HkF?DKq-<D9PC3'(>WP[79TB=,l!k=2!RKO2<R[$9A%*h+II;h+n/#Wf)o]T/9(N5r'Kjq((>UR2p5<.S)
%qgbYaUU52fo2/Dq!p[*]o>^D\eA!Mp*]86:pA%u"9Mro/rXoH;Ll?VU<[Z'p6*+aBo44-;M"Nm%9>`uDmEq[UpMZ\]'dk.K.i[b^
%^`cC=KHFZu7/Dek]O5sTk=:RS1qA,5nm+D;)XX\fN4si>CkRN16V(8+M&;F`!V959E#-lCjj?$o4'RmbDkGqKB&;+G-oHNj(asHT
%U7eV,c\^&h%BRh;r:'/]H1[cKZZf2h,oh/%%SE`9NN[BF"scn>4YWY>!3:kMP4QJ8R@eWokXC]%DdQ6G%>q-RV(0\f6:3pC;apl=
%S^!+nk.jH@:gin$NZUDtna,*'X-t>r_I%=$P_O]VdriP".YLY:P$"Pn1bb]/$(-##'#!l";3PX2?Y7^_1<-a49b;97"]>=6$ZUKP
%2p@FH-E8hFp?SJ$O'4Ymq&HPR-$\pq@?`MP>^WhuR8!Z1D#j441W%o$I[sVrY<7*`gt@&;(P+5#:4Z4H(DLiV2DH-8%noV3.7W>J
%YW>OW0ZbD<*aP6Df&YN=kBA6:m8,War]CV!j9b-16t2EZ#"Bgu0NK_PQA/K#b+hI$T"TP)/<N.hSJsTDV<C3`b]>GdQ3+/4V4j_/
%4a::AYSinkA\Rm%;3PX2TALC!o<GD_'&LNVNJ*b&NWu_ME>`9(*=f15GWoG8*^+9/m-XDV5^/V(A0sV9>INIkTp(?O%m4(7EL9<G
%'_AcIXuq$[jOr;NGC]u\W5+XT*t6_(>7/j3"DmAH9K&\KS^3;,k>r`gB_(NWb<33g7bl87$:paLKRcN%LC]$U^l,T1X:LL94l'Td
%%j*rJErY]EDA[rH'G<nJ5XDGJ/[NEb"(UFJ_cRid=:O<ek],6iNupN"ErY_+<=#UA_b2k=c3a4gE@=g.R-#qF`Y]t6V?2JL+?UZ/
%H.:d*]9a2JjYeEH+k?WG;f6\f$5+lR''hpI"?5H0r;$&"RZALH\UXMSY)9#:QWIY(A81?5<Y9^?0/Ytuj-!o-O1L5bcX&e".k_\e
%jmEA+6Q?>B="sh[pJ^^]RNU5g;bTi<[O[C[20nohq-?Nq1h;]MTW5dRV(&5sG;lb_a0sCFk=?AVe+i_IC",Yjq4gGST"TQ$(GZRr
%4U(--_go@kl4Q\JJn;%m7#YOX^p\AB906C(oVfm<[u^!hjMRt7pEb3s(KT7:+f"@7ePe]#G]u3O3;_3/Z7i$*]rVe1$i.3.Q^!5Q
%)&)k/C/L>jV`p4k41Mc'?#Aq^Pkc-Hms6.$q=LCJN*"[W:SWTUXPVqE6NWi[_!pKcPet7#HlAjN7A]'O8FKI/kpD5KliLcB9u+D#
%*o*f;h@sQOC\"\X`WME/DdZ8IrRuWN_P3BDK:+A*R*<2T;7-].'>ns1SfFh!<;(mV3G34bW'k>rAaL\cO0Icl$$K*Ubn2Qlf[$\>
%%n]C%Aj?#QIikT_P5b>8:+mKQVHi.P<7rV=Oct=9Ue]WZZT\\VD$'=7&RO#!9IP98L,HeL`e,&,/6K.4.&X\G)*S-'Q`."W5rN??
%(LV6+;Y?=lOHN-#cm:-/E38.tMZ_(=arl:)DrF6j*kB46n0.<_98`sI[l,ta/Fcipq*fu5;'c$MfK%pKMg\RS]/ZK$9ssMqj78<h
%&!mSGSsJMiE)Q"&J\=.tc_\TiQr\!MG4(9>4d,\oYRt9)N0e0V6HJE4cVW/Nq:t$:Qh_E"et,)Z;ubA$o.S<tEI'o>W>B0IGcVC<
%F`N^Iq@#B5:+rYlq8,fhVl*LT*!Icu3sEmn729$&01u%^H<L'mQXp:\]r]Z;$aV+L?<2REoLK$;$_)Vs!S@cq?+qk%s(1jf?^P0Y
%KlnSHQpfp*Z9#oW%/rK)XEs;Ekr&a\rd)/8`sMnec2+]^J6,Z.4=qYm$d6Q'0\ZqCe_gc"PL1k%/#P;]I%E_hKVL7>$G9L7W#t[L
%jZiP2f2&D71tuF%nLVJ[VaJt<em:9I&E.Vr%!k.BX==pl@`i8cTC@URE3t!,@8`AA.FF<G.Lh^NFN2W;F6ssCjOrYJ)*c[[;d$NM
%6E<#:>n-f1U9uTU]:Ke?76$#]?!5Ya6Qakn?mKB6(:"-Q)B=V!l9L[#0IUXUJe."uCU;e%f1Dc9N>7g`VWhuo;"kjk1F,3W3(O8%
%F8d'o^mK8HO7`R7`Lq'QE\%KCf5*LlXrafe7Z6R"G]hRD@@"VMlrb))Qtp2On/V9e*"KhG'H87,=cE&4N`s8h[jI_9HTPlg*RW^L
%QSp23/A<92YrhXO2/Dd5aaiGOFu;trG.LnpYgC8.Ve>G\TPbD9/f8k&Vp/Gi)\KK#Hk(HLiE56;lHKUh70"K`d-Hl&$"m1RP*Vgc
%(2[od+jk]Jl6,%o/4i4:nK=3[_/,>@56Kr*a]HJ/8=&$MfMGEe:X\eP.:RZClYSb!hVg9W=j2UnZG\&sJZu\4#\SS6kKjE$Hg^&>
%KFsN^F?J9&T_[sr0^%7(fjt$YR$[@XZ3a);lJ0`l`5C@tAB88]X#^#tE&U<b:a<`l'Y?KqLO%2;S'T!)+<87#SS#D*&Voea8CRb?
%-p-LA8FeT\#iUaXVtG=dWH1K]SApV>I?k^IO`ACCXp,kA+-LbPjiPic1aLIeW&Aq"2BLJfCpGR&l8.o9$+i0M=Lh<hn0lREjM9.+
%[/(cD6,K<)`Q.%1mq`3+aSAtPGXOK1f:7X,[a_"j)2%!+YjE9e8."7^-om+F9N,l(]^bh1O+_q*H[X3TF_7.C?-G7"-1[LDCu\A5
%!+>*;!G'[KqB>Dta/qm"5h@B=:IDk5B'cp8W>Wt9nh=cSNs/KVZ\%H&k&\I6'3;*(<ZpLO+jrS:HV`'_iRK1,#nK%9:t1")Y7qC^
%,Yu(%Xpq,c/hCc%+?"UFe*8=uocmqU.,X%9/K6-(mMro]OeX*uW'Pk7SiOR_ib&J%:_dCJkmL.1$(<D0fV9Y6N^l*0_udjIOM.HF
%c]\imB\%LLJ8(f&V?Q"1Bf3cROWrqMr$7UX:G27&-u;7Mi.fX,,NO%\ZhtIQ3Cr"UnY.!KqX/#T)T%WuI'A?@ZdH"Ol(93L#iXd`
%7qii6LWY`r5dA@*aP:d,%-/OPLS@s,#]Oq[CV;]`Bp?&66*%BqMfq)^N`MI[S)PK7^(lQUPrh*X:HF708a.&tDfN3q;l6f0&3*C$
%r,]eY'+MU7$&<9SZa"&YEp`l',,tI7Ojs>5-oGFUL_GMXTNE.cR:[`<CW?MjD;!ZfW]psF#d&l+?W/"nC:Ntrs5&NHO'dZ)6I=9^
%"Df#e26B##1:o[fREZuX8rEeQatBo/4b:L7L$,B/\4@KXRH$Zn*ljIar-FT'DH^HIp!Xik<Bha;>ESEPO-(:"ib-=U69'6T*i7@^
%X9BQbg#D\;*;8]2k2d/acU-"Jp$4crc1Q^b'V0IGo@%XMS*s"b5udQE2(Grf/YU2*h4_eo5>."G_K,"'8"Fe.QYa?,A1i7q4KsKM
%=5#T%=os7h"p\V5F+/jid"L0;,b=K-Z%T'8]%X9;jec["=fN=V[bs"P9GnS'JMBS:0eFC/_^p[J2VN$?d7CBieUn<)Bq<%sGD=XO
%mCCa;p@IG>3[nQ;!jepFraJ7+hAQZI(aWNP8DId`C$RgJ59?1AkJ3=27P)aeP<cjhGH3q6Qs9s60Y0T,BjpN=74@p+o9Pl^SosHF
%XDV<f?T(q<0X[MTX!@UtYjH/RI22)EThq2gLiDTl'ja/fJd/==:;DSM$t,cOH[/J6aqn:+`.gR7nGFW@\e<3Hji+c>=:+\`>60%P
%7^KRrg[XP@q@a<:f,h.5S,I^K<ED-b5@E%LUe+Vm*p+CW5m:<PcX!XDkLn"VArE&W2JP1>.ui2[`=9FZgO<IU*%3I.JXX%iq_F8[
%-PXR`Bli'a#ntiueWL-<2Tc2i`F^Rc?P\qJ2/(MX8!qm_S.KQpTVD0nWL-=<ok:HsWnkIZ?&ON[d/([V.3gq_%NcB3^+:L&39nm;
%>?NK6$BuBm7Z:>_5"i^e_JL"_<a$H8?:Q;@Fi]&QC"6@doqJfC@<L$3<`p%V^nR`0*:$/"i`%ap)N?G"Y2Y\_</lIjDJrG-"0n_D
%)*%G(?N](WPS")%euFdSe^]4>`M2%FJSi"@E,kUAFKPZ`;?s9V]WH^\4Ks+S$QSJ[PW!_nj'mY8l0[XX6.iE>4B-aEH#u3G2BJDF
%R:ro/2CFYb9)<<k&rg4tbnQNp;8C[Er`O!T'94E6#:6SdbIJ-7l=bbc:^l)rlED^%6%,,XfbkUGm2a9=M2%#$mGK'32kEu_,a;/:
%)46k?!i#\6bI?dEE#tYk&(YD'16=u1hX&cM<Bkt<_PgL.G9EPrnkGe$0+`f*d?j4>DaA'dSJG1e<(m`.F[Xg]P;CHiS]XcQ_)TPF
%r*757:fYD19]bkB9bRaic'*gUC')5!Nl4VF#t>1JejbpKStc)QAl1@;h'h)08ub%S"Q2dca'Y.#Ip25a_D5-bnTl8WPPMOno#Y$u
%Y?lETi'*F)@"\enV<H5gWfH-&&Q]uI=;A),j(aC/BUE`WO.,1JS+94RqXIf1dM^/7akgRf<J54og!>r,of5XM'<\3IqI/Icb:cro
%:0TRu#a2V"/>R:*&K]i//f\7;=*K\heI='hT1@ba6p7r%5Y@4?k&?IsP;=I'#%,>RqmB>Z$"F5iUO]K2oa5m&m"u)-e73BL%09DE
%%C'>2!34UYU,6!RX7Or=#81f%\%%DB!k=J2NKR3@85up':t"$I'3>\U#V\W>#+WR*[A+'I)4s&H5CQr3>(j/-k[l*nN^n@;&ef[I
%)9/U;@(@Z^U)D"EE;'Isob-lCM4M3)'P`&(6d>pTfZXQF#WXULT*d8Ldun/tNoqgQld(>]2IXLD]>R=Rpj'9/5enlE!g>&g/F$J>
%Mj5[NLMd@,\h`2S^K-qb@W>f@UEDGtKo!'VXLOp(Wn<8k78*k`E8'L$6QC+ukjNZp3")K(QH$_pGm^X3r_*qG@&5.Mee!rL3kn8Z
%:.&?EBq-+rMQ?SpfMPonYc]th0;Ue833_9%c\J>0Ta7Nk3#KU$9ms)]q+npoUetBfj=pRrE#pF';2$DimBK=ui5!@9,K3QR\tK_"
%_#OgOA7l!C;Dp57Y/[Y&&78jPbJ4s:UY'h%`ZQ_m[[1dX"2ZNd-Z>#A@Yk>0_I;&tO"Cb`,:Pu_5rq>_o^Ni_AcV(q,NabHN<gCW
%c2cHgHV"S0-7+<qR?49n!(KJ@rYf+Kn_o14@q'-\;/+a&#UV/5C`JIL:r`n.Q&N5Kk3R^-=d+uq:L''7d3,GRO2Fa_R+aAN`c`#*
%/du,6N3;>+"?T"i;<T<"[2gu2.a8bHjEWp4'MWEm^msr1#a[RnV(m]A"-XFWL.+SU.lR<$Ll\UQ*i7CK,2A1_.mf(o<O-9<66VA5
%O)R=;^&;-Ah=7E^jFN:*\/?G$<#EVgEg]=K,dss1)3@9\l#Xf63#Rnt/e.OJA05(cp=g5"(*.Cf5YYc:lKlcD0%HU%*<J7UQnNJj
%o]IpoNp3u.$s4JW:r<]u0o0&=U%B[b\W'rPW<+1gR03%d?f'%Q7r2D0kh5`S<G[LhMESj\Z(=aG!oPh0+qm[+!jou4pP!4dN17f>
%grp=3_J8<TY[U;0Z,c4p5Q?##B8KNXJ2(hl@DOX[m_ZcZ=p5o#Jh!#)$='h&-1f.g.)uA+k^-c252'LYNT&4>p@Gp+P1k-u*F@&U
%#QYt1kj@,ZhB$OQ[JabA9.Zf>)?Ue7nYU7HO-8=DL@l/pD#?Dl3HDJH!3:P7+%iRG@K,!m_().nL,;!,>oiINg:./A/GO5MCeHBN
%9tt1r>=U;LgllUWhX,S*](Xk^E#j!FP"2oMH^Gb9]+*F.QjRKob40Nd0"-1fKFRMmemLRI[>i9^7QE`!9Xce^:^@`?T=-bk@H=bN
%j?AmW8+e5c,[fteV.5V'2IG7Z>tT>_.$X6:)md.c@fnD[ipDu?EF9Tm>^:)i>40M6!On<jS9_5]1c)<MD#X2iiAa[2[52r&0lhCH
%X$lsY(I.fbMk;/#aMFAMc?[>p`nh56:*M>W!Ct<V:f@"E84'&"b//[We3uBOJ,dg,`QC=sbcEW.7eWdS=f!KWZ\@Q#nNkJ4D;`M;
%LXfK_]--ef)EE/a`QV,t/YIAt668Ni`j?7S?1DIo,,uX"#CfL@!I7\l\LmZt>OJX$F1DJo_p"q`=+&@[aLB2QdRrU#6O!tZEoV%J
%=DiTf&c_fJ?T@u\O'hgdh#.(gDgq^NF^T.e)b*n.1[#hj%5VO5O=+Uo0tJN.eFeAL$`tKL`9oV=o"d*5(gM:FQZm_#QVp[!PE$mm
%QWW[`%Mo0q\d6VpO'B"O&jY_m\Mi;7;fa[E#NN\[C<:]WKju[C`9i)[YmP<ZgsJB#?S8_OdW,^(H'F-H5nJu,R$XTsq<eq)Zla*A
%OXJ[=9`[rDdZobt^Y*Zr;@#>^ROO2%4Y!S!dUaM2TD_UC4_pX3P-K34"U"ZI6WW?^_,U\(/!="ZbkX/lDOjW8@o$Y!!$]MU.&tpm
%l.-T`k<pP$V6;R#hpF&]),eXSN"$.aPe",Cihd$M9E'AN,9`UIi64.A173%87njDoDI&Y!4lL)=<jidVDc:*`Dd'C8;/CBlZO?MS
%GkQ<-dl&Z\j/UT*2ui1[^\[*Is75:-[pOU_e[o``hY`PhpB'mI(Vfe2gRFhMqsp)gr9aBnDr6!9Vu-5'r8hk2qXWAohqe>4hnApI
%2t+KWp2=mK+$9rj+#mB;q!Is&pD:Siqt2mT^&R6(n,E+DGCTVR0:i((kJ-lNJ,]<D]5QU,mEI<`l.^-jr9@&o5Q'p#hgP/fq87^^
%poj6qnPaoS`Xi+.lYdj$h-^2MId$c$cfnX2K\qGYm?R^9?B)eq2o#.\f3]VIg\o`Js6&:Rr:Be]r@7OJ6h!Z1).SXgQ6,#-a)CgH
%?iKTMJ$DN"Q"PQ"s0H?AEaWn0V/bV?hgb=dqeuK'[$UgEpL!pa?cF.<D$9!nph7jcs-0c*"8JM]WS9'j]`4mZH&'04j1B6d4oBT4
%\SL3+l/bG8p"`]!]RTt+5J2>fJ#2*)j+"f<fmf`4j[:u!!$uh'bl&fiK(l&76Qc%iepgMd@PCi<V4c`tS4-r$1M]_LLqgu)mr:'P
%*3,hOAUSn:8]VL.Z/*9E4XEN:[IQhYbEGFc7U1bZh_e9mKW9[\/ui6`6^aY/IZGiIiJW"+Z5TM<^al1b`5Ag_!iZ8fEF`U!hY:Op
%Z%:EM2:2FH"Wo1.iYZSgR<(25Y98<-Z_gE`[hr"g1!daj24kg4?OBK8Q.5O;.n-G[r2<9`rX?5'HL%&^WQC=Lb`<YZ>D8'9`>-*E
%Qj-7j31<eTO@BToB#`883mfpC-!>W[f`2HUC]MnB7bp6mH1TiD(t+c3R4@V+4r]$>7S9fM9h8Ga1bmMXW.F15pbrV*S1+7V__=:H
%1?+k@rN=<A*]Z#>S78Lkoq5PM?'Geg-7ECfcLkgC1.)m*D.$T/=E)fteHH\m_7@!]d08=@WnYWuA8;3!ModT]`CRKkN"%T7+uU[*
%NeIVbB!G8).K$TG;0R).O3r3q?c2:4omXdUU]sn=>K9LCA<r3l2HFX^cNErk&'kuq]P4O=jeE%"q*^;tfsh^XKEc`E#ZlpH!eakr
%k'RI[6<J_"G/IJ_#CP,&\]pGDTA+A)Q486BTCm[T$-Sh#dBS)K_![4YBN5TCPN`Ns35\XHb]s4t!IEH9dG):5K&h(D[.f"2B5qP_
%INT'^3!3^,8L5J*_n`B/Bo"X,TOrM=?'7?0F6S#7G+'?_+^'aboZ3qp(a0!=/RrEV12E#6!*_hTB#jIVUo^L'f%7Us7c6C2=H!7S
%9T[A(^0k8^h-J,X.R9D4=KB(T,](Jm1P$2L1s"jKT*%iS&ME.l'Iep$g(VpLH/8r<2T*sPd'=(SATaIZIh(pCMuES$U;9IC6:_KT
%:W"J\O_(h#a.ncXB2#ml0m(A.C9KbD@Wcs0In;DT'4qq+6>o4A@j@^MK-uK4,"GA!0ndH2>X?9#ZhIj=I!e>/q0Adce`.jkr;,$[
%]"@k-iO<0Dq[Us?,nra-($DNe_JoeE6lOF+$_Dp>H;oLH)?Fl!7"0tcZc%u#n6rhRe-jcX0t?J^<JHF%qDjV(.^1LHpOVq;Om7@>
%^C!;41g=!2Q=4K:*5<7?([q'rDc$D#;o2aDdmrgW"G!GI!uYBa&hOsKR,Q![5b/`hN6LQ<le"0:#a&WZg55@s4\c>:n*O!=P</EA
%H+(SGluYPRPGdGHmuEuo]`Phhg+j&B@+&B/i0g=A"F6D);R;0$d2J"Fa%RGS=\rQK8W0d>DZBOCB@bpk6)pj:AMTVlZTR6+cB'L8
%JD;6MP^E#(BiZOe_5(uCLJ?Yj[KDWk</1553rg:c'pZrOaR^"<Vfk.EfJg&koH39TLSI#+kLu90o]=Z:=W2[ZiP#I1ldd'..ZS.$
%S<B"Q*+o`cn>OjZB_8@LJC;7q!X4-=4QLriM\q[PAsOU;TcXQ^B0q_C17c*Ar;>;N=:HAoctSi8jf%13+Lr2u!ndFP&.Y)H/%)B&
%'AZ:+>[jZO*E#oO=Kst[&5Nh+pIB,J@Yr)\H'Pa_'ap5MaBaM50Xe8UQ&rhU4TB;Es"aM5F@IL#(UN8e<:kfuk?&tDZV57;<`!ZL
%n,mD=UKSm_?.1m#O`P&X7SrD9WMt]V<eA8374/5H3G7uCZ]TUY>4i\6mDX,*Ut1fDVY+E!nV^;70iDD*A#WsI2>?@OAD\E0$\(,I
%Ii+sfAf(M!='&7CY^2iQ:)PCfKu^9=5)8eU$Lh8@kB;1(J^XCECF?<K3"l^n)ES[q(_iE-l9V1!F^9.u/5=r9A2UiX3i`lG.jh5U
%(oOj58'f#;Q&$glm]7>u@f@26(i2&lP*"8eBQp$?,0^ck^(.c-dAtCmR/@D30f:%hHYVb$Q7Y8Y3.[;OQm)0Gq7)LJK%BkM3P2QY
%$SrJr`B<a.77IC5+[Tm;Y9Y@rjF0JgLINmM0Sr8*LNltI2+[.7r@n5p7*;-S_j.X%fs3HT=tJZ5[M\R-@/`I.k2,*tlGF>D4s(eT
%>Uh#Z@iM]RKIeP3l!V8@MC@gXB$ODKhMCYo2-Hg!87E!\Z,A[I*"6abm_jYK&Q+mIC&83Y!=b>dQIMG>AsE]d.hPJd-O:dDkk%\'
%pc7:`^iLH1:Q@@jb5*@=em8IS=$AF!J4t!M)u#-n"`GVHWp#M?l]oM>Z'6;p/jJI)H%m6E:mGGbEE7U(nZsJ6Pt\1]_pSTZn\b@R
%0I%3.dl!_Z$BPD;8E+\=>31"5mtujR5Tib>h].'ia5Im#e+nWmVp;t$$R&!qWM')6mVpQI_9J&G2M[l:BFCekhB><>A4c#8l0Y&L
%a+Qn65r:[61^b:,[&hEUF%dn80R8uh1.g@]'RnJt[*@_,c#QE-Y:3UQ[kAg[TY(0c&,72"W*'tTM0eM!V,Yal/D0kC2EKgmp%LOm
%lfdo:3?X)eq?)%i:t>`=oH0d)k;ch+TCA<lWMeo>6gu9qO"ZI^$a8^X_7$82i@1oN%p@_Fipd^i:J7H8duVc*"2e7"q2\L88AUr8
%6)tKqY!YM`ATi1/)K69B:C52noNjE+l=!,LG"K&tE=40eUC`6b)ELQa9s\4Y6jdYJg'R##h9>LP@32Q[]dRHCH+!pDrUQN`RpU8M
%#JS(HoC$n-*8+(cQ`mT5_.iD[qH4KE_`]t@0k$$Vf%gWcUGC_L0WI@q7=^?Vd)UWh(Vt1((-gb:5LPJJ3CE;AMh#BP&17GU(I8+r
%mb39u\&%`qCk!C7'LdQoqB,VnB[K7(rSStITeZfoE"RcUocilm7u0d5FQB.7Hpmh[3./I\eC5;71-%;c<fb?,VV,u?m-Y@hj4?rD
%WcYu2>s6H&,e(B!r>IfPfYd;t4T8'cfP[.95,jMEee"ih85[ftr#70n&)nEONJ%:Ae8KHeHns_-C_,I!SrMS\R4tX7C]>Nl[TZ@6
%,;mB>a1<E)`U+.X(9;V*eA1H]HEmdHV=sJnHLgf;4`3EQrpf=OO+7$&X378P]qFLTs7"j^5CN@JpLC1\_V[1HEnP85Mn?+RNnW6r
%QT]KFbC&nI4j1:2%Qa*K5QCHUT>%pepW`Uq'Tn!:jnd$B,=Z1^%c;*?]:NBt\B3j^rVfQqkP?tE(2N"hNtmFt6Wi\-@YpM7fnX7/
%b`(2$5kq;s)n'%0\ti0cpHn"-Dc[XeRtumMrJnSnYAO26K%;eZk)+ufS$,#g]DqG_c^(f,q7H.Wh]59j:[:r,f$dFpU+8R\Z[1Vk
%pAJK!eMFt_4fe%DeqY\MI?-)R>fF94"?%Dclm\YCGV.d#%RKA_KCKbEUdBrA@jU3WF2Pds@gs+XC5dH_G)]-T47ej!WjM_e2o+1]
%$D''fjmAINHO)9!r,glqFQ!+>i*@Lc-OgW:P4%Ocf6EqffLOeB(6nQ@=YFLN@o/(%;P[@)k8,u5GEM0KkZ^Lc\UohWD@bLPF)UjV
%XDb%\Y^7OlV+cBEC\em=/_hDUHiCn-o!]e2?eCIL'nl<ee&UZgiV'M3o+s='1a(3'IRnh;I/*TQ*29cngV\3\?^P$D,\Xe+-EuPB
%7_<I4$9DA#4`'ljKpbrOrRq'U"ie=N/K^^^J_Qr#a4jFMP*BhE'L7K@_ht=OR_4Xg9P2,@804P4L"jLgcb"u$A?b*sJ"Xfdm`E0j
%LZiR5p97hN+m/?C_B3sj\iRJomRsYpEt#8<j/?gCCI,dB(62ZZ`eLX#TJ8MWa:62R\ciSt^$+U)fW=R_Y,pHl!\YqE;;2n*?)Map
%f9oj3^B1T[GLZ=t?^GhOrP<NMXj%s*l_/LO[_B/'A-pN3.G`?nnfXcDp>]Y)S\0Su0=n^.EF!ZZj6I=@L=bRKg:fQ9:_O5I$[3OH
%QDepMG$FJRSLrV<[X5_gf)<.QlTX)^`A+sl_Lm$X?b#Ng"^Q;io"nmYfae>T?;0F#VD%.ZHnQ.V"^XsnK9jj\\Ba)gY4K'ojqqCe
%l_*'l(G>ICJhB"Ade#9*gkZ4&T"f5-GrBb-@CE%odIhlIB_QoSYNp9tf+kj`oODuKOU(9FpMa7mbBPS=@i;mGFBKTMX^:@Oj\/rL
%@lZW;OZPt_POkI'oC6'eb^qH_@iMs/kd!)Vg-'rE17l\<bK)7e+/6s*?+,(Y[e5kfd,dAmQHM"oS0nR/?B"'QjYq;;gfr7Jkdn;8
%g-'rE\c\;h=SCH(FGK(kf+-NJ(t)uP/rqZDEG>7\>o2Ne]68-<!prYeHe?0HX-Uj:T`\YSG;o"WgD@/*6hq=<-9Lo0#.O2:;W9Dl
%>.?_3pHl/g?FZY$du+WUN%RgH[!O7T/8nePV=@Q=\H4G/+184h7Fd7K@bne@6'oSilB\(0$G&'Bd-ej\QdrF9lRLSV5"=-]EmX6b
%m'cV,6'o;:MYAj:o];b%b71aPj8uM@[d8Ytn2c[:D-squVp]GO:3YH]^B3k'\q@FEhRZ=!)nH^7[aqXtWt]d2nu]IZiPg#3I"_]H
%5,c]U2:'3:)0N]UgXOm1BgaHsFiMo(^.=[827p`KNOfIh=5`184_f=kpa:;USbH/P3MAPAMY0.!iQ,J36QUE:ht7mM)S&"KqdNTM
%)XK4*X/`bTh_Ddm?k:u*GjB6J(3gl!AMIJAf3(+Iqr4_>]m9Ft<C'qPFU[a2k(C)qhmuu<(3h]&/BqOQ=3JNJgZN5<H:2T5H5(1n
%lnQ'm":+=#:?`sP/at6)/cE3]YJSjfgD;g5m]@G@COY$Y=5_n=&)'2hguTg:_"GY#7e%=$%_TtccejK<LMfLmCa]qI+T(ZqR7m#d
%*c9[R[XA(sFic9"Z8@ouF,V^Zo:Xot(G7dj6e<?g21:FdqsU36o,"RMhD,8Xn[?Zm+hA_4#OS+tE*]Ec$nMd,C\elRQfCBD(GB$R
%fEGQ@d\Z2<F?)l&g:b0*6sBUB]=1n1UO\'S]H)OHqME;_$/ZCcd:a<K*jGC[8^$Jf+gXkq*_TPj%4puNq#1[SaKh@Tei+aWYpqXr
%C1)8_/e",L[V!WiQ57'<7(LL1(2Ws#9DErHDnXu`[#N5i\Gh$&nr0Zj=1KRUSr)RTkZN<4:O]+Hnn3osMcf'e]Q#f8bKfft%TGk2
%5!lTJ6jZ,`^AbLdU>E2AU&D6YaZ]38C9;"dE#f*LE1D^=210FsDtbqYa/S::ZuM$W:&ICmqMESkN!&FMR*_([BrAZ`J$Yki:eXrs
%GOEbZ"C#ELp?_56l<^7u(9ID\OdTOnU(dqIOL;$D&>OHLE\9&%A'Sm586OcB6XE&K'=Z"6s)e8=FT25PcG,0EOB:PA:PoC)jrmig
%io=4Ss%s9Bmq+31k8UCge)+ku[SrC<K>F.9+9=PO_rd'u:G\pm.:Y[U3jFu\<\.@Q9u:*-FM^-N.77k\O8,RujQd("MX>a3Dit4Q
%UHXB8\*$8d<FjNg8ZW56X)XpScDVgceK5F(V1_9P7cn_m'ID4i:2(4tUn;3(,E*nBRG[LL[0-U@$V1K`[G1fRm3!ok7X1VM(PT^r
%Z:r-hBRc6A?.*=8&T)]mm`)o,2Xh]%<ZBdW$&p,<?jaH8Iqb5g0))0TAM(/kHb(Q<Cc=8=dsF1JM#NJ(.kU:mWWT1Ui"IRW1Pid,
%XI3rID!!Qcg4\p?5E<%b';g5P71gK]$,Hq[@O\;0kK[$=KorRMUR9j8*c@:8F*U\u6!*UI;%l<t>8JW6:Uk'ae"qbO"BWk@oh>fP
%5)QI;G]r%p&'s*MDq[\B?sJ3&3Wo/MG"p9\GAS:F:=nJQr8pLa*I?!B]WBBYNqDZ%!M1;eP*&ldANHD^BAi<Hn)XqEHlMW*s6'kZ
%Ko+3=cZ46.-Pi5PkD)+2%+4GQo`T%ko/SJEgkMqdq?HBuo`a34gA.W-8=gp244L_llje1!9WpJN[=s4nMUh/*o`\P1oaTaul3f_$
%]=hntQ%O)TktqEE;#fcVs6D\pOiFXi<G27(FJ`sXV0C$s;Vf$^^>XE9IDZjmgH-\<#Kq#rU7Sik&7:-9jP6k@IURqG6?`-(=DoTa
%gNTt"JG,`65kgH<r:qOKO-_EEpmf$f^4#tY3Bk$c]kJ@KUQPN>=T@Vfs63X8m]kVhd2F/mam,K@X7+C-9eP:pl^J<r*ar""?4XX_
%>gE"2NaL-*"eJ6PVA[U1H.*q&F+"XZQZIQeTuYIq8UJ*\J_"mjKD4R*%Nf!4hR!^6dE)</Y5`UHs)bFDopk>4<cS)%90K$=KbAr>
%5E"'j*loGKUV:TJEn2NEk@e2Fa_Xc1'2EIdesOLT"Vq:-Db=Ds?sj#l%?tD%=q_</Qe"!U0AmUu_'i's<`/`BC$]5j6b(_e`<lul
%UE"4(2B0h!URW(`aD;N$AnnQ%j1][/0_&-WrT1Br<m?u5C726eR[+I`N&?M3'*$s^bP*r#$`I,e^OHd[W1`i;$2(5Mg#O)pU]PHe
%@&O:G6&h.<ZM6FX*oH@_!-Lk<1M4*iR(A[IdsN%u@d!*%%6J4!:UUda_ac6#mCI6:;u&a_VoF:UK0ZN5HHnENr-:\uYrSuR6B$5S
%mO*RmYKWHeA'3rW]]NnS\Kqlqq!qMfr%Y7oc,I!W^g(&(/2@?b$[,a.(b.aOVQSLnD/_H4@+\a+N;8R>8/hm===D:G+uHE\0F]9K
%8h;YT@EL\f?nM&W^g;3NS&Do%4WArWYu2F>-:.l.P>dXu_q?An0NfZl"nH1IlC1Ti?*L8-@J$<=WeDj%D=qdPJCE%K$auJ-G:7JD
%9H`-LSRDmIKj'?[f+.<)@].N5X!"o2qdmJ"CmVPPgr,?:dA&CMf;`t@)%MKdBO@X;D;ab&Z@1W!YM&#8(7;-sG+BDgS1pMK^%FCK
%FQq@Rl$YK,#Oq\Bl%7c('5q@)ct1dpNuH[7Ju]^2M*5@26a"+%m=6>ghRJNqS)-.b(rj]#VDZV`WC+tBQ,&P6R'W3JYYKjG-;iS>
%bM!KT59FeRp;<Z%U/%*3*.*$IobMAV=)/0_3&R,dSi@2HNKuEp=_=2EeGq<*)&(S__Uq+>A>gtM4(2;ClK%<9,#;2j,]WnBn)8j"
%1i`l'mjUh?-j&-eBOH&]Nup'b4t7Z)\2KF`QI.u1RdENO[XRKBI")?]c>G;@&\/`QSUI-0ehOTJKrIC=ZL@o?'0ffW@[_>>nMh3,
%9("VH.dG,uE#j6iq.<XPZHqQa6YXGi'961oGS7FG\BpRLj(cFk`1K\$NiAV^6Nu5!QZ!u,:fLB-oB=p^H\JItG5,u(j"7gHZWs+`
%G`!Y]oE(&FCTf(B?k461*`^s"f%B9c-J'5\]ok[*W6D6S6Idm/#\V&k^4)t"6m_#@F7AR02]JXBMRp*bPRDPJW9QP)YrO<"ND4Y#
%g`cnNM/%f3@S-B3HVA\!4ll*1[:Ob"3'^RplUMENDVp-Kcg:bh?tj%Rh:nD7D#Moeq#1[C]j9JO8*+,`moF=#?hlN,NeLqS%b8%(
%J=$fqVbin-\@\/=1q+7-81G5k3-cl>o7N"h$+2?eT=9VA;mHS^_BL!_fdGHfd&@:J6sMus>M34/hdseLB;`F*c$1Q+i4AbSbJ8c)
%'GEqI[?T2>RcH@lg$fOGUl)bih=HHdA><:C>be)?.f3QJi-X4+8GZ(10[P^r1n:Y?SZ[MJTF^0u#+LK:WeA3b;D9A[ci\#TjgI0Y
%F&K:r6rFm&O!<=%0roCaSOXQT%t%S_^TP@QJ^1$2\')Shg6sNCms=W>pFi[aaT>BN9#)l&8G/jXTfPM0n[a`[[JD?p99YDGX?$5+
%F`3FIb,Y?[@#R/%#L2*iG)Z_R^$O\_Wq\".e#?`-c\kBDoj.:PG4q^b4Wt`:S"Z]ga_sRT1-HE-+;RurIhOVr_2M"5#l-ks2AQa0
%cA#7`S\f9%-#,qo<_GlPYR")3EIWqj_fqelkeVJ(iW:;U3KAi-DE*SH9Q+5f#^#/,GO#H/d]dMB45:R0*E/mA<5lskaDI]rHaDF;
%4CAaAgfOb:6#D:$-23?,,N9k$*\J5aZn`U>'RkY2P`VHgb=49`<l!qq`p0JW/CFnYF]9s\G"7AFQ>hYa,[QZbkQ_!Jqn-%E72/e`
%!R[B:Qqie*SM:e!ojS+r`k9aWf@X+)(O*TM-oP%A:Z4/(2b:9*MVteG:deL$=O&GEdod4/,8E@P/,:S1>tD2qTt')a`F#9b#)_Ee
%"NI9i19f79:,6u5V5[&>m&4]JP#FpDc_-_F,;56L1ps3l7qLB9*@mN"FPLj4F+9gfdlQ*\686IqLJJDgC/NZN'4O9*Z9hu9a75!Y
%mY.M-:f#Y0:.cX_qJ?":<Dm^i*JekBeh32I+aCa`/GK)k^4"6N6u/+*?f:a@:ePDKn5^[*@BQWRN:9*VL*%kSS_d3U-blKl5ubL;
%M,C!C()-Bo$DaH4?^)!t8ls971K-S0H>b;l<A;kVcs>sAH;k"6fs022>jn6qLqKej#aHp-@Z%1m`RQ\*r/QHOm5/?9'VT*__!JGn
%j.2`=Y"@5A=42@8;Rl<B+3P3/H0TOn$SoO.<QVZ*QCL=:+PfTO>Y=2nWhc>A#Y(K6DWXbf7$6>c>_OBB1tX))]&MGfW"rQS==tFq
%>EnE;EPUM"KIkh.p9on_K#r'Y(VK!'1YRlo(6J_D\uL:`/@\QM$B0bu@:;&"Pb8PacL.S";'khe\!-/*mi/UF3uJDu<#'Ke8mN2&
%$?%WT@LN],.ZW!*=-T]>+2hPlF/&j"\UgdM>1H&&.-nuBE^D5Ca9%bM2-cF--#g;m`2HSrW\Og2Pu018``9/"MH[0$>h<L;5uU&(
%gI7BM*CK[s)M_ffc!`Gf\R+nZ,KBk/.5:'lTHW:"=!,Htep*XhE_sW$/VeFCX=5Eq$H_ja&8NscdL(($8+/ai3Go(3F>/pahtQhJ
%=0D1aKm-Y:fi`;u@TmLO$aud?&@#D@K%K$hP6K,g+YoJILIF$6&JQ#bJd4E=CWl-\Q$-^%C^u=X>,77^2WJ<a.N3HBO3p\!IH#[6
%noU8jXJM-$AN6&/>u(r]+\m5:<g$`5P[$?DFr#De[2ZZPp"SRZQ0Wtrn7Yb%:gjLUdbu#hOe:X@`Q:Qq6\/ZJcCrf$=!7O)De5aJ
%3N2&4@[N#.^Oa"00C56f1Jh_"B@cL*#`EAs5t5!7Ll>6cpaA-lF!Ui/1QQiU'I?T>N+eK-6?.?9WMPph@RmX?5#0#.;Y@@'k`?<C
%:;aXl-jKq1WpYg^-+QZ9\4G!45m&Z17=[fa!u^e4Y_^L3RqYl\_NrX"rJXCE2.dF$7,\JGKOq4;+]dgR-%Z`IF^-&OM%6_i^'Do:
%&r,H&iI`'_![b>MgmRSQVNMOdq*^ZFC;-J==FQVPj"Kgo+-R)6.\&5e>`=4kmUa#0l0;s=L=&E'Q(eXr^?'Ca)$S7-6=9p:@>dF<
%_sj/tlX@l>X#_&SeY?ghECd6H<R:Fp,.;Sn?n$mU[7A2,#6sR*0,Kc3':]F]S)mMkKWWCrde'jg^[OPo7MCqm?'RUiA4:`l'Q1ft
%7Pji_X1+,+>ldDLGrluthua*A1b(mL.(nRtESL4IU?S5B+>%ff%5l^??qTS))rd__plZ6<a"YqiYS8^S;o'Bp[<L/<.meLU*2N_Q
%A48dc\hbXuD?CcQVN]<iW$kQcJ5t!$b0A>XNGU=]K;[5L?&pP""qq=S!\Y`BDh0YHZ7sN;-pBeOUOYH-Onn&]VP%T_AMYkA#!&s6
%Ef&7pe)@\paaD/hd$u[C\'>`E7#aMd[!H>2WHN3[e12n4jJ0epk:,kVXJV;6NbM)Tn:"3=D4KD.Uj@0\>[Mrpl6/"E,jB#Rm5S5[
%[-,NUF9*U5+.2;a<ML!-N$Vu,posnXo7fc+JWNJ36c_#67n"^U;'KD5KO)rOf"-cc=Kkbr-ocC(NQ!%[XM[8mLXo\AQHsVDLQ$+7
%<md3;MuNMB6Z5J$+:%sm3Sb4`a>AY<<CANoQH;m&f*E+43DXeQ3_V4=q0Nt82=,q;^q%fLk)K+jllO3g]41'<8+&JbV)TWK03>LK
%+D$_kpUH@gXu7%46l[41aI"@c26W'=1r9cTFi"LFlD68XZS"2Z#`q83r1lO2?WF2qC/0j&G,e;Vatu;%E1-rFG'1p_6[,N`.?[^t
%5?2@%r8e3tZ:&o`NsAUKeb1-C,@?6O'66SLhWpmCA5H\oRBfJ?`kR*'gdJ_eVid;R2t@SV&5b9ePifK57G].>dYBD1$-+`L/LhXE
%A=]S[#['XQPqkh3kAY8BrcqI1+akPF(4&r4/4;FQ'P>:P`AELC2fU*fPYG/_4AKqEKJrB_b-bOn$p%4qRA(27#u2!PEZ='?RDuV-
%!#r!J>B<Vt1UXp``=lbX.:i#/e[7Oi],Bb*V88"i0:q,"^oalD)]/I$ga2`QKe!$fQ2CIUq_/!BcW>sD#kO>qBB9-<?gQE3QSIar
%\aQZm31p,h0Alg.=+=JIg[W#?F6BX.#'OI,E-]su7D6q*2uh@9n%SU@(HnBu?`<iOS7er6@MOP^'KeI'Ei!k@L%8b=Hpo+B%39_F
%&kHsfZJ$n/S(N_GZ?Z.AS1SH;<fLdJK0VgN(an9+fDMNc$;^Lha\)qmT(@N]aWL,1&N<\?#u"<;jl0s).rI_I@1?#pL-d8sMWGco
%nYt0,gFL960&JFW]>NL\r_Rt0F!_k%G="tl!e>SSQe4#IobkO?.J(V.1/\dFPHUF!"=Ih4<srL*cVBTQ$3[i9E)K,35f)e/A_I_)
%=a!bf.\sac.7`=RTIM3*Y6_+(Qf-OT%1s3r<SeCFO!&?0KV$KQ:fJCo$11#&WO/GBbD\+i*/*376Dm?uD.FAFDtfOB9'buSHl8QF
%/An5U9p9LRK'Fn629ZO?H<6h7-5r?./oTs0^dY!G)2)a^@KU'\'!Q">k8^F,EmbGcE$F)FR@>[*ZSVj]M@St"#5JBl&T5/T>LG/n
%YMQqtM,soIF+2OIZnENReiRDFktjq6-j45/<I<`AAOHaciJ+jJ6&>AXWEMTdMc"lX=nd7`85qn&P\<i)jg''!1g"*@F>VW+0jl2'
%V`1&I*Th,SCU`ac1_POk=22LO(Mi%a[P[ogQ3Jm9lkt2FX]*q^8Ip-5_2jRj]>MAVRE<Dg18cuTn3o6_g3=6",i0M7_6@6o!^lr\
%`>*Mm-B_B;SE=^9=O@h*1@B?/Zu&oC*3poJiX'76WbKkJ#'.2QN<?iV.L<7Y`pL6V?-MFi`4k5K[sZ1#hs\sk%.EQm:nLC9@<tl9
%#.49AM/$t:DsOUi:lT[(Nnt;D+[/P&KpDSV.'PnG?h(ZkplWQm4h:SG$_VNH[bfQW_`r[eMK7]P$DBMf9Dg2IW32u'Iic:ZXpF43
%s*YRB4B2c&7"CEo2fNBGr'C`]CbY'K>MKJDl*LqtIsC"#USTgEOa8WI@)tt(:[/[/DZYm5C@RR)YE8SAjch(=jSWN;i9S2n5P:gi
%6OMF".R/*NEW^r(:h`.sE;EGCl"5&biMaZ\$9*OaP6^a=$dECXETsY;_@ZpoGHR$M]4SUWb/89=/Z-YaO[ZI92/9;a9lr#t=*e,F
%nUYmG).1lC?U.WcnD;No?7T^?jlSfA)"3G)T%sSuDSq*I@?Ep$!pq:B9S4:8.V#DjLN,)e,QJ5+CZ#30P+4DWK6m,QSr`jK0YkF-
%%u'fkrOLqo@n6j97no'N\daVe)LVZ7.\6Qt84f6\Ym1`UB"qkca>8>S[OVI$F`%,Z?_OKXirlj$N26]r5S.M*1`XJB=HXXLP!$Gm
%N`gUO5FAWMb92$`hAs-CE,!ag<LcO$8Vc5Gd>Aku96J/a-4;[]TJFqCe)9GdO2)L_#0FkE+/?G<CK\:W2*9!-pC)aD`r_bY-uaqc
%A!CqD5i._TRr<juf9-$9Ha#fSPo%X<O>02E<5a'UdH?aQ7IG'Y^F1j%Y*-<s1*\o0n-h6c<69e_=_iO).m[nuCo7-4pRp0d!f8<:
%3OI][mZI.PA3jc^nXqs:Qgc+--lE7`4N_3Tb)pR$l/_I+dA_0?_9`0\"hesg%Pd48i@\=HS5>doU(&s(rUTJt&0GI5bO1^rkj\me
%.\lhJF!"e4_OZ])(0u]3$2Bp-8),4&6WY^AO!MgF6+R8p3oaT;?uSPmcs7.!mEolY)-3\8ABWD8k#9!FpO?Zu0M8H,EsJ4%74RRf
%T,G]Te^G%!G7U!@P]NHeZE,7gn&TUBp\=0qCg>KGX,4qF^p8\\#ke+9;ps\4`EHg0M%WdL[Zognq@J5C@DZ.L#5&:&d25`Nd4KC5
%kgdY7M\$NKmJtcI=pVMg;+`D0.dTj''"/_ns.N5Y'Whk.'\4FtXB@InfL6]eJ=fnR)Wkr%8>n$HkY5\t-SBNgT`'BGV),JfJQCp5
%S7ie63i%gHQSK[-K1DqG&iCus'\72e9cQ`c6sACj+&Th-as<KXGdV,$MX:@Fl$1:h:Z?Q#j"QE7T?:`/+YS)O?sun_M;.i6%UO@O
%]c%!%q,/2&`J:^%2"5j85Jce/R+haBlBL%gWYmi#"YE25qd=,W`m\<e'_"\O*/%IQ=`HmIh1Ha2Mc-Ut`K5gc.R:4VhS.?hY!_&G
%9tZM0RuCO:QlT3S@al5]iID\uEVHocc<*76ZAchWK!q4Y!3*UP4R*AdIrd_3pTMQk6SLb2Uc"*jnUOE9K74)dQAB`fYH+ZC<f]g\
%(VIjci%d.1!?%+`fRZg(5':7bIFQ!BQl&6lPB#p"dr6R$@l/3]E<Ad:;2L>Zr-cqq9Z:-O!D^68_5:pKJlg53B$pj!HUK=l8MDC/
%*5XD.#>E@c,EZV!8FeGFEIu9s59\WDE(\h:@0C*3[u_pImamMGOS?OW`Sf0Qj+@/o;phY62a6\#E0'Y>76TCWj``HY+!7CL9=(qQ
%T#\>WGqQ?q6?J0!=;gkk35cbIM>D=9P)GnCEDPQ#OX!L0nnnaG@(\$76eu8ik`fV9.B4m".C6'HCk<,]N_$C1k`h:1hVcb5YpgpA
%#$g#B$VgF,38ZdJFb+m*L(+_Ai%.>ea@IPA&j*sRR4._N-F5^8`3JS.$m5\1]i](ZHbhjtfJ-66&6C?uD(8XWS_>'Z*ng*D@?B5+
%'tQ>/Kf^K0S]j?#GoRMBj>V\YKJ+R>=hXn>BI<U=n[*;/kZb\bE*CX+>ZWCE3%]_#3.Z&Mj/T8fB$h)t?dY5(E[=NoA@ZeA@?ili
%%MS:E8biNW.a?KIW1_aXXSp(`:gtaI+bG<\BcoMaN!Ms914<PW.W7O;4@-=iVR@0N?W3NC1\*?WKpV,f;$5eK0:s'P(Ge6+;&U%W
%2l^pKj8;B^!m+Ka+@*afiR0t\J/moH8u_s?8Et2EMhF:2Kor]6<WGn/%LsQ%#Qa[2-1;s$4Vk18KGLWPIXguQ;lAuf'Ih;L_4=Qp
%.TPlj8D&tE1LS3GcH.l@-BR8aq\]gCAP6[G'G<P3:"<p!*&ekj8,0,dVqf+D!_%9]eH?I$%Gq?9K%LonOiq>?#<F(RO&:+q2e6.s
%)>b4CoMiE!k'2dr#EP"sC.N'kcChUfHs\K77_8NU\$&50h$YF4VWDu:4>][Ynh>mFp(58`eB%]pOsC]?U.#81U'hlH-o4B$c46r`
%,ous,<<c$@N1_(e5GMu-$O"VB#\s;%JssW.MN*R)(I85fGKRKO8O/mZp86V))@=#=L_LRQ1V8=!0QsKF&kjYto0>[gSOu`p^]tBI
%OS55CW?I]'#[&06C[s'!^Q`^NOH#;424X3);+us>F$m=P`K7h)1%8)0/d\[B@8s\D)F[9Hr!'h'AGJ#eOpm?V[YZB'F=Y^6<dVp#
%3jP:S2[s?G['g(d)nG/g<sAhZ"KfREctS@$b%+aNftk$:c[WdQUfAZ%K6!#0X*E%.(6qUgofic1g@/,jZdFrXR[_R%V%Qd`+Ab)N
%#^,iu&2'H01=^CD2M][hLX)YC6>mu-n.%O&7]shq>n$MOp!8Sa:3[LbQ5Cm-N=>)hV2uh/lZV>MB\YGq]$BD@Md!LKX"kCkWqC,h
%.V@@IB#=U]'rNAocG1?DrbVW41]EgO*Tu>WYX!n0hpcrqMG]Qh1+J`)8@K.O)+`u\LTXh^V6=:aIXBH5gWLDi^>:\nAf?J"k8B:[
%K#eOZHO!FboF%jr]rHT+EZD&#gBcGb6Q7Xg89..Z#>DbLBVoL5c]/]J4T1!h[)a'B1%NlZ#+,C6DUh\u'8-6]KH^.oLKI1;3ge+;
%I4kBeasZ:$a*A[B<A=3%R;`ql&R#rF`P(ObA"5"`T;al'r]m70:3D6`bBn0*3XX#[W(h>DI:k=$=3[uq9-cAP7i7NcMBh0t)Q%_9
%@tc/Ra$k'nN'-&X&'Y]4BVhN1C5uFb?aWBtbn2E_("brnKT2^&f/9suaiu9sXD4Md%V>pueAak&f'B;pY:af9Qp;^aC'()3($_2C
%"+/UP&D6-Qe,I5J+^"oOQd^!XSO8W6dhEZI2'IihfbW-3?m,W>:tJqp&9F,r0VLS!%Pq2s[.p9pfG_VWo,.0F$Z8>r[*fgaO,u*I
%7QjUA`i:\R0'S*X0B@BA8+r[nH78kl&TDhL8<6U%MhkXa8?9'G6*d=R5Gfak:-LX"+dmIZlliFuk[B6mbG9?#2Z#sM:U%>tTMm^/
%8*)N!3kD,F=::R6E/sbmiA\E0dW<bEf^V,AWc]IN-0LULA<:elo?2$Tp@rTKSpcM_g!X'c;d#paM5TUJo9QXj))[J*dT"5kQ5Rl'
%E$@;uE;kiSmqC*m>[MNALf.^IL8^\UHA;Ar?\0,E]EI1O+KJ.:UW28\2b<No@K9;"IeTKq4j4=*d>fXKF%0#JVi5o@QJ`[CnTL-V
%8MJV8:[#'^dQp`-JRfuL@=Zt\Jr19b%gQpPP9?X;CJA[Yf_$5A(?6HU]ZmDp<)r_/d'W;@Md8'Vs&:Qd"Hq_dot<]!&)!Ejcc(Fp
%-dqt5]aTbk^^Q8f;I-#T(?n@.D?C6`fttR/np8Z(Lbs*1r!5'3$'%eBg7*eSDVB^?UUr?_2g#F+/<#rFi,`2&<j2LQ_(Ub5(C.C@
%N!)dmD^,hu/7$A%as1iK70K@jk*D/,$H%(/3CL&#WDK"`WDWSDn!?P9HuZ2t*PVo%7mWd!@#tL14EHs)nsTgN$6>oR0VDGlW1[8?
%bRoa6!5#k#e.6bl\W7:8R,P5=Z3HPj+Fs8TTRMV5D)&a^YIRY6j-uRREG'Z/G(A-<-44PG)rL#Q6/M5<>DN]h>T`NWUhla.hSF93
%TuYOC*(Z-L+GF*?B7?&`)Y`AQR;CF)_>/Up"OM@j@]7;`#7P_t:nTuSTuS$c>d*E!_c!B=Rn8Dm[h;ZV"=2`2_Y*"J>7FQ7=Hl1Q
%8g1!8NkP2\/K[rjk.;`W4,u%S8BgTRap'i'Jfs>W,b5DlB[Q?;%UPO&OPq#!"<'bp!jnU]h?6*g2^X2e10CC<>G5ksOT:#(AM`fV
%i`&@8(Cg-?`a#hoXHDs"9"_51VSknp8>lTY^q/2&mEI2O/1gr6@ns"58peY3n2[)DgfKg<?WUcOcD4q).#>q+[0;t!V#W2sIFA!V
%%=nj6HA(:F@I%Ql7HiP]`FSOkgiR.KJrku.WN?85#OjNg9uG_Me;Ko?ociW&q8b[NR8p-"E)Mj)4TR"!Ud_'a%N9g):Qu'0<uC7&
%>R[Y(bGM`7d9%PT"2V4W7l?AiQ!;f91r+H\l/l*6-[@A._Tb`B([_%fl!uT!,-9g0OanT0i;nu9FCgt\5CK%NNm>R?0_%H%!&"@s
%1,FeQCnNGFR1dSaJmTRrXUTieSFq-[5bqn?7&AQE0P:Ef"0X?JIF$bVcur_,WOlN?"ZBB'3ZTgfV0HcBL/*=?1<Kn1MG)KqW6e2B
%QODSF+g_D>%kge]9R(!ubO+JKZu;';,'+%f`O(XJ%o?oa-WNUr/<hk6b73UFTWIR=b8gYR>j+J;[TAi/4nDR7_(V-;P#:pDT%8G[
%N]O;*&i53tr"jWD:/Ij\$\'M/>s.IMqB=d[F'25&*DoqKnS1<2R.a]!,?*j"%hYn!a@*EmR`W90:,9gW+Eq[W@ZGKT%12m,\Y?W-
%nCs6[ZT6IU3qrh-[W$b=MqkMkXiQu<=?-^kMsVDs<S6ph']85<S@22">a6.Md+_u8Pd./X,/N'DYh%FAKMN>+UE*HVI6$GqXm3"?
%&0)b6d%?\q%C.CYX-K$*->#0J;2)Vl,[_+.TN%@/i'Hcb:k@q76&FX\Z$jR0\),@TUn8?m<?_CiAR8sJKCJW.b=AnSF=d,pLG(%f
%E6l\f+fi2UKu,)[d!CgZ(lT["ZKb!t]cp^Ak9+sW>RD]10n5*lGE.jsi>AOrEBGsR*U?/T\#MeALGi&"S1qB=@Dje@/1lUa(hHk0
%\QE]a0XGNu0srgp_LU:q"cE"aF_fFGmH<u5+r,[A_C:-&Er>@NG?RtPL<OG\Im*-pjSZ)7ZQO0@!HV5"XjU1gPifk"`dNRkls(4.
%2F35#Ya7`uh5%"_YUrHk2&1u;\u&6*PoO2E,U?*NN_Q?R6\d&lW_,^O/uD`a9l3cJ,&^$p;#?E$`4%?UhA3>!>kW<rB5hdQ(=T&O
%OW2OXr,67;8f2U13YioOH@_/;d^%\IBS-s?aX/JnVIMen`I&Ai6eDLd3`I]%P<>qGEFfea<O>UC_\0u8:V$DcD8XUYrhO<:"MR^k
%P*%P"PN>!p:p@f%=s.%'3IMeI+gL9Sn*l]q>G>dtTgI'R@t&f*I1=eJ7P6NKZ=[3+m8Khh2d(0r3'mXg#!2gAWd24#;C-SF,;3-8
%a_JpoADb3.P"\cS9#APIOlToa=o&-a3Qu+@SR#8##ZHT&A4;(dAD+mt6tTu2$OYp^]Rm4q.!?c::dMU]h9cmH<diY."d0NJ[?VZ&
%*$kd63hF7Q&(AG$5</6/+=Lm4duXc-Mu7F!Er!f^$fdG2AFb+&/^-$lMj!oQ'G=rq\ptF0:dR,SS?/cCj=uqS'NBag>S9RJC&i,-
%C$+JC^O4V4*uVMNJqPU&fkARO<H50-542DJ]:u%BR?\d?,irj`i$C1?2rY:+"]muHL.ARa]!J4</h:r(TW@Ca87g@GYmrr72g:>2
%JD.Of@E6RD+WCR0]:JR%M?=ir.n!ZSADroreQngLP(8;DONM?jX_0s`*;M,pL7E0g;hE=K\btN*=^6k5p,Bb_f9nn'O2O.4GZ`q_
%R&NAo1V)u_?.WI=n6BZuKsB=<7^+V'E6[ZL[Rq,6b/8ssaoTC/9S)KYp9YCj7*I4N')d^DWKrYj[>aKMj?@G)^9fc.@H6H+JSf'0
%=t3ood1siU]"EE"B!Sf4g`BaI3Ld\Jq.%S>X6--b<l4A)WG%;J]_hb4BLH6*_olh-Tg<_`o99J]P0c<H5_&;D1q5:uRGteh(3H]t
%'Le/o&D)>,)%G-5fp9Ho<1$j$Ha6&I2_H[7fWo0lF=cm__79r>=0EQTq8s#II2jg[o_YNq1VOBb'QW'n*r0NfCs8(kG9M"S%6'X9
%P&hBd`I-9B=%2B)1go8^%qDRp\M)Wtc)QI(%*Mu[irZ2_=bj$9So@]5(3>O9o02!0B8D*jLg`[I?8[VV&JYa"l/:.F!+;k%Krk(O
%8LD5jd4/,"1VbCJGHdoRFANr"GTV%m;-PV?s-WbKdncXB8Z;')e?J<tL2o4f:iK(2E?-ph&X]A5)`8T\)$Z<'W'S':#KIfA#a^1\
%\dTP-!bN,%%i]VTTPj$TC__[8NPq4%G1<Wq*B-C[;2TrWBtOb8S^6TJ#/<OkhAU^@llS:+2DcZ*9sYM-qm:G3Yc=TJC$Z4d;`Wa:
%%3er%kHD?r&+&]_3sU.k;]AS)<fl.q`oJ!u:N/ILT39"'$X1$!WNB1K8#o6Qm%T@Bch3AWO70&,9:f8u.gYIJ5X>i>Dq,$JS5pa^
%RUI2%i#:-E99e[sO\/]#%D=)GOT6j?qk><3fB_g*P[i#87:,R!6b-YN!]d(o6h/MSLk(Rj%E!g'qP8h<*"qY!=G:-\;U=Rbc+nBu
%;:_hQ2BQfijQ20^K,Q]h)it_\dL3=L`[5Z"'b)B\!k6t'=oGf;"B(Dnp(e@N,uiEqbaY;;nndh9XM&?#^(C.U>;?LJG)TIVLTn3,
%1c2*e!H^EWcl,N'JZ&/B41*CG\j92!mr*?t.Z3MQ<"a+N'`VVl=D3Us)'mM'XDZQ-TiKL=+q:9R*-o7L0+*CO.iFa+)1kp-+>.[C
%XIVrfa3dgnli`P<mq.3IL+#m<*ROL&qTfUCi^jeTX#/5],Pn16>2CA_7IVn5s-VK6kY6\j6%l@`%XGVtjBFoaUt(D*<,,uqk.kB7
%-9;D%G)q[27ed)sl"s0J-h$nhfW59Q>8JP1iaWi`R.[3+\e"uATmG'#:g@_7)sFtAO<[$I:f'l<@qe9,/;3m6'k?LTBit5oT$).n
%=@l1+&BM)%Y@nA'-CM7o&ELnfg2d6Z+Q3hhk\`VVA_+!=3XM&@=gs/l^YPsq=nB.I29RB:1h](PRSe>tD`'*"d+C/ZqGt5UURJq6
%oWhbNla!.U]:/a"oK;t]#'d`^OW.P8J<ulMK%nWOH#6u=g?rP<V_,O\(gT1Hd-c2B@$hull33I!it\e:j;8mhg`EnNd6e-WJh(KO
%M=m0iYVJ`5&=kE.*k#i;bTl[sSNbr]jgLYm%:!L[qtVDFT=taV+8i@;]+:KO4%=F"^23QAL$N>Qcufe600D_U<HQp^`=(;jZD$U,
%fU=unfCa1;Y.YCWN9R?KVN97R5dXY6+-o)B_QqJ:p@CXj5CFKb:>\IkM(3f3:tqbe[-c]A?+,+Z_VOj$kV?"+/>7`u'a,P2R:g`M
%GM2?%qpsHTct/eV4kJ,0HPG=jI(n>ggXR+G`W_9tNo>Ia5DE?qf@c?bUu,ks"q:oFBCE.NnLbD769(IJP(Sl/G4XdiAt%MM%PBbc
%[eUEe[24G>h`3"+;5Q3Z>M1qEY.4b1n!Z]LV]*mtMe;@)W'/&b_7Q0ia5Om=Dn\o2e_/3&l4_ac%_ZQ-?C7k+phmVV.,LqnD>(ip
%IH>:O(\1?Z;pi$-%bfGLAgT(o@D?'/?=#.gD^tq.m?$*%!ep3k;Uk$T\89XNe`+Ei#PKi7^q9%=H'1@E[;V]DQ'gktHI;*Hikg3,
%_P,6ajbeA28*GQsUA(fA[1ec!'nf)5r!%:?$boV7B5/j3#[U1s9!tDQ-tjQ'=$)$_IlLLoi6c<(k%2/?g;_G-=6`P"_4dga[4f.A
%ga"!U/P"JMJmH#[Q/mfM#,%*-h3h2(#1%sbDYW,K#RcRt>>$d(_F7_[g67^U8=9C_V@i[eP+TC+U`$FX[d^k,6<u<F2b3B+LY\`P
%P8NNLAH])""Cr75napA11ERrKPUq&ua+TL])&I@(YuEG&m)d&G@&"j3Ku6UYQEl>E<[cH`;.CDGm2E&XdkL&LMO^K3rrZ1cH?'`h
%_+"uDA<tNaJJlES3YDm0Ll:K>SfsIiQ7#7Y@)kb-GV,b=(o[bW`\osE1Ik`2A=B:W^su?,Sh<k'E1g_d;M=)W"%0Jie&)pmej_2[
%gcuT79jt*LU'Fl!(ag:qXUtph[O7GUHSoP)eUq;C-(Ka;*U*m7UV)3ug9[$OoBNLYSJ@$<8Fdr0&ul;4\i6"f%#[>-&2HL)7M$?Y
%3jZm^1X<Y@"L0!4(c>bX:HV!N^h060P#XiPX;@EEcT@Cc/5`W3+/lo0d?ha$0\*o5*d&-Hp'B*Ze\<NMMbM]]FIae9/0E9hd4J24
%Ypa#qieim"5^g,]F?VYd8]P3jE(4,)LIUd56R"MN<7%D6Rh!1p)S?H7%Xt_4>%&s(R7Jf_Ai7hQc!l6UW%6WG@Wf@RHbe,2.RXO;
%GMS#!Bt9?fbPGG.OGBs`\m1mbX+e-:rtUH?lfG)#^YV_qI-8E;4*<8IAVAK:6a^$&gs'\>;3hXfJr:42%JBkiKdcgA8CRo91-f#4
%+WHe+'5biJ$,Q=Sa4FB#6O*"0+meOZK9Bq'VVPG"7B*+'>gs^(8R'R"88%R$j6MOJ/^[%h"@bDU@]&6_7]9kKni0)I4;t(]]K!""
%GKhXYb)V`g\_&Wk4<["!B+cl!IhKLlU2O_>%kRE8"9O=6J/dB;X3(kIG$=;Gbr)fi(sM$*6&W>BXC?B?<$DW+1f$11rKK<+-rT"@
%Z%8I4OWu,TV)O/`3[U3s5G)X]0"UUeT\p>#JUBY3>$'m#UsFDX#9FU8iJHeKR<Hj89YgTsR1bWc/1S[t&+5?#)O0j5K8*(J;eGQ?
%V"01U(sA8,nIXWW+sA%Rf,4TO#`_bZVqPogKhUo&`*%=*qhuKl/UAgc+=M[dUn?ThN)%R!7.O%,118iWN5OsN!PDenckfT#B!&$`
%k@rHsq-XLq>\$#McH3"Jc-mUlG??)Rp,1LhmuNre<"/\uQfhpmY4S5S0^fkHe&2T3h-aJ?>e?qC(U>@?B"h?:HLttsLl0qg?(&bd
%fHEN7QKBqk7egd'TH*9__4lWZF-ZJCK(kX-'+pT_@`a>-Kbol-NlTT&_iEQeFp(m-S69A:XB":T:m!AF=J!YVIMO-n#j&_pq/?9c
%hY_kQ-XHN?hoQ>u\"'PWs.>50)-OhfN`/k;2YEMPFDumT1;&qm>$6:l2-3qLGejI,@&q\c^do/>9[BCY>G/!a.H#Q19SA_"IT'gZ
%:>QV-3@.L)AfW5=KVa\#()5-(h^2mK.a$<*S^eu^WZ)F.`)P^&e+.-rY^t9DN@:]pE`itiM"O2$Q%l34Af3ZY!l_*@c]GbiOX^F#
%#'*',L4C\^O!Y:"!mqi=h<Pa[1b9ms\f>LPNFGU[`'B,*"6'&"(+)N;,#_KiZjjmPi\KdncanIUeK4cNTpDgt;=ad/hpAFAo0U%r
%+oq3do/Y(9L3,]:b**1V#^B+VZ]MZX"6@V#a*EGCg![M2\"[>IV%iBR.L\rOM0uTk&6[++aRD[+@.uNb%^%8+22\'VP^'baMM]f=
%AAsKE7p[9D(AK?6,aI[)oLG]_JNH;q4g?RV_a+N+eg4VgS[`>MXF_+:EIdQHWeQ&_U<J"h8,e*Ab/)@!?ur5()/M!^e-h)s[\CFE
%>"MNOlGHri2M%Wo*)pBjN(#f<H*/nmWaOsh]!FgpYr+>_J>Mq#MM"o;1BVlc.ErZ9qRT`@>c8Qs-_&4V(R#o>AKnYHR'I'r*?'Gj
%P#nWBK!F`6AtI@$X#To,;3RYp12g=8$tgAI#Rc<=-5`lr]*DJgOMr5fe24)Q-@FgEg(]-R'lD82JnB_^<eUM\.na)Q1M3G&Bu6=4
%0r?cl;$P$'$Id[*+,=Th-nAnV6@Dh2=\W/H>)pY&JL?G!LN>Gm<r%o&WQ*Rle3/PPq-\tk9=T8`R@s"P#,)Hl2%fp'_I^V)J(&)(
%j3k>Woa/nD/Tf9.H*6./J^9Tj/>B-:!%Unk*%<hV@<Fin,Q-JWi\KJ3,>nfU45TLaa*gA`#q\2`fr)<SElnclN&6+MSB86%N@LWa
%L+9lW(>702Wk2n8k+k].X='=n_$[i=V9$/ZO3GX1dqVaBLC-GE):J%PJtsj#CE@et.B7Z4^C]M1\a9pAnBkO#W9,?Mo`HPi@0IW$
%<!nO'M)1nf(6bqC'H&_ZX/B^r(QD9c\>H8$6*p;T:1=?rf?E58:a7WqJ4rgD%IC#0_sI\C]Ga)8C<WPF``rikqI+ED@8DNT'B>IH
%1_T_=njCMh?k[rjWG"!'12;[oSJCWSS6#cmh66r-.n!-9C3)g4(aOBMBpb9UQ-?"rX4FLfjVj^e!p7l[Z9-I)__5NRSut'h/B>,1
%13SgRBKfu'AmI+H-k/!71@"7GJj-j8.f,rM!W6+oUJ2\0Zc\W+WKp.8dk&Cf\C%gHD!ns5&\K4?V!B/DUa[>PYI+>][XC2X/G0U:
%&?qNCm+>:&Ou#d!TR_J*s7DsRa.iG9'JX2'cik/jl3E+L2_^oCG#Zgi*>7#C9<d^mO`OJ6B]L`TQ2j$T(3640JtUl#C:QB,pt%V#
%R&CI]c5"43(u1nkcj38&7s3/)0FKk/G6R5T1pN[*@rY[VUD8P20seau,KI!bG.1LLE#Fe.Q?ii!J)8KG-kL,b\)Nkql;8dhfG/H;
%3@10SUQ@#pCRJ]1QpUab@NO>_chHgSg9/7Ll#g6de*:B1p8TZ/l\F51&H!*SWk$SmMp$/SQjEKd\EVUfB>)*0du[.RC(g`R?m3gO
%HgHT?DF6R#N'u!maO!cERsDIi"GRtF(k23!PMpe`qfS8c)Q;LDgr;m(Mtq.EI:eQb"1+0)_4p77GX6nt2hUZp8nk-:6p:qg)PsZg
%HQ0Jpn0on._>lhj"1RPhnHRg1mm'\k<M>!%;kT@h*ZY=pHEH"Tcl,kL4rCtAidZ)2r^&[,H%t>'YYe4*e18ig0GUJFl0\@%N5*ki
%.e:M&%X.)7enE'a9!Cu<1)R=_eTjC)(XA`KC8:5lF01uM*t"n7#M"'ukb!s56gFh@P@@o,ZE9T\n^?>SbZ=@A_VRe4Vq`sKA^Ue(
%Q,qGJ@OUZ)P!lrfQAn1PFIEmT.ZKr#1?M-]Vt:6Sr"7d(9@KEl-ZDG?,Zf^e<[6JeJS$do,;kS^'\Tf@%5F]Ddjdp:e92]^A'npY
%UFbp`7qr0.;k[n&!PAZM>=6*<#H8CpQNDeTTs&o-lA_rH-<-.n8a!QRG0Gr"qcZ@QrN'1[4>?cm$k_G)'j4C\&p5cki5@UK((WE*
%bbKjX6+?Upd/oIpC[M^T<n'>Ko+I7)aS89d;aT?1;kb;-d<cKN_oV?jU24h\6kE:Za,;EqKi\BP&Yl7X-5Dg7n*jQ/j42.<3U]FV
%Up'2u#O50JWd/&#,/6KVUC`08KoZuD)ld'0HIHBg?l8<=8ZCF9"m?5/\u->.6I^,a@^9(@Hrp&]%)^4YRpf/1-o573%KGufcS+@>
%'Hp1NU8E4@\7?.>U1B>d@hN'$f;]b,@'d^$3Wp43*%-]-nDBqjPL?\r*0@]u>#+kt&_/FOTb!/X^_%4tH6CBI0a90N"\&eSB$_ER
%l!WLMZAtu2^&uf40Q]Re7/^WZeL7s;R7<_gl`qom(HC3caMo[C%&WL9l9?-C=3eDL@ehoKYV^b9"j*iX0SYiJc\\NL"M6t`fnpGO
%;J:X>"9_@K6^noes&ta^X2nj#DC+V[Y+dlNDD6@ppUUX[j<j%JJhN5()_]aq@M?Y:_n">tMOKT8>.V^hATN#a-M:==$@.Q"k.?N?
%e\TIU,-.FSm.rP`@+;o0^I75/Yt,o]-!"5C6mQd(?c*5$=;.9o4q*lTYmlX#8XaOY7de,FPede=p1/;\mRFUU?kORppdHHg5+%O8
%GGfniS;6o@S)&C&"JcEId":GK&`D2q9W,.c)>JJ/]!1=b0l>dZ1F%![r5d]^&X^L+eVWD3!)0MD3AU`B9&TP+4#9]_9!\oM1F$&@
%a*)&;7@lt$XCh`8YqREbG%P-=.-5ZE);11`m*:P4^F5O$At0a^@#d&'@!l>;T`,""-$h'X3J`b.<,o*(fSC;Fe(TWT$BVB4=AZL?
%EcE3pcPpRV=3]P2P\q,Bf^Y>-3mFWIH;N*lSCDG:\r7\[fC1kuQN]6("_a]Bj=lls-82$f.45_R^i8tt-BVOC)$[*J!L=+"rD4MJ
%coC7QgXhsN^o/Mi&6C0#9Nd-]+]q>Tb<^5C*e=k@/pH/&=umO&0_3B!`HCOK#[:e.,p#,'@Y9b,LO#J92FYl'j#&k-^P,HBB,`6e
%T0i29V&1kQ6@EC92U6?Nm;f+k[AF5GW7,+/S&,u=#_BkMj;jW)OS$#f?biu1gcMq@a\3tFBX&PAI+.#]kAN#/l;abAeTIqn7TA@#
%B:AB^^<(s^RlHG!$,NZ.'l/BY?-c\$Da@<#4X]/0>n-O/*L5qTZh>]F5'1pr5SfW]%i"j&O@CQPD)D%Ho>*ZLJqKbOq?'FX0P]Um
%X+al8co$%'n*hH)K>FG0/"J[u3T4.o2?f-G[O?P/>\dT,#=J+:F88^(%Jn;["&/&K:[`q1B-VDsW4E1qP`9D;,:/q!N6_te%MHL:
%X>F>R1d/UZ-<32PgC895NhU4=FA&>olGj.eo=L>'JOLp`cDnXXP/Vf1&#qXp$l.T_oYodqLW^WnK]N@KNDp]_ek)m/3!*dB&#Q$e
%Z,$LjnD?Q&K'_[AZuR_4;=)<`:Q+?,_jVgJ2:/Fc],6reGQS/)a\u1laPNg4#]]2*UlIo;b_I-EZqFWh]QjV&b9ZAW188*=%L(2_
%dIe//o`GZmD1M%>2m7!D"=Sh+LT9ZY6&XZJZNF8UW5,AIgQ^fR4a&j0Y:][eN,?`ET`H'7,e8@F<)[S#UCW\,HnJ6=Qt;`K!clR2
%==h[e=AYsM=1\gFY+-/h@mM+E9EcD=Y8J#\3NrFT,!Y*E(jlD!2[$b4e7-Gg;#.&qg2Bjr'Vbs_^L\p"%>IDB\o(3I#6-AfSqdi(
%.?X8%OOUqe]-$3PZj/%&#+3+APRa$ED3U+eP\7mUiO.uIK14HLgHWh-!)fk#AfW'u4:j-6Z3?HB7t.LJ;al*)8]sp![E*+peG,j!
%$cF'n.l>F;LnE+"9*.V%l>-ocon\0B,&cKMIqFBfCmpB/oFKh7X*LG',2Q+::tM-4KA(dCmbhPiiDrfMdt_]_T^O9H0&:HSYou:N
%X<TmV^XIGf:J+H,DA^5r_%%]+4(o'7'W!_R<,!7q.3G+B>hAM9Jaa+\%(_%.7q6_*M1eB1^"*T*AO:C&j@?n=5UR&d5Sgr&Tnq+S
%QFiH]`:&i)1m.undhBb7:iL)e%jE;Gbo!p9[qbU0!Y5^NaTeK^_*%+!klHZ,!u<JfW)2Jj1+pW*;)6r63aN*64nV'+E6rC.oh!gD
%0c_R&ocQaZWOWPc)i`1M+sKuAL?,&B:2ksY!i5&uqDo7\Y^mAdMUZon0&UE<_3u+[+YXAt:]`TnKu`?oBd;\VIW?JCOS,ur3fDk1
%\b'jJ_!_dM3)O5Of,^%(q0dbFm%_k*'.OI4EUr2Z?ENcnZ`S:cAQIC9<<-piY.MDZme;&aL'T2BM8d0/;3M#@%!es"T*iNQKDYZZ
%36[SD--DI=JY9kea;REP'4e9AS]Ve@+pK5bH;da.ic$*B8Yi?$>7D[=M'hiTcG%4o3'dbrWcE0X-;/)<D&2;?G\'2;Q0UEg*qM[7
%]rRta,K[09[\or68Y<WKD,sR[b^2WSh[EF."?t)WYqn8sL3,;-1K,NW7*2LUH.WWN9rK,@1Go@Jc>)!7+N*gfDPfnUr`qRo1r9I!
%cKWU##gqNYX(3%c5sJ'mT,S^I9E6s;N,Frp>O7;FW^Zp5X.<*UE`o\3T@k(a,Aq7'm>OOknlK=6`$"]j6ao'M'11rJnW[@JS,l'P
%@6oXT8_Ob78&qkT=]Lk"(rX+<$hcmT#Hah_NQ#+nQL7M_TJt-lUY3D=Z3DJHZgJ@=l)uOr@.Vr\3)F!W0I]Ro=&A1)Pt#J,'fc^3
%D\N2&gq7`r7C8OVbEp+cHT2GCLMqZBZMuF,-7G`6lTD,6SmL:fj=hAKJn7[@0;te"o9Oj.$mbm?5qU7*O"<2JK*4&)e3O6V0cX%G
%='CO'r'[gt3VZRj$B8O,NKf5@Wu=*'/b"EKSg)\6Tk,Pd?UN3WZJ0AP0\5H@d`p#0J'bN'eM?5[YZuKF@_df8#=Ve$Ppg@[ajhP\
%%6@plYlfW89ZA=sh*DtNjon1OK)i&C,%D]^!Y$?[c7;sJ2?!X8[uN;[]KQUM.b-Yk\#I85R/dGQo*rYo\jr!X+kmE_%g`6`=TLed
%ApV*K\Iu?jU8;)r=[t0h6Et*YH.XQ7o"[1/nPdr$QW6gW9G$NtlnB,0$eI\D*9@.:SQ-<+pPp/pdN9=t=I&W6bR='@RFZ'J(Z!WS
%Xh5\Mi;5je$oG(`MStck,8H:SM/LLg<6gL&mA?-?;aHBJn09,/[]Bdn4Mt%`)\E9AL=;nd/O@>7Pr'>@Lj]A'K!er.V.tR[fIa%k
%W9:HO6&nR5N#Cq"8%h2n(/llW%mk2Ilu#C\0)?*6/+S-Y@_TdeEB/FX0:Y3OSEr)F+po=V#mcdPWMRgSGRP^VB/dg.X\)#p9T[&7
%5&0kFM\2?Qb>fj9:doZ1;M!t8KY\&H<FK%PjNhBgAGB2c([It<(!gDR&H>VJIa]5a?_cbcMeXL>X*m9!M?Du"_sTOd@`7V"+SMD8
%+e6"IT+SnN$kZMC%-;)sd=,Mg\;VPg<?$"We]e/;'q2>Q*##[+=p!SWA^D/#/.aHf47^"Clgiij@HU+>@Nd"RoSR0qQY&*9Yl(I+
%P&*D_V9%ON\+<@mC&s"cJ!1h(-ds@U'eJ=qd6n!`03/Y^L0IH;2'sdaAr">+dpYL72":d/)\tR&3Zt=s_-Ma@2bPFcq\it'6WW^b
%Aj9kDb4^oI;a*h*0-cr/h?T<gELsS"Jd*gsm(gT<2>A<*nP^U?PI[HG'1=uu8auUsEf`<r7t:#\'hZ=Q_U\gB_]"+6GV#\8VgD>_
%?3reDUg'NPbSWh+Y&GWj(,9?Q>HhWR]FE#>RtJ`t49K)p?r.H\;`nr\Ms7p%,o09cjBOJkI&L4f#XSr7PO!1L5d3R\Tb"a?AKU,g
%,W`1r97!#Si/#XMhC6Dp0kqhTbImrr6.UZ6l9U$qmAG@mi8N$6IMdK!I7HM\`n$o2',%)?G3@;E<o"^%>T'rBUb@-df;,Vi1p+oJ
%m=lr<WLa;W'F,mN]0Qm)qs<a[0QF*(ik/k]^mB;C_o3a>kRV:cP"']`hm^?93U9b]aoC\q^\[!X]8uEq3Lp<JRt#h[Vt^5iRs/5r
%^]3GSTDe$#mlnD!H2#ijOO2kaX8M5E:Z&hbo=&(VoD[mus75it!PsiZ&,t^0rr0\2^L-p*rrSO8lmi~>
%AI9_PrivateDataEnd
